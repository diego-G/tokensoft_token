{
  "contractName": "ArcaTokenEscrowNotProxiable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "OwnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "OwnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revoker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Escrowable.ProposalState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "TransferProposalUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_NON_WHITELIST",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_NON_WHITELIST_MESSAGE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SUCCESS_CODE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SUCCESS_MESSAGE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UNKNOWN_ERROR",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "cancelTransferProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "getTransferProposal",
      "outputs": [
        {
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "enum Escrowable.ProposalState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "enum Escrowable.ProposalState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "rejectTransferProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "approveTransferProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526136ff806100136000396000f3fe608060405234801561001057600080fd5b5060043610610202576000357c0100000000000000000000000000000000000000000000000000000000900480634c8cb99d1161012c578063a457c2d7116100bf578063cb0c0f351161008e578063cb0c0f3514610d20578063dd62ed3e14610d4e578063e7984d1714610dc6578063eac449d914610e4957610202565b8063a457c2d714610b8d578063a9059cbb14610bf3578063c4d66de814610c59578063c893446214610c9d57610202565b806370a08231116100fb57806370a0823114610a0157806395d89b4114610a5957806397af674414610adc578063a126bc7514610b5f57610202565b80634c8cb99d1461085b578063535a7c181461088957806370480275146109795780637065cb48146109bd57610202565b806318160ddd116101a45780632f54bf6e116101735780632f54bf6e1461070f578063313ce5671461076b578063395093511461078f57806340c10f19146107f557610202565b806318160ddd146105eb5780631fb45ec01461060957806323b872dd1461062d57806324d7806c146106b357610202565b80630e969a05116101e05780630e969a05146103e05780631624f6c614610404578063173825d9146105635780631785f53c146105a757610202565b8063012fe7fd1461020757806306fdde03146102f7578063095ea7b31461037a575b600080fd5b6102336004803603602081101561021d57600080fd5b8101908080359060200190929190505050610eaf565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260038111156102df57fe5b60ff1681526020019550505050505060405180910390f35b6102ff610f52565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033f578082015181840152602081019050610324565b50505050905090810190601f16801561036c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103c66004803603604081101561039057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ff4565b604051808215151515815260200191505060405180910390f35b6103e8611012565b604051808260ff1660ff16815260200191505060405180910390f35b6105616004803603606081101561041a57600080fd5b810190808035906020019064010000000081111561043757600080fd5b82018360208201111561044957600080fd5b8035906020019184600183028401116401000000008311171561046b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156104ce57600080fd5b8201836020820111156104e057600080fd5b8035906020019184600183028401116401000000008311171561050257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611017565b005b6105a56004803603602081101561057957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611162565b005b6105e9600480360360208110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611251565b005b6105f36112bb565b6040518082815260200191505060405180910390f35b6106116112c5565b604051808260ff1660ff16815260200191505060405180910390f35b6106996004803603606081101561064357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112ca565b604051808215151515815260200191505060405180910390f35b6106f5600480360360208110156106c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112e0565b604051808215151515815260200191505060405180910390f35b6107516004803603602081101561072557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112fd565b604051808215151515815260200191505060405180910390f35b61077361131a565b604051808260ff1660ff16815260200191505060405180910390f35b6107db600480360360408110156107a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611331565b604051808215151515815260200191505060405180910390f35b6108416004803603604081101561080b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113e4565b604051808215151515815260200191505060405180910390f35b6108876004803603602081101561087157600080fd5b810190808035906020019092919050505061145a565b005b6108b56004803603602081101561089f57600080fd5b81019080803590602001909291905050506114c4565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600381111561096157fe5b60ff1681526020019550505050505060405180910390f35b6109bb6004803603602081101561098f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115f4565b005b6109ff600480360360208110156109d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b610a4360048036036020811015610a1757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c8565b6040518082815260200191505060405180910390f35b610a61611711565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610aa1578082015181840152602081019050610a86565b50505050905090810190601f168015610ace5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ae46117b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b24578082015181840152602081019050610b09565b50505050905090810190601f168015610b515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b8b60048036036020811015610b7557600080fd5b81019080803590602001909291905050506117ec565b005b610bd960048036036040811015610ba357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611856565b604051808215151515815260200191505060405180910390f35b610c3f60048036036040811015610c0957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611923565b604051808215151515815260200191505060405180910390f35b610c9b60048036036020811015610c6f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611937565b005b610ca5611ad0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ce5578082015181840152602081019050610cca565b50505050905090810190601f168015610d125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d4c60048036036020811015610d3657600080fd5b8101908080359060200190929190505050611aec565b005b610db060048036036040811015610d6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cc8565b6040518082815260200191505060405180910390f35b610dce611d4f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e0e578082015181840152602081019050610df3565b50505050905090810190601f168015610e3b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e9560048036036040811015610e5f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d88565b604051808215151515815260200191505060405180910390f35b60a06020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fea5780601f10610fbf57610100808354040283529160200191610fea565b820191906000526020600020905b815481529060010190602001808311610fcd57829003601f168201915b5050505050905090565b6000611008611001611e62565b8484611e6a565b6001905092915050565b600081565b600060019054906101000a900460ff16806110365750611035612061565b5b8061104d57506000809054906101000a900460ff16155b6110a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613550602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156110f2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8360339080519060200190611108929190613325565b50826034908051906020019061111f929190613325565b5081603560006101000a81548160ff021916908360ff160217905550801561115c5760008060016101000a81548160ff0219169083151502179055505b50505050565b61116b336112fd565b6111c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061357e6028913960400191505060405180910390fd5b61124e81612072565b50565b61125a336112fd565b6112af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b6112b8816120e3565b50565b6000606a54905090565b600181565b60006112d7848484612154565b90509392505050565b60006112f682609e61237590919063ffffffff16565b9050919050565b600061131382609d61237590919063ffffffff16565b9050919050565b6000603560009054906101000a900460ff16905090565b60006113da61133e611e62565b846113d5856069600061134f611e62565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461245390919063ffffffff16565b611e6a565b6001905092915050565b60006113ef336112fd565b611444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b61144f3384846124db565b506001905092915050565b611463336112e0565b6114b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806135f3602e913960400191505060405180910390fd5b6114c181612557565b50565b6000806000806000609f548610611543576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f726571756573744964206973206f7574206f662072616e67650000000000000081525060200191505060405180910390fd5b600060a0600088815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1695508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169350806003015492508060040160009054906101000a900460ff1691505091939590929450565b6115fd336112fd565b611652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b61165b8161268b565b50565b611667336112fd565b6116bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b6116c5816126fc565b50565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060348054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117a95780601f1061177e576101008083540402835291602001916117a9565b820191906000526020600020905b81548152906001019060200180831161178c57829003601f168201915b5050505050905090565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525081565b6117f5336112e0565b61184a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806135f3602e913960400191505060405180910390fd5b6118538161276d565b50565b6000611919611863611e62565b84611914856040518060600160405280602581526020016136a6602591396069600061188d611e62565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128a19092919063ffffffff16565b611e6a565b6001905092915050565b600061192f8383612961565b905092915050565b600060019054906101000a900460ff16806119565750611955612061565b5b8061196d57506000809054906101000a900460ff16155b6119c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613550602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611a12576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611a886040518060400160405280600481526020017f41524341000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f41524341000000000000000000000000000000000000000000000000000000008152506012611017565b611aa282601260ff16600a0a633b9aca0060320202612b80565b611aab826126fc565b8015611acc5760008060016101000a81548160ff0219169083151502179055505b5050565b6040518060600160405280603c815260200161366a603c913981565b609f548110611b46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135a66021913960400191505060405180910390fd5b600060a06000838152602001908152602001600020905060006003811115611b6a57fe5b8160040160009054906101000a900460ff166003811115611b8757fe5b14611bdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613461602b913960400191505060405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806134db602b913960400191505060405180910390fd5b611cb8308260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030154612d3d565b611cc481836003612ff7565b5050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600781526020017f535543434553530000000000000000000000000000000000000000000000000081525081565b6000611d93336112e0565b611de8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806135f3602e913960400191505060405180910390fd5b611df3833384612d3d565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb698e31a2abee5824d0d7bcfd2339aead7f9e9ae413fba50bf554ff3fa470b7b846040518082815260200191505060405180910390a36001905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ef0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806136466024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f76576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134196022913960400191505060405180910390fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600080303b90506000811491505090565b61208681609d61309690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367960405160405180910390a350565b6120f781609e61309690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fdb9d5d31320daf5bc7181d565b6da4d12e30f0f4d5aa324a992426c14a1d19ce60405160405180910390a350565b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600060038111156121c857fe5b81525060a06000609f54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff021916908360038111156122e357fe5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167f37c022e8b41869a28d52a95d97338cc58db90c5e01027e7b5db628b620332d5f609f5460006040518083815260200182600381111561233e57fe5b60ff1681526020019250505060405180910390a26001609f5401609f81905550612369843084613153565b50600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061352e6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000808284019050838110156124d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006124e78383612b80565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8846040518082815260200191505060405180910390a3600190509392505050565b609f5481106125b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135a66021913960400191505060405180910390fd5b600060a060008381526020019081526020016000209050600060038111156125d557fe5b8160040160009054906101000a900460ff1660038111156125f257fe5b14612648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806133ee602b913960400191505060405180910390fd5b61267b308260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030154612d3d565b61268781836002612ff7565b5050565b61269f81609e61322c90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b61271081609d61322c90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a60405160405180910390a350565b609f5481106127c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135a66021913960400191505060405180910390fd5b600060a060008381526020019081526020016000209050600060038111156127eb57fe5b8160040160009054906101000a900460ff16600381111561280857fe5b1461285e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806135c7602c913960400191505060405180910390fd5b612891308260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030154612d3d565b61289d81836001612ff7565b5050565b600083831115829061294e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129135780820151818401526020810190506128f8565b50505050905090810190601f1680156129405780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600060038111156129d557fe5b81525060a06000609f54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690836003811115612af057fe5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167f37c022e8b41869a28d52a95d97338cc58db90c5e01027e7b5db628b620332d5f609f54600060405180838152602001826003811115612b4b57fe5b60ff1681526020019250505060405180910390a26001609f5401609f81905550612b753083613307565b506001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b612c3881606a5461245390919063ffffffff16565b606a81905550612c9081606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461245390919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612dc3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806136216025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806133cb6023913960400191505060405180910390fd5b612eb58160405180606001604052806026815260200161343b60269139606860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128a19092919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612f4a81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461245390919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b808360040160006101000a81548160ff0219169083600381111561301757fe5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f37c022e8b41869a28d52a95d97338cc58db90c5e01027e7b5db628b620332d5f838560040160009054906101000a900460ff166040518083815260200182600381111561307d57fe5b60ff1681526020019250505060405180910390a2505050565b6130a08282612375565b6130f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134ba6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000613160848484612d3d565b6132218461316c611e62565b61321c8560405180606001604052806028815260200161350660289139606960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006131d2611e62565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128a19092919063ffffffff16565b611e6a565b600190509392505050565b6132368282612375565b156132a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600061331b613314611e62565b8484612d3d565b6001905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061336657805160ff1916838001178555613394565b82800160010185558215613394579182015b82811115613393578251825591602001919060010190613378565b5b5090506133a191906133a5565b5090565b6133c791905b808211156133c35760008160009055506001016133ab565b5090565b9056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737352657175657374206d75737420626520696e2050656e64696e6720737461746520746f2072656a6563742e45524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636552657175657374206d75737420626520696e2050656e64696e6720737461746520746f2063616e63656c2e4f776e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204f776e657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654f6e6c79207468652063726561746f72206f66206120726571756573742063616e2063616e63656c20697445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644f776e6572732063616e6e6f742072656d6f7665207468656d73656c766573206173206f776e657252657175657374204944206973206e6f7420696e2070726f7065722072616e676552657175657374206d75737420626520696e2050656e64696e6720737461746520746f20617070726f76652e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c6545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158208da923c3ecce242fd05def5f7a5b5047941113b31b0de5d8091d820b02f99e8664736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610202576000357c0100000000000000000000000000000000000000000000000000000000900480634c8cb99d1161012c578063a457c2d7116100bf578063cb0c0f351161008e578063cb0c0f3514610d20578063dd62ed3e14610d4e578063e7984d1714610dc6578063eac449d914610e4957610202565b8063a457c2d714610b8d578063a9059cbb14610bf3578063c4d66de814610c59578063c893446214610c9d57610202565b806370a08231116100fb57806370a0823114610a0157806395d89b4114610a5957806397af674414610adc578063a126bc7514610b5f57610202565b80634c8cb99d1461085b578063535a7c181461088957806370480275146109795780637065cb48146109bd57610202565b806318160ddd116101a45780632f54bf6e116101735780632f54bf6e1461070f578063313ce5671461076b578063395093511461078f57806340c10f19146107f557610202565b806318160ddd146105eb5780631fb45ec01461060957806323b872dd1461062d57806324d7806c146106b357610202565b80630e969a05116101e05780630e969a05146103e05780631624f6c614610404578063173825d9146105635780631785f53c146105a757610202565b8063012fe7fd1461020757806306fdde03146102f7578063095ea7b31461037a575b600080fd5b6102336004803603602081101561021d57600080fd5b8101908080359060200190929190505050610eaf565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260038111156102df57fe5b60ff1681526020019550505050505060405180910390f35b6102ff610f52565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033f578082015181840152602081019050610324565b50505050905090810190601f16801561036c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103c66004803603604081101561039057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ff4565b604051808215151515815260200191505060405180910390f35b6103e8611012565b604051808260ff1660ff16815260200191505060405180910390f35b6105616004803603606081101561041a57600080fd5b810190808035906020019064010000000081111561043757600080fd5b82018360208201111561044957600080fd5b8035906020019184600183028401116401000000008311171561046b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156104ce57600080fd5b8201836020820111156104e057600080fd5b8035906020019184600183028401116401000000008311171561050257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611017565b005b6105a56004803603602081101561057957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611162565b005b6105e9600480360360208110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611251565b005b6105f36112bb565b6040518082815260200191505060405180910390f35b6106116112c5565b604051808260ff1660ff16815260200191505060405180910390f35b6106996004803603606081101561064357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112ca565b604051808215151515815260200191505060405180910390f35b6106f5600480360360208110156106c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112e0565b604051808215151515815260200191505060405180910390f35b6107516004803603602081101561072557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112fd565b604051808215151515815260200191505060405180910390f35b61077361131a565b604051808260ff1660ff16815260200191505060405180910390f35b6107db600480360360408110156107a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611331565b604051808215151515815260200191505060405180910390f35b6108416004803603604081101561080b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113e4565b604051808215151515815260200191505060405180910390f35b6108876004803603602081101561087157600080fd5b810190808035906020019092919050505061145a565b005b6108b56004803603602081101561089f57600080fd5b81019080803590602001909291905050506114c4565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600381111561096157fe5b60ff1681526020019550505050505060405180910390f35b6109bb6004803603602081101561098f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115f4565b005b6109ff600480360360208110156109d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b610a4360048036036020811015610a1757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c8565b6040518082815260200191505060405180910390f35b610a61611711565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610aa1578082015181840152602081019050610a86565b50505050905090810190601f168015610ace5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ae46117b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b24578082015181840152602081019050610b09565b50505050905090810190601f168015610b515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b8b60048036036020811015610b7557600080fd5b81019080803590602001909291905050506117ec565b005b610bd960048036036040811015610ba357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611856565b604051808215151515815260200191505060405180910390f35b610c3f60048036036040811015610c0957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611923565b604051808215151515815260200191505060405180910390f35b610c9b60048036036020811015610c6f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611937565b005b610ca5611ad0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ce5578082015181840152602081019050610cca565b50505050905090810190601f168015610d125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d4c60048036036020811015610d3657600080fd5b8101908080359060200190929190505050611aec565b005b610db060048036036040811015610d6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cc8565b6040518082815260200191505060405180910390f35b610dce611d4f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e0e578082015181840152602081019050610df3565b50505050905090810190601f168015610e3b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e9560048036036040811015610e5f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d88565b604051808215151515815260200191505060405180910390f35b60a06020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fea5780601f10610fbf57610100808354040283529160200191610fea565b820191906000526020600020905b815481529060010190602001808311610fcd57829003601f168201915b5050505050905090565b6000611008611001611e62565b8484611e6a565b6001905092915050565b600081565b600060019054906101000a900460ff16806110365750611035612061565b5b8061104d57506000809054906101000a900460ff16155b6110a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613550602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156110f2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8360339080519060200190611108929190613325565b50826034908051906020019061111f929190613325565b5081603560006101000a81548160ff021916908360ff160217905550801561115c5760008060016101000a81548160ff0219169083151502179055505b50505050565b61116b336112fd565b6111c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061357e6028913960400191505060405180910390fd5b61124e81612072565b50565b61125a336112fd565b6112af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b6112b8816120e3565b50565b6000606a54905090565b600181565b60006112d7848484612154565b90509392505050565b60006112f682609e61237590919063ffffffff16565b9050919050565b600061131382609d61237590919063ffffffff16565b9050919050565b6000603560009054906101000a900460ff16905090565b60006113da61133e611e62565b846113d5856069600061134f611e62565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461245390919063ffffffff16565b611e6a565b6001905092915050565b60006113ef336112fd565b611444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b61144f3384846124db565b506001905092915050565b611463336112e0565b6114b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806135f3602e913960400191505060405180910390fd5b6114c181612557565b50565b6000806000806000609f548610611543576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f726571756573744964206973206f7574206f662072616e67650000000000000081525060200191505060405180910390fd5b600060a0600088815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1695508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169350806003015492508060040160009054906101000a900460ff1691505091939590929450565b6115fd336112fd565b611652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b61165b8161268b565b50565b611667336112fd565b6116bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061348c602e913960400191505060405180910390fd5b6116c5816126fc565b50565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060348054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117a95780601f1061177e576101008083540402835291602001916117a9565b820191906000526020600020905b81548152906001019060200180831161178c57829003601f168201915b5050505050905090565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525081565b6117f5336112e0565b61184a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806135f3602e913960400191505060405180910390fd5b6118538161276d565b50565b6000611919611863611e62565b84611914856040518060600160405280602581526020016136a6602591396069600061188d611e62565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128a19092919063ffffffff16565b611e6a565b6001905092915050565b600061192f8383612961565b905092915050565b600060019054906101000a900460ff16806119565750611955612061565b5b8061196d57506000809054906101000a900460ff16155b6119c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613550602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611a12576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611a886040518060400160405280600481526020017f41524341000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f41524341000000000000000000000000000000000000000000000000000000008152506012611017565b611aa282601260ff16600a0a633b9aca0060320202612b80565b611aab826126fc565b8015611acc5760008060016101000a81548160ff0219169083151502179055505b5050565b6040518060600160405280603c815260200161366a603c913981565b609f548110611b46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135a66021913960400191505060405180910390fd5b600060a06000838152602001908152602001600020905060006003811115611b6a57fe5b8160040160009054906101000a900460ff166003811115611b8757fe5b14611bdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613461602b913960400191505060405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806134db602b913960400191505060405180910390fd5b611cb8308260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030154612d3d565b611cc481836003612ff7565b5050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600781526020017f535543434553530000000000000000000000000000000000000000000000000081525081565b6000611d93336112e0565b611de8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806135f3602e913960400191505060405180910390fd5b611df3833384612d3d565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb698e31a2abee5824d0d7bcfd2339aead7f9e9ae413fba50bf554ff3fa470b7b846040518082815260200191505060405180910390a36001905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ef0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806136466024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f76576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134196022913960400191505060405180910390fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600080303b90506000811491505090565b61208681609d61309690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367960405160405180910390a350565b6120f781609e61309690919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fdb9d5d31320daf5bc7181d565b6da4d12e30f0f4d5aa324a992426c14a1d19ce60405160405180910390a350565b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600060038111156121c857fe5b81525060a06000609f54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff021916908360038111156122e357fe5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167f37c022e8b41869a28d52a95d97338cc58db90c5e01027e7b5db628b620332d5f609f5460006040518083815260200182600381111561233e57fe5b60ff1681526020019250505060405180910390a26001609f5401609f81905550612369843084613153565b50600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061352e6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000808284019050838110156124d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006124e78383612b80565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8846040518082815260200191505060405180910390a3600190509392505050565b609f5481106125b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135a66021913960400191505060405180910390fd5b600060a060008381526020019081526020016000209050600060038111156125d557fe5b8160040160009054906101000a900460ff1660038111156125f257fe5b14612648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806133ee602b913960400191505060405180910390fd5b61267b308260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030154612d3d565b61268781836002612ff7565b5050565b61269f81609e61322c90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b61271081609d61322c90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a60405160405180910390a350565b609f5481106127c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135a66021913960400191505060405180910390fd5b600060a060008381526020019081526020016000209050600060038111156127eb57fe5b8160040160009054906101000a900460ff16600381111561280857fe5b1461285e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806135c7602c913960400191505060405180910390fd5b612891308260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030154612d3d565b61289d81836001612ff7565b5050565b600083831115829061294e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129135780820151818401526020810190506128f8565b50505050905090810190601f1680156129405780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600060038111156129d557fe5b81525060a06000609f54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690836003811115612af057fe5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167f37c022e8b41869a28d52a95d97338cc58db90c5e01027e7b5db628b620332d5f609f54600060405180838152602001826003811115612b4b57fe5b60ff1681526020019250505060405180910390a26001609f5401609f81905550612b753083613307565b506001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b612c3881606a5461245390919063ffffffff16565b606a81905550612c9081606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461245390919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612dc3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806136216025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806133cb6023913960400191505060405180910390fd5b612eb58160405180606001604052806026815260200161343b60269139606860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128a19092919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612f4a81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461245390919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b808360040160006101000a81548160ff0219169083600381111561301757fe5b02179055503373ffffffffffffffffffffffffffffffffffffffff167f37c022e8b41869a28d52a95d97338cc58db90c5e01027e7b5db628b620332d5f838560040160009054906101000a900460ff166040518083815260200182600381111561307d57fe5b60ff1681526020019250505060405180910390a2505050565b6130a08282612375565b6130f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134ba6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000613160848484612d3d565b6132218461316c611e62565b61321c8560405180606001604052806028815260200161350660289139606960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006131d2611e62565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128a19092919063ffffffff16565b611e6a565b600190509392505050565b6132368282612375565b156132a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600061331b613314611e62565b8484612d3d565b6001905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061336657805160ff1916838001178555613394565b82800160010185558215613394579182015b82811115613393578251825591602001919060010190613378565b5b5090506133a191906133a5565b5090565b6133c791905b808211156133c35760008160009055506001016133ab565b5090565b9056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737352657175657374206d75737420626520696e2050656e64696e6720737461746520746f2072656a6563742e45524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636552657175657374206d75737420626520696e2050656e64696e6720737461746520746f2063616e63656c2e4f776e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204f776e657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654f6e6c79207468652063726561746f72206f66206120726571756573742063616e2063616e63656c20697445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644f776e6572732063616e6e6f742072656d6f7665207468656d73656c766573206173206f776e657252657175657374204944206973206e6f7420696e2070726f7065722072616e676552657175657374206d75737420626520696e2050656e64696e6720737461746520746f20617070726f76652e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c6545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158208da923c3ecce242fd05def5f7a5b5047941113b31b0de5d8091d820b02f99e8664736f6c634300050c0032",
  "sourceMap": "256:2518:12:-;;;;;;;;;",
  "deployedSourceMap": "256:2518:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;256:2518:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;982:59:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;982:59:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;739:81:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:149:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2577:149:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;742:38:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;492:182:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:18;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;492:182:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;492:182:18;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;492:182:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;492:182:18;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;689:177:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;689:177:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;650:93:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;650:93:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;1636:89:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;786:47:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2576:196;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2576:196:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;446:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;446:105:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;485::10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;485:105:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1567:81:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3879:207:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3879:207:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1495:159:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1495:159:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1728:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1728:125:12;;;;;;;;;;;;;;;;;:::i;:::-;;5852:560:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5852:560:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:87:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;557:87:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;596::10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;596:87:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;1783:108:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1783:108:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;933:85:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;933:85:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:59:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1018:59:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1928:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1928:127:12;;;;;;;;;;;;;;;;;:::i;:::-;;4573:258:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4573:258:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2157:168:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2157:168:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1202:220;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1202:220:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;895:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;895:117:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5024:822:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5024:822:13;;;;;;;;;;;;;;;;;:::i;:::-;;2307:132:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2307:132:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;839:50:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;839:50:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:222:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;266:222:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;982:59:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;739:81:18:-;776:13;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;:::o;2577:149:17:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;2715:4;2708:11;;2577:149;;;;:::o;742:38:12:-;779:1;742:38;:::o;492:182:18:-;1024:12:20;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;607:4:18;599:5;:12;;;;;;;;;;;;:::i;:::-;;631:6;621:7;:16;;;;;;;;;;;;:::i;:::-;;659:8;647:9;;:20;;;;;;;;;;;;;;;;;;1268:14:20;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;492:182:18;;;;:::o;689:177:10:-;391:19;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:7;762:21;;:10;:21;;;;754:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:21;851:7;838:12;:21::i;:::-;689:177;:::o;650:93:9:-;391:19:10;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:21:9;728:7;715:12;:21::i;:::-;650:93;:::o;1636:89:17:-;1680:7;1706:12;;1699:19;;1636:89;:::o;786:47:12:-;832:1;786:47;:::o;2576:196::-;2672:12;2710:55;2749:4;2755:2;2759:5;2710:38;:55::i;:::-;2700:65;;2576:196;;;;;:::o;446:105:9:-;501:4;524:20;536:7;524;:11;;:20;;;;:::i;:::-;517:27;;446:105;;;:::o;485::10:-;540:4;563:20;575:7;563;:11;;:20;;;;:::i;:::-;556:27;;485:105;;;:::o;1567:81:18:-;1608:5;1632:9;;;;;;;;;;;1625:16;;1567:81;:::o;3879:207:17:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;4007:25;;;;;;;;;;;;;;;:34;4033:7;4007:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3975:8;:83::i;:::-;4075:4;4068:11;;3879:207;;;;:::o;1495:159:12:-;1568:4;391:19:10;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:42:12;1598:10;1610:7;1619:6;1584:13;:42::i;:::-;;1643:4;1636:11;;1495:159;;;;:::o;1728:125::-;352:19:9;360:10;352:7;:19::i;:::-;344:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:45:12;1836:9;1801:34;:45::i;:::-;1728:125;:::o;5852:560:13:-;5955:17;5986:12;6012:10;6036:13;6063:19;6127:20;;6115:9;:32;6107:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6187:32;6222:17;:28;6240:9;6222:28;;;;;;;;;;;6187:63;;6272:7;:17;;;;;;;;;;;;6260:29;;6306:7;:12;;;;;;;;;;;;6299:19;;6333:7;:10;;;;;;;;;;;;6328:15;;6361:7;:13;;;6353:21;;6392:7;:13;;;;;;;;;;;;6384:21;;5852:560;;;;;;;;:::o;557:87:9:-;391:19:10;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;619:18:9;629:7;619:9;:18::i;:::-;557:87;:::o;596::10:-;391:19;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:18;668:7;658:9;:18::i;:::-;596:87;:::o;1783:108:17:-;1840:7;1866:9;:18;1876:7;1866:18;;;;;;;;;;;;;;;;1859:25;;1783:108;;;:::o;933:85:18:-;972:13;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:85;:::o;1018:59:12:-;;;;;;;;;;;;;;;;;;;:::o;1928:127::-;352:19:9;360:10;352:7;:19::i;:::-;344:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:46:12;2038:9;2002:35;:46::i;:::-;1928:127;:::o;4573:258:17:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;4706:25;;;;;;;;;;;;;;;:34;4732:7;4706:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4674:8;:129::i;:::-;4820:4;4813:11;;4573:258;;;;:::o;2157:168:12:-;2235:12;2273:45;2308:2;2312:5;2273:34;:45::i;:::-;2263:55;;2157:168;;;;:::o;1202:220::-;1024:12:20;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1287:66:12;1312:10;;;;;;;;;;;;;;;;;1324:12;;;;;;;;;;;;;;;;;498:2;1287:24;:66::i;:::-;1363:26;1369:5;498:2;671:23;;665:2;:29;601:10;649:2;:12;:46;1363:5;:26::i;:::-;1399:16;1409:5;1399:9;:16::i;:::-;1268:14:20;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1202:220:12;;:::o;895:117::-;;;;;;;;;;;;;;;;;;;:::o;5024:822:13:-;5151:20;;5139:9;:32;5131:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5247:32;5282:17;:28;5300:9;5282:28;;;;;;;;;;;5247:63;;5346:21;5329:38;;;;;;;;:7;:13;;;;;;;;;;;;:38;;;;;;;;;5321:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5528:7;:17;;;;;;;;;;;;5514:31;;:10;:31;;;5506:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5676:59;5700:4;5707:7;:12;;;;;;;;;;;;5721:7;:13;;;5676:15;:59::i;:::-;5779:60;5796:7;5805:9;5816:22;5779:16;:60::i;:::-;5024:822;;:::o;2307:132:17:-;2379:7;2405:11;:18;2417:5;2405:18;;;;;;;;;;;;;;;:27;2424:7;2405:27;;;;;;;;;;;;;;;;2398:34;;2307:132;;;;:::o;839:50:12:-;;;;;;;;;;;;;;;;;;;:::o;266:222:7:-;364:4;352:19:9;360:10;352:7;:19::i;:::-;344:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;378:43:7;394:5;401:10;413:7;378:15;:43::i;:::-;451:5;432:34;;439:10;432:34;;;458:7;432:34;;;;;;;;;;;;;;;;;;479:4;472:11;;266:222;;;;:::o;867:96:14:-;912:15;946:10;939:17;;867:96;:::o;7428:332:17:-;7538:1;7521:19;;:5;:19;;;;7513:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7618:1;7599:21;;:7;:21;;;;7591:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7700:6;7670:11;:18;7682:5;7670:18;;;;;;;;;;;;;;;:27;7689:7;7670:27;;;;;;;;;;;;;;;:36;;;;7737:7;7721:32;;7730:5;7721:32;;;7746:6;7721:32;;;;;;;;;;;;;;;;;;7428:332;;;:::o;1409:467:20:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;1006:136:10:-;1064:23;1079:7;1064;:14;;:23;;;;:::i;:::-;1124:10;1102:33;;1115:7;1102:33;;;;;;;;;;;;1006:136;:::o;883::9:-;941:23;956:7;941;:14;;:23;;;;:::i;:::-;1001:10;979:33;;992:7;979:33;;;;;;;;;;;;883:136;:::o;2281:625:13:-;2377:4;2477:68;;;;;;;;2494:10;2477:68;;;;;;2506:4;2477:68;;;;;;2512:2;2477:68;;;;;;2516:5;2477:68;;;;2523:21;2477:68;;;;;;;;;;;2435:17;:39;2453:20;;2435:39;;;;;;;;;;;:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2619:10;2595:80;;;2631:20;;2653:21;2595:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:1;2750:20;;:24;2727:20;:47;;;;2831:46;2850:4;2864;2871:5;2831:18;:46::i;:::-;;2895:4;2888:11;;2281:625;;;;;:::o;779:200:15:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;834:176:16:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;215:168:4:-;291:4;305:17;311:2;315:6;305:5;:17::i;:::-;348:2;335:24;;340:6;335:24;;;352:6;335:24;;;;;;;;;;;;;;;;;;374:4;367:11;;215:168;;;;;:::o;4168:692:13:-;4298:20;;4286:9;:32;4278:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4394:32;4429:17;:28;4447:9;4429:28;;;;;;;;;;;4394:63;;4539:21;4522:38;;;;;;;;:7;:13;;;;;;;;;;;;:38;;;;;;;;;4514:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4691:59;4715:4;4722:7;:12;;;;;;;;;;;;4736:7;:13;;;4691:15;:59::i;:::-;4793:60;4810:7;4819:9;4830:22;4793:16;:60::i;:::-;4168:692;;:::o;749:128:9:-;804:20;816:7;804;:11;;:20;;;;:::i;:::-;859:10;839:31;;850:7;839:31;;;;;;;;;;;;749:128;:::o;872::10:-;927:20;939:7;927;:11;;:20;;;;:::i;:::-;982:10;962:31;;973:7;962:31;;;;;;;;;;;;872:128;:::o;3325:677:13:-;3456:20;;3444:9;:32;3436:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3552:32;3587:17;:28;3605:9;3587:28;;;;;;;;;;;3552:63;;3697:21;3680:38;;;;;;;;:7;:13;;;;;;;;;;;;:38;;;;;;;;;3672:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3835:57;3859:4;3866:7;:10;;;;;;;;;;;;3878:7;:13;;;3835:15;:57::i;:::-;3935:60;3952:7;3961:9;3972:22;3935:16;:60::i;:::-;3325:677;;:::o;1732:187:16:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;1311:603:13:-;1388:4;1489:74;;;;;;;;1506:10;1489:74;;;;;;1518:10;1489:74;;;;;;1530:2;1489:74;;;;;;1534:5;1489:74;;;;1541:21;1489:74;;;;;;;;;;;1447:17;:39;1465:20;;1447:39;;;;;;;;;;;:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:10;1613:80;;;1649:20;;1671:21;1613:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:1;1768:20;;:24;1745:20;:47;;;;1849:36;1872:4;1879:5;1849:14;:36::i;:::-;;1903:4;1896:11;;1311:603;;;;:::o;6039:302:17:-;6133:1;6114:21;;:7;:21;;;;6106:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:24;6214:6;6197:12;;:16;;:24;;;;:::i;:::-;6182:12;:39;;;;6252:30;6275:6;6252:9;:18;6262:7;6252:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6231:9;:18;6241:7;6231:18;;;;;;;;;;;;;;;:51;;;;6318:7;6297:37;;6314:1;6297:37;;;6327:6;6297:37;;;;;;;;;;;;;;;;;;6039:302;;:::o;5305:464::-;5420:1;5402:20;;:6;:20;;;;5394:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5503:1;5482:23;;:9;:23;;;;5474:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;:9;:17;5586:6;5576:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5556:9;:17;5566:6;5556:17;;;;;;;;;;;;;;;:91;;;;5680:32;5705:6;5680:9;:20;5690:9;5680:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5657:9;:20;5667:9;5657:20;;;;;;;;;;;;;;;:55;;;;5744:9;5727:35;;5736:6;5727:35;;;5755:6;5727:35;;;;;;;;;;;;;;;;;;5305:464;;;:::o;2912:252:13:-;3073:8;3057:7;:13;;;:24;;;;;;;;;;;;;;;;;;;;;;;;3120:10;3096:61;;;3132:9;3143:7;:13;;;;;;;;;;;;3096:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2912:252;;;:::o;510:180:15:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;3184:300:17:-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;:11;:19;3378:6;3366:19;;;;;;;;;;;;;;;:33;3386:12;:10;:12::i;:::-;3366:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3335:8;:121::i;:::-;3473:4;3466:11;;3184:300;;;;;:::o;260:175:15:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;2094:155:17:-;2163:4;2179:42;2189:12;:10;:12::i;:::-;2203:9;2214:6;2179:9;:42::i;:::-;2238:4;2231:11;;2094:155;;;;:::o;256:2518:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.12;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"../roles/OwnerRole.sol\";\nimport \"../capabilities/Mintable.sol\";\nimport \"../capabilities/Revocable.sol\";\nimport \"./Escrowable.sol\";\n\ncontract ArcaTokenEscrowNotProxiable is ERC20Detailed, OwnerRole, Mintable, Revocable, Escrowable {\n\n    // Token Details\n    string constant TOKEN_NAME = \"ARCA\";\n    string constant TOKEN_SYMBOL = \"ARCA\";\n    uint8 constant TOKEN_DECIMALS = 18;\n\n    // Token supply - 50 Billion Tokens, with 18 decimal precision\n    uint256 constant BILLION = 1000000000;\n    uint256 constant TOKEN_SUPPLY = 50 * BILLION * (10 ** uint256(TOKEN_DECIMALS));\n\n    // ERC1404 Error codes and messages\n    uint8 public constant SUCCESS_CODE = 0;\n    uint8 public constant FAILURE_NON_WHITELIST = 1;\n    string public constant SUCCESS_MESSAGE = \"SUCCESS\";\n    string public constant FAILURE_NON_WHITELIST_MESSAGE = \"The transfer was restricted due to white list configuration.\";\n    string public constant UNKNOWN_ERROR = \"Unknown Error Code\";\n\n    /**\n    Constructor for the token to set readable details and mint all tokens\n    to the specified owner.\n     */\n    function initialize (address owner)\n        public\n        initializer\n    {\n        ERC20Detailed.initialize(TOKEN_NAME, TOKEN_SYMBOL, TOKEN_DECIMALS);\n        _mint(owner, TOKEN_SUPPLY);\n        _addOwner(owner);\n    }\n\n    /**\n    Allow Owners to mint tokens to valid addresses\n     */\n    function mint(address account, uint256 amount) public onlyOwner returns (bool) {\n        Mintable.mint(msg.sender, account, amount);\n        return true;\n    }\n\n    /**\n    Restrict rejectTransferProposals to admins only\n     */\n    function rejectTransferProposal(uint requestId) public onlyAdmin {\n      Escrowable._rejectTransferProposal(requestId);\n    }\n\n    /**\n    Restrict approveTransferProposals to admins only\n     */\n    function approveTransferProposal(uint requestId) public onlyAdmin {\n      Escrowable._approveTransferProposal(requestId);\n    }\n\n    /**\n    Overrides the parent class token transfer function to enforce restrictions.\n     */\n    function transfer (address to, uint256 value)\n        public\n        returns (bool success)\n    {\n        success = Escrowable._createTransferProposal(to, value);\n    }\n\n    /**\n    Overrides the parent class token transferFrom function to enforce restrictions.\n    Note that the approved amount of tokens the sender can transfer does not get reimbursed if the\n    Transfer proposal is rejcted or canceled.\n     */\n    function transferFrom (address from, address to, uint256 value)\n        public\n        returns (bool success)\n    {\n        success = Escrowable._createTransferFromProposal(from, to, value);\n    }\n}\n",
  "sourcePath": "/Users/steve/codes/arca_token/contracts/testing/ArcaTokenEscrowNotProxiable.sol",
  "ast": {
    "absolutePath": "/Users/steve/codes/arca_token/contracts/testing/ArcaTokenEscrowNotProxiable.sol",
    "exportedSymbols": {
      "ArcaTokenEscrowNotProxiable": [
        1400
      ]
    },
    "id": 1401,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1230,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1231,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 2544,
        "src": "25:90:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steve/codes/arca_token/contracts/roles/OwnerRole.sol",
        "file": "../roles/OwnerRole.sol",
        "id": 1232,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 1040,
        "src": "116:32:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steve/codes/arca_token/contracts/capabilities/Mintable.sol",
        "file": "../capabilities/Mintable.sol",
        "id": 1233,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 473,
        "src": "149:38:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steve/codes/arca_token/contracts/capabilities/Revocable.sol",
        "file": "../capabilities/Revocable.sol",
        "id": 1234,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 620,
        "src": "188:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steve/codes/arca_token/contracts/testing/Escrowable.sol",
        "file": "./Escrowable.sol",
        "id": 1235,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 1767,
        "src": "228:26:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1236,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2543,
              "src": "296:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2543",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1237,
            "nodeType": "InheritanceSpecifier",
            "src": "296:13:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1238,
              "name": "OwnerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1039,
              "src": "311:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerRole_$1039",
                "typeString": "contract OwnerRole"
              }
            },
            "id": 1239,
            "nodeType": "InheritanceSpecifier",
            "src": "311:9:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1240,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 472,
              "src": "322:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$472",
                "typeString": "contract Mintable"
              }
            },
            "id": 1241,
            "nodeType": "InheritanceSpecifier",
            "src": "322:8:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1242,
              "name": "Revocable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 619,
              "src": "332:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Revocable_$619",
                "typeString": "contract Revocable"
              }
            },
            "id": 1243,
            "nodeType": "InheritanceSpecifier",
            "src": "332:9:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1244,
              "name": "Escrowable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1766,
              "src": "343:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrowable_$1766",
                "typeString": "contract Escrowable"
              }
            },
            "id": 1245,
            "nodeType": "InheritanceSpecifier",
            "src": "343:10:12"
          }
        ],
        "contractDependencies": [
          472,
          619,
          925,
          1039,
          1766,
          1796,
          2476,
          2543,
          2612,
          2675
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1400,
        "linearizedBaseContracts": [
          1400,
          1766,
          619,
          925,
          472,
          1039,
          2476,
          2543,
          2612,
          1796,
          2675
        ],
        "name": "ArcaTokenEscrowNotProxiable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1248,
            "name": "TOKEN_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "382:35:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1246,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "382:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41524341",
              "id": 1247,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "411:6:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6161821402ad1e6003de717c6d4ab849fcc989f60a5460efd2c166981eb4928f",
                "typeString": "literal_string \"ARCA\""
              },
              "value": "ARCA"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1251,
            "name": "TOKEN_SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "423:37:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1249,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "423:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41524341",
              "id": 1250,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "454:6:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6161821402ad1e6003de717c6d4ab849fcc989f60a5460efd2c166981eb4928f",
                "typeString": "literal_string \"ARCA\""
              },
              "value": "ARCA"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1254,
            "name": "TOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "466:34:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1252,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "466:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1253,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "498:2:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1257,
            "name": "BILLION",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "574:37:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030",
              "id": 1256,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "601:10:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1269,
            "name": "TOKEN_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "617:78:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1258,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "617:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1268,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 1261,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3530",
                  "id": 1259,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "649:2:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_50_by_1",
                    "typeString": "int_const 50"
                  },
                  "value": "50"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "id": 1260,
                  "name": "BILLION",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1257,
                  "src": "654:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "649:12:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "665:2:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1264,
                          "name": "TOKEN_DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "679:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "671:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "671:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "665:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1267,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "664:31:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "649:46:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1272,
            "name": "SUCCESS_CODE",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "742:38:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1270,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "742:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1271,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "779:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1275,
            "name": "FAILURE_NON_WHITELIST",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "786:47:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1273,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "786:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1274,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "832:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1278,
            "name": "SUCCESS_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "839:50:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1276,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "839:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554343455353",
              "id": 1277,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "880:9:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
                "typeString": "literal_string \"SUCCESS\""
              },
              "value": "SUCCESS"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1281,
            "name": "FAILURE_NON_WHITELIST_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "895:117:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1279,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "895:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e",
              "id": 1280,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "950:62:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e2c08a66f2b86feb88c976c9f1fd6dfebdf34e61c54a5cf461a34d6ed427b2fc",
                "typeString": "literal_string \"The transfer was restricted due to white list configuration.\""
              },
              "value": "The transfer was restricted due to white list configuration."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1284,
            "name": "UNKNOWN_ERROR",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "1018:59:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1282,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1018:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "556e6b6e6f776e204572726f7220436f6465",
              "id": 1283,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1057:20:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eff12b0856ae7501c8b50262ed26026205f1ee274bd4090cd444e8ef0358a146",
                "typeString": "literal_string \"Unknown Error Code\""
              },
              "value": "Unknown Error Code"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1308,
              "nodeType": "Block",
              "src": "1277:145:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1294,
                        "name": "TOKEN_NAME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "1312:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1295,
                        "name": "TOKEN_SYMBOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "1324:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1296,
                        "name": "TOKEN_DECIMALS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "1338:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1291,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2543,
                        "src": "1287:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2543_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2514,
                      "src": "1287:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "1287:66:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1300,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1286,
                        "src": "1369:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1301,
                        "name": "TOKEN_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "1376:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1299,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2356,
                      "src": "1363:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:26:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1305,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1286,
                        "src": "1409:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1304,
                      "name": "_addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1020,
                      "src": "1399:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:16:12"
                }
              ]
            },
            "documentation": "Constructor for the token to set readable details and mint all tokens\nto the specified owner.",
            "id": 1309,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1289,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1288,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2656,
                  "src": "1261:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1261:11:12"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1223:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1222:15:12"
            },
            "returnParameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:12"
            },
            "scope": 1400,
            "src": "1202:220:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1331,
              "nodeType": "Block",
              "src": "1574:80:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1323,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2690,
                          "src": "1598:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1598:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1325,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1311,
                        "src": "1610:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1326,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1313,
                        "src": "1619:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1320,
                        "name": "Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "1584:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mintable_$472_$",
                          "typeString": "type(contract Mintable)"
                        }
                      },
                      "id": 1322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 471,
                      "src": "1584:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1643:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1319,
                  "id": 1330,
                  "nodeType": "Return",
                  "src": "1636:11:12"
                }
              ]
            },
            "documentation": "Allow Owners to mint tokens to valid addresses",
            "id": 1332,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1315,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 957,
                  "src": "1549:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1549:9:12"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1311,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "1509:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1509:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1313,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "1526:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1508:33:12"
            },
            "returnParameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1318,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "1568:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1567:6:12"
            },
            "scope": 1400,
            "src": "1495:159:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1345,
              "nodeType": "Block",
              "src": "1793:60:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1342,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "1836:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1339,
                        "name": "Escrowable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1766,
                        "src": "1801:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Escrowable_$1766_$",
                          "typeString": "type(contract Escrowable)"
                        }
                      },
                      "id": 1341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_rejectTransferProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "1801:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:45:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:45:12"
                }
              ]
            },
            "documentation": "Restrict rejectTransferProposals to admins only",
            "id": 1346,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1337,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1336,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 851,
                  "src": "1783:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1783:9:12"
              }
            ],
            "name": "rejectTransferProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "1760:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1759:16:12"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:0:12"
            },
            "scope": 1400,
            "src": "1728:125:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "1994:61:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1356,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1348,
                        "src": "2038:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1353,
                        "name": "Escrowable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1766,
                        "src": "2002:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Escrowable_$1766_$",
                          "typeString": "type(contract Escrowable)"
                        }
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_approveTransferProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1608,
                      "src": "2002:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1358,
                  "nodeType": "ExpressionStatement",
                  "src": "2002:46:12"
                }
              ]
            },
            "documentation": "Restrict approveTransferProposals to admins only",
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1350,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 851,
                  "src": "1984:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1984:9:12"
              }
            ],
            "name": "approveTransferProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1348,
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "1961:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1960:16:12"
            },
            "returnParameters": {
              "id": 1352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1994:0:12"
            },
            "scope": 1400,
            "src": "1928:127:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1377,
              "nodeType": "Block",
              "src": "2253:72:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1369,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "2263:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1372,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1362,
                          "src": "2308:2:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1373,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "2312:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1370,
                          "name": "Escrowable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1766,
                          "src": "2273:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Escrowable_$1766_$",
                            "typeString": "type(contract Escrowable)"
                          }
                        },
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_createTransferProposal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1485,
                        "src": "2273:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 1374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2273:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2263:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1376,
                  "nodeType": "ExpressionStatement",
                  "src": "2263:55:12"
                }
              ]
            },
            "documentation": "Overrides the parent class token transfer function to enforce restrictions.",
            "id": 1378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1362,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1378,
                  "src": "2176:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1364,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1378,
                  "src": "2188:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2175:27:12"
            },
            "returnParameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1367,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1378,
                  "src": "2235:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2234:14:12"
            },
            "scope": 1400,
            "src": "2157:168:12",
            "stateMutability": "nonpayable",
            "superFunction": 2130,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1398,
              "nodeType": "Block",
              "src": "2690:82:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1389,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1387,
                      "src": "2700:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1392,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1380,
                          "src": "2749:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1393,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1382,
                          "src": "2755:2:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1394,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "2759:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1390,
                          "name": "Escrowable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1766,
                          "src": "2710:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Escrowable_$1766_$",
                            "typeString": "type(contract Escrowable)"
                          }
                        },
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_createTransferFromProposal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1537,
                        "src": "2710:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) returns (bool)"
                        }
                      },
                      "id": 1395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2710:55:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2700:65:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "2700:65:12"
                }
              ]
            },
            "documentation": "Overrides the parent class token transferFrom function to enforce restrictions.\nNote that the approved amount of tokens the sender can transfer does not get reimbursed if the\nTransfer proposal is rejcted or canceled.",
            "id": 1399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1380,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2599:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1382,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2613:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2613:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1384,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2625:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2598:41:12"
            },
            "returnParameters": {
              "id": 1388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1387,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2672:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1386,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2671:14:12"
            },
            "scope": 1400,
            "src": "2576:196:12",
            "stateMutability": "nonpayable",
            "superFunction": 2201,
            "visibility": "public"
          }
        ],
        "scope": 1401,
        "src": "256:2518:12"
      }
    ],
    "src": "0:2775:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/steve/codes/arca_token/contracts/testing/ArcaTokenEscrowNotProxiable.sol",
    "exportedSymbols": {
      "ArcaTokenEscrowNotProxiable": [
        1400
      ]
    },
    "id": 1401,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1230,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1231,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 2544,
        "src": "25:90:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steve/codes/arca_token/contracts/roles/OwnerRole.sol",
        "file": "../roles/OwnerRole.sol",
        "id": 1232,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 1040,
        "src": "116:32:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steve/codes/arca_token/contracts/capabilities/Mintable.sol",
        "file": "../capabilities/Mintable.sol",
        "id": 1233,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 473,
        "src": "149:38:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steve/codes/arca_token/contracts/capabilities/Revocable.sol",
        "file": "../capabilities/Revocable.sol",
        "id": 1234,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 620,
        "src": "188:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steve/codes/arca_token/contracts/testing/Escrowable.sol",
        "file": "./Escrowable.sol",
        "id": 1235,
        "nodeType": "ImportDirective",
        "scope": 1401,
        "sourceUnit": 1767,
        "src": "228:26:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1236,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2543,
              "src": "296:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2543",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1237,
            "nodeType": "InheritanceSpecifier",
            "src": "296:13:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1238,
              "name": "OwnerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1039,
              "src": "311:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerRole_$1039",
                "typeString": "contract OwnerRole"
              }
            },
            "id": 1239,
            "nodeType": "InheritanceSpecifier",
            "src": "311:9:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1240,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 472,
              "src": "322:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$472",
                "typeString": "contract Mintable"
              }
            },
            "id": 1241,
            "nodeType": "InheritanceSpecifier",
            "src": "322:8:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1242,
              "name": "Revocable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 619,
              "src": "332:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Revocable_$619",
                "typeString": "contract Revocable"
              }
            },
            "id": 1243,
            "nodeType": "InheritanceSpecifier",
            "src": "332:9:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1244,
              "name": "Escrowable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1766,
              "src": "343:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrowable_$1766",
                "typeString": "contract Escrowable"
              }
            },
            "id": 1245,
            "nodeType": "InheritanceSpecifier",
            "src": "343:10:12"
          }
        ],
        "contractDependencies": [
          472,
          619,
          925,
          1039,
          1766,
          1796,
          2476,
          2543,
          2612,
          2675
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1400,
        "linearizedBaseContracts": [
          1400,
          1766,
          619,
          925,
          472,
          1039,
          2476,
          2543,
          2612,
          1796,
          2675
        ],
        "name": "ArcaTokenEscrowNotProxiable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1248,
            "name": "TOKEN_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "382:35:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1246,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "382:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41524341",
              "id": 1247,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "411:6:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6161821402ad1e6003de717c6d4ab849fcc989f60a5460efd2c166981eb4928f",
                "typeString": "literal_string \"ARCA\""
              },
              "value": "ARCA"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1251,
            "name": "TOKEN_SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "423:37:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1249,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "423:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41524341",
              "id": 1250,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "454:6:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6161821402ad1e6003de717c6d4ab849fcc989f60a5460efd2c166981eb4928f",
                "typeString": "literal_string \"ARCA\""
              },
              "value": "ARCA"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1254,
            "name": "TOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "466:34:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1252,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "466:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1253,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "498:2:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1257,
            "name": "BILLION",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "574:37:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030",
              "id": 1256,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "601:10:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1269,
            "name": "TOKEN_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "617:78:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1258,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "617:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1268,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 1261,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3530",
                  "id": 1259,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "649:2:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_50_by_1",
                    "typeString": "int_const 50"
                  },
                  "value": "50"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "id": 1260,
                  "name": "BILLION",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1257,
                  "src": "654:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "649:12:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "665:2:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1264,
                          "name": "TOKEN_DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "679:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "671:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "671:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "665:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1267,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "664:31:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "649:46:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1272,
            "name": "SUCCESS_CODE",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "742:38:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1270,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "742:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1271,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "779:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1275,
            "name": "FAILURE_NON_WHITELIST",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "786:47:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1273,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "786:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1274,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "832:1:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1278,
            "name": "SUCCESS_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "839:50:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1276,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "839:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554343455353",
              "id": 1277,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "880:9:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
                "typeString": "literal_string \"SUCCESS\""
              },
              "value": "SUCCESS"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1281,
            "name": "FAILURE_NON_WHITELIST_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "895:117:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1279,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "895:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e",
              "id": 1280,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "950:62:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e2c08a66f2b86feb88c976c9f1fd6dfebdf34e61c54a5cf461a34d6ed427b2fc",
                "typeString": "literal_string \"The transfer was restricted due to white list configuration.\""
              },
              "value": "The transfer was restricted due to white list configuration."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1284,
            "name": "UNKNOWN_ERROR",
            "nodeType": "VariableDeclaration",
            "scope": 1400,
            "src": "1018:59:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1282,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1018:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "556e6b6e6f776e204572726f7220436f6465",
              "id": 1283,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1057:20:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eff12b0856ae7501c8b50262ed26026205f1ee274bd4090cd444e8ef0358a146",
                "typeString": "literal_string \"Unknown Error Code\""
              },
              "value": "Unknown Error Code"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1308,
              "nodeType": "Block",
              "src": "1277:145:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1294,
                        "name": "TOKEN_NAME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "1312:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1295,
                        "name": "TOKEN_SYMBOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "1324:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1296,
                        "name": "TOKEN_DECIMALS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "1338:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1291,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2543,
                        "src": "1287:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2543_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2514,
                      "src": "1287:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "1287:66:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1300,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1286,
                        "src": "1369:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1301,
                        "name": "TOKEN_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "1376:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1299,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2356,
                      "src": "1363:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:26:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1305,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1286,
                        "src": "1409:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1304,
                      "name": "_addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1020,
                      "src": "1399:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:16:12"
                }
              ]
            },
            "documentation": "Constructor for the token to set readable details and mint all tokens\nto the specified owner.",
            "id": 1309,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1289,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1288,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2656,
                  "src": "1261:11:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1261:11:12"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1223:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1222:15:12"
            },
            "returnParameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:12"
            },
            "scope": 1400,
            "src": "1202:220:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1331,
              "nodeType": "Block",
              "src": "1574:80:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1323,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2690,
                          "src": "1598:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1598:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1325,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1311,
                        "src": "1610:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1326,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1313,
                        "src": "1619:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1320,
                        "name": "Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "1584:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mintable_$472_$",
                          "typeString": "type(contract Mintable)"
                        }
                      },
                      "id": 1322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 471,
                      "src": "1584:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1643:4:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1319,
                  "id": 1330,
                  "nodeType": "Return",
                  "src": "1636:11:12"
                }
              ]
            },
            "documentation": "Allow Owners to mint tokens to valid addresses",
            "id": 1332,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1315,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 957,
                  "src": "1549:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1549:9:12"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1311,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "1509:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1509:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1313,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "1526:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1508:33:12"
            },
            "returnParameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1318,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "1568:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1567:6:12"
            },
            "scope": 1400,
            "src": "1495:159:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1345,
              "nodeType": "Block",
              "src": "1793:60:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1342,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "1836:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1339,
                        "name": "Escrowable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1766,
                        "src": "1801:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Escrowable_$1766_$",
                          "typeString": "type(contract Escrowable)"
                        }
                      },
                      "id": 1341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_rejectTransferProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "1801:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:45:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:45:12"
                }
              ]
            },
            "documentation": "Restrict rejectTransferProposals to admins only",
            "id": 1346,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1337,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1336,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 851,
                  "src": "1783:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1783:9:12"
              }
            ],
            "name": "rejectTransferProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1346,
                  "src": "1760:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1759:16:12"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:0:12"
            },
            "scope": 1400,
            "src": "1728:125:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "1994:61:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1356,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1348,
                        "src": "2038:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1353,
                        "name": "Escrowable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1766,
                        "src": "2002:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Escrowable_$1766_$",
                          "typeString": "type(contract Escrowable)"
                        }
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_approveTransferProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1608,
                      "src": "2002:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1358,
                  "nodeType": "ExpressionStatement",
                  "src": "2002:46:12"
                }
              ]
            },
            "documentation": "Restrict approveTransferProposals to admins only",
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1350,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 851,
                  "src": "1984:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1984:9:12"
              }
            ],
            "name": "approveTransferProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1348,
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "1961:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1960:16:12"
            },
            "returnParameters": {
              "id": 1352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1994:0:12"
            },
            "scope": 1400,
            "src": "1928:127:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1377,
              "nodeType": "Block",
              "src": "2253:72:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1369,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "2263:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1372,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1362,
                          "src": "2308:2:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1373,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "2312:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1370,
                          "name": "Escrowable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1766,
                          "src": "2273:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Escrowable_$1766_$",
                            "typeString": "type(contract Escrowable)"
                          }
                        },
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_createTransferProposal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1485,
                        "src": "2273:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 1374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2273:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2263:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1376,
                  "nodeType": "ExpressionStatement",
                  "src": "2263:55:12"
                }
              ]
            },
            "documentation": "Overrides the parent class token transfer function to enforce restrictions.",
            "id": 1378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1362,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1378,
                  "src": "2176:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1364,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1378,
                  "src": "2188:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2175:27:12"
            },
            "returnParameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1367,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1378,
                  "src": "2235:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2234:14:12"
            },
            "scope": 1400,
            "src": "2157:168:12",
            "stateMutability": "nonpayable",
            "superFunction": 2130,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1398,
              "nodeType": "Block",
              "src": "2690:82:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1389,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1387,
                      "src": "2700:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1392,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1380,
                          "src": "2749:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1393,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1382,
                          "src": "2755:2:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1394,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "2759:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1390,
                          "name": "Escrowable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1766,
                          "src": "2710:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Escrowable_$1766_$",
                            "typeString": "type(contract Escrowable)"
                          }
                        },
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_createTransferFromProposal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1537,
                        "src": "2710:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) returns (bool)"
                        }
                      },
                      "id": 1395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2710:55:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2700:65:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "2700:65:12"
                }
              ]
            },
            "documentation": "Overrides the parent class token transferFrom function to enforce restrictions.\nNote that the approved amount of tokens the sender can transfer does not get reimbursed if the\nTransfer proposal is rejcted or canceled.",
            "id": 1399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1380,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2599:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1382,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2613:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2613:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1384,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2625:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2598:41:12"
            },
            "returnParameters": {
              "id": 1388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1387,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2672:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1386,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2671:14:12"
            },
            "scope": 1400,
            "src": "2576:196:12",
            "stateMutability": "nonpayable",
            "superFunction": 2201,
            "visibility": "public"
          }
        ],
        "scope": 1401,
        "src": "256:2518:12"
      }
    ],
    "src": "0:2775:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-12-09T19:10:31.708Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      }
    }
  },
  "userdoc": {
    "methods": {
      "approveTransferProposal(uint256)": {
        "notice": "Restrict approveTransferProposals to admins only"
      },
      "cancelTransferProposal(uint256)": {
        "notice": "If a user locks up funds in a proposal, they can cancel it as long as an administrator has not already approved or rejected it."
      },
      "initialize(address)": {
        "notice": "Constructor for the token to set readable details and mint all tokens to the specified owner."
      },
      "mint(address,uint256)": {
        "notice": "Allow Owners to mint tokens to valid addresses"
      },
      "rejectTransferProposal(uint256)": {
        "notice": "Restrict rejectTransferProposals to admins only"
      },
      "transfer(address,uint256)": {
        "notice": "Overrides the parent class token transfer function to enforce restrictions."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Overrides the parent class token transferFrom function to enforce restrictions. Note that the approved amount of tokens the sender can transfer does not get reimbursed if the Transfer proposal is rejcted or canceled."
      }
    }
  }
}