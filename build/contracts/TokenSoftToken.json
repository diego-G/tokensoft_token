{
  "contractName": "TokenSoftToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "AddressAddedToBlacklist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "whitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "AddressAddedToWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "AddressRemovedFromBlacklist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "whitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "AddressRemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "BlacklistEnabledUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBlacklister",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "BlacklisterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBlacklister",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "BlacklisterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBurner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "BurnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBurner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "BurnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "CodeAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedMinter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedMinter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "sourceWhitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "destinationWhitelist",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "from",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "to",
          "type": "bool"
        }
      ],
      "name": "OutboundWhitelistUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "OwnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "OwnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedPauser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedPauser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revoker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedRevoker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "RevokerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedRevoker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "RevokerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "WhitelistEnabledUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedWhitelister",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "WhitelisterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedWhitelister",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "WhitelisterRemoved",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_NON_WHITELIST",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_NON_WHITELIST_MESSAGE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_PAUSED",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_PAUSED_MESSAGE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SUCCESS_CODE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SUCCESS_MESSAGE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UNKNOWN_ERROR",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBlacklister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addRevoker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToAdd",
          "type": "address"
        }
      ],
      "name": "addToBlacklist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToAdd",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "whitelist",
          "type": "uint8"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressBlacklists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressWhitelists",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "checkBlacklistAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "checkWhitelistAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLogicAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "logicAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isBlacklistEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBlacklister",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isRevoker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isWhitelistEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelister",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "outboundWhitelistsEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBlacklister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBurner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToRemove",
          "type": "address"
        }
      ],
      "name": "removeFromBlacklist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToRemove",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeRevoker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setBlacklistEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setWhitelistEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "sourceWhitelist",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "destinationWhitelist",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "newEnabledValue",
          "type": "bool"
        }
      ],
      "name": "updateOutboundWhitelistEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "whitelistEnabled",
          "type": "bool"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCodeAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "detectTransferRestriction",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "restrictionCode",
          "type": "uint8"
        }
      ],
      "name": "messageForTransferRestriction",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"AddressAddedToBlacklist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"whitelist\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"AddressAddedToWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"AddressRemovedFromBlacklist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"whitelist\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"AddressRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"BlacklistEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBlacklister\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"BlacklisterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBlacklister\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"BlacklisterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBurner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"BurnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBurner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"BurnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CodeAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedMinter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedMinter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"sourceWhitelist\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"destinationWhitelist\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"from\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"to\",\"type\":\"bool\"}],\"name\":\"OutboundWhitelistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedPauser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedPauser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedRevoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"RevokerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedRevoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"RevokerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"WhitelistEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedWhitelister\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"WhitelisterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedWhitelister\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"WhitelisterRemoved\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"FAILURE_NON_WHITELIST\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FAILURE_NON_WHITELIST_MESSAGE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FAILURE_PAUSED\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FAILURE_PAUSED_MESSAGE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SUCCESS_CODE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SUCCESS_MESSAGE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UNKNOWN_ERROR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBlacklister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRevoker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToAdd\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToAdd\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"whitelist\",\"type\":\"uint8\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressBlacklists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressWhitelists\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"checkBlacklistAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"checkWhitelistAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"detectTransferRestriction\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLogicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"logicAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"whitelistEnabled\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isBlacklistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRevoker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isWhitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"restrictionCode\",\"type\":\"uint8\"}],\"name\":\"messageForTransferRestriction\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"outboundWhitelistsEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBlacklister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToRemove\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToRemove\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeRevoker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setBlacklistEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setWhitelistEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCodeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"sourceWhitelist\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"destinationWhitelist\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"newEnabledValue\",\"type\":\"bool\"}],\"name\":\"updateOutboundWhitelistEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Called by an Owner to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"unpause()\":{\"details\":\"Called by an Owner to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{\"addToBlacklist(address)\":{\"notice\":\"Public function that allows admins to remove an address from a Blacklist\"},\"addToWhitelist(address,uint8)\":{\"notice\":\"Public function that allows admins to remove an address from a whitelist\"},\"burn(address,uint256)\":{\"notice\":\"Allow Burners to burn tokens from valid addresses\"},\"checkBlacklistAllowed(address,address)\":{\"notice\":\"Determine if the a sender is allowed to send to the receiver. If either the sender or receiver is blacklisted, then the transfer should be denied\"},\"checkWhitelistAllowed(address,address)\":{\"notice\":\"Determine if the a sender is allowed to send to the receiver. The source whitelist must be enabled to send to the whitelist where the receive exists.\"},\"detectTransferRestriction(address,address,uint256)\":{\"notice\":\"This function detects whether a transfer should be restricted and not allowed. If the function returns SUCCESS_CODE (0) then it should be allowed.\"},\"initialize(address,string,string,uint8,uint256,bool)\":{\"notice\":\"Constructor for the token to set readable details and mint all tokens to the specified owner.\"},\"messageForTransferRestriction(uint8)\":{\"notice\":\"This function allows a wallet or other client to get a human readable string to show a user if a transfer was restricted.  It should return enough information for the user to know why it failed.\"},\"mint(address,uint256)\":{\"notice\":\"Allow Owners to mint tokens to valid addresses\"},\"removeFromBlacklist(address)\":{\"notice\":\"Public function that allows admins to remove an address from a Blacklist\"},\"removeFromWhitelist(address)\":{\"notice\":\"Public function that allows admins to remove an address from a whitelist\"},\"revoke(address,uint256)\":{\"notice\":\"Allow Admins to revoke tokens from any address\"},\"setBlacklistEnabled(bool)\":{\"notice\":\"Enable or disable the Blacklist enforcement\"},\"setWhitelistEnabled(bool)\":{\"notice\":\"Enable or disable the whitelist enforcement\"},\"transfer(address,uint256)\":{\"notice\":\"Overrides the parent class token transfer function to enforce restrictions.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Overrides the parent class token transferFrom function to enforce restrictions.\"},\"updateCodeAddress(address)\":{\"notice\":\"Public function to update the address of the code contract, retricted to owner\"},\"updateOutboundWhitelistEnabled(uint8,uint8,bool)\":{\"notice\":\"Public function that allows admins to update outbound whitelists\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol\":\"TokenSoftToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xb8701b8b7873042ef4db55497f858cd3b99c7a00f0f59474a7cbb5d6c019df63\",\"urls\":[\"bzz-raw://247aac80b1ac189bc62ad8187baa42a6fad7501c175d02f0198c9e4467dc8a9a\",\"dweb:/ipfs/Qmc3YwfagHPa89oNLG67yLL5mZBepH8zmWBqANFbWDJZQ3\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfb468e76abd342675e2e68d54d7bdf9f11461ecab1c6b3a960ad766434b6d5a0\",\"urls\":[\"bzz-raw://a1ec43d53a2030c28c0fb65bd830c3bebbd4caa83dcce53aa66663f1c9eda650\",\"dweb:/ipfs/QmWKLhheyk6X1Fp7wcyA9ZNuFTB2RNkNJmPUybQgXaEmdz\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x93e6b99aab7d69bc2f1f32f3eeb56c72a6342223ab3ed1642942a0bccf04ec07\",\"urls\":[\"bzz-raw://e03e886a4aaabe86e823fd1a7ad2240df5a47a49f9b8b90a448eb1b4e7971978\",\"dweb:/ipfs/QmYDLJMfVNUdDEGREiJsYm6bU5dhQSd3wUBmEG6FnzdUmp\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/ERC1404.sol\":{\"keccak256\":\"0x49066a8f7bfa6cdbdce0a305a9dfd719840b0e3c4e05643d85a3c03ef16d2f0e\",\"urls\":[\"bzz-raw://41bab1ba360fbf5b13ea7e0fdfd69c642f045850e742566df16bc92ffe06349c\",\"dweb:/ipfs/QmeS5oeeZ2Fb9j1bGKNJY94LS53Bctf99QBfXJXwQUNzQB\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol\":{\"keccak256\":\"0x96b4fc30466cf89e83c0a58566271748a0fd83a66770fbf019a173644b9a4217\",\"urls\":[\"bzz-raw://28f050d8eb07c2c06976136f69c4b2c9c9b64f4797a7d9a076833e049145dae8\",\"dweb:/ipfs/QmeWhzmoJx1HNa2QDCVjvuDEwaSAnVyXcfemjUsdQwDgtw\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Blacklistable.sol\":{\"keccak256\":\"0x70175b93e67032eba193d2cc363ed8a3bb10a61553dce61489fe62dcc1c043e6\",\"urls\":[\"bzz-raw://c549cc3f1f251b9e07277060571efa10a02efbf76e568d82dd2db825fd88a468\",\"dweb:/ipfs/QmZatmp3zVRCyRCPpxeF1XUt97v7dNB2E8XiUMv8ehc2rw\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Burnable.sol\":{\"keccak256\":\"0x3270c67cd9499fbc12043358a375b41d45732601781e85b01afde80e038e1286\",\"urls\":[\"bzz-raw://6bfb7ed3bd6446131e55593536ed8135e636c0a46da5905a176c5686716f20b2\",\"dweb:/ipfs/QmUZYdDjQkdoiPV2FoyCbv8YYZqXemW8PzACDXRVwSUN4w\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Mintable.sol\":{\"keccak256\":\"0x92737b78434965fd4a1b613d381a64e2bf1977259f666f36f9bbbf3060ba2af7\",\"urls\":[\"bzz-raw://b860f65dca557f677b3cc08fea62fc333200a56fd7f6a0d5d7decf4ad47d8222\",\"dweb:/ipfs/QmcLgzGFMGVGe2immQT9cjeTzNuiv2qdPHLgWN2rTisSVi\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Pausable.sol\":{\"keccak256\":\"0x32eec27e33107b73c74347fcdc2331520f60272e2fadb773e3dfb31842b09a56\",\"urls\":[\"bzz-raw://05d634da0637eab284622d5947230e3244e001d6783789bba9e69acec8243774\",\"dweb:/ipfs/QmRf7KL8uUYVEnSc9A13WNBQb2LTi8RK2JCfNBvqLctGTk\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Proxiable.sol\":{\"keccak256\":\"0xc97f679b69b1084204d790cbff9c707703f41eb34371328f015e25ea91cf717e\",\"urls\":[\"bzz-raw://85e1390e68b470c241013ce3f12d72602e9bfd1d0e57e0145270d85405ef5d18\",\"dweb:/ipfs/QmVL1fsJdK9nV5rMUgYuFBpuBH9H8E7eJhoEmPhzTe5tWZ\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Revocable.sol\":{\"keccak256\":\"0x2c94c77a74ba883793a3a623970080b8ea2e307f9f38d1418935907f304b1d3c\",\"urls\":[\"bzz-raw://801019a43ffc875c42adb2664e4ba1caefd80db409ec2c7f2f647420b5c89001\",\"dweb:/ipfs/QmZqgjtvfHy14GVzeBoFzsRScZBuL2nS9xYD6oEXixFPe5\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Whitelistable.sol\":{\"keccak256\":\"0xc385938da6427b68b1ff6048165bfd1c0c56a647c5f65a107887617f6820969a\",\"urls\":[\"bzz-raw://18a08fbfb439b92f7670fa4a9cb6087bddfce996b4f49cf064486b507ba100be\",\"dweb:/ipfs/QmbYkm6VBe2h9GD8TfAGwWLtUbsM3YKXkrb1ZSe5kwy9FS\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/BlacklisterRole.sol\":{\"keccak256\":\"0x403aabc33f4f275aa1b12f01b5e82425c0cf8de19271bc57dff0a302f836dbad\",\"urls\":[\"bzz-raw://5c740b4d22b5a331e1c1893a0d6c9d8bfc3d28ad59465604a37fc69004bf4b27\",\"dweb:/ipfs/QmXiAzQfLtWXCfuZQ5twHEsvQN2HQWCsdL3Fqm7kxpoZH6\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/BurnerRole.sol\":{\"keccak256\":\"0x3743fa8536d9fdd6bbdf434403715cabf075f39fa18d5060b5b84927d13d7665\",\"urls\":[\"bzz-raw://347b6ed96206f36bf6b729c90628461a639137dcd315925475323141f200b10a\",\"dweb:/ipfs/QmdH6MKy39pRbR5qYcBBfQuaiPQN28JAtvZFJFhovDFHiS\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/MinterRole.sol\":{\"keccak256\":\"0xb9cc8c406effdbf885efd480497ec00fcbed8ad11e0f2b7c1d610fdcbfe4fdba\",\"urls\":[\"bzz-raw://391f7b81fbdc4b50419052efdcdd75ce74d69d7b487478e0a4eefc80c420650f\",\"dweb:/ipfs/QmTc5WfAVrNYHuUxjnUesMnmivHX78HrTMhrawGUBgVA51\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/OwnerRole.sol\":{\"keccak256\":\"0xeb09986597984e6fb387f7eaca763e87aac607bd03c8121fa71f58d5e4fb87b4\",\"urls\":[\"bzz-raw://5e02f655efae4b6ba5d8c8e839f61651d818350b5ad30de3d95d8d0a61ecd4a2\",\"dweb:/ipfs/QmVDY9vMR24mEbCYG7ehcgAXUDtg3pDahf8VefhcusdKey\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/PauserRole.sol\":{\"keccak256\":\"0x21a77ba7f68fb209612059424cc5f3c46254ddc48bd384b12edcb327acc8af13\",\"urls\":[\"bzz-raw://62232e410840de0d4275c89aeb8efe8eb6373e07eefbac5b9e7ca8c6bea5aceb\",\"dweb:/ipfs/QmSbKzp1Xo9a3xWUMM8ar1Ui5E4c9wwJPnb9KXi7ZeSz4F\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/RevokerRole.sol\":{\"keccak256\":\"0xeaa1609a5f035ddce1190cd52e9ffd462ff0e7c0e9997d0c7b3e747fdb59b839\",\"urls\":[\"bzz-raw://2c48a523cb7d6038ca9be409cda21e9a26cd4c08d3f59d7f0fc32a48f4ea470d\",\"dweb:/ipfs/QmXpQALeoHg1gQoQKc1wDBY3bTGiEn9cwYRm6L2hcQfxe1\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/WhitelisterRole.sol\":{\"keccak256\":\"0x2d6a4c2ece371f44df78482e87b869dea6009a7d0e1d01add34f4872d35d1b43\",\"urls\":[\"bzz-raw://bf16bc4fe45c9d6010545b9fa6b9320abc4e622e3afd351825c0db0fd8ca2a54\",\"dweb:/ipfs/Qmav6sukxUWtzkFV78WsZjXcNHa55kMbnGkzR6XwEbe3mR\"]}},\"version\":1}",
  "bytecode": "0x6080604052615ab0806100136000396000f3fe608060405234801561001057600080fd5b50600436106103e65760003560e01c80637f4ab1dd1161020a578063a457c2d711610125578063dd62ed3e116100b8578063eac449d911610087578063eac449d91461195c578063eaf9144a146119c2578063f2c2b9ae14611a06578063f44637ba14611a82578063f6c4b01f14611ac6576103e6565b8063dd62ed3e146117af578063e7984d1714611827578063e9594508146118aa578063ea72d6ee14611900576103e6565b8063b66cd56c116100f4578063b66cd56c14611604578063c06f8b9414611660578063c8934462146116a4578063d4ce141514611727576103e6565b8063a457c2d714611492578063a9059cbb146114f8578063aa271e1a1461155e578063abd108ba146115ba576103e6565b806392e6d68b1161019d57806397af67441161016c57806397af674414611321578063983b2d56146113a45780639dc29fac146113e85780639fcf10071461144e576103e6565b806392e6d68b146111805780639437e2fe146111de57806395d89b411461125a578063961a66f6146112dd576103e6565b80638771cd2d116101d95780638771cd2d14610f41578063878dd332146110d65780638ab1d681146110f8578063912a98851461113c576103e6565b80637f4ab1dd14610e0557806382c3f79c14610eaf57806382dc1ec414610ef35780638456cb5914610f37576103e6565b80633950935111610305578063489c1b25116102985780636b2c0f55116102675780636b2c0f5514610c855780637065cb4814610cc957806370a0823114610d0d5780637bb06eea14610d655780637d0c269f14610da9576103e6565b8063489c1b2514610b7e57806352d1902d14610c01578063537df3b614610c1f5780635c975abb14610c63576103e6565b806340c10f19116102d457806340c10f1914610a1c5780634334614a14610a8257806344337ea114610ade57806346fbf68e14610b22576103e6565b8063395093511461093e5780633973b596146109a45780633f4ba83a146109ee5780633f713709146109f8576103e6565b8063173825d91161037d57806323b872dd1161034c57806323b872dd146107f45780632f54bf6e1461087a5780633092afd5146108d6578063313ce5671461091a576103e6565b8063173825d91461074c57806318160ddd14610790578063184d69ab146107ae5780631fb45ec0146107d0576103e6565b8063095ea7b3116103b9578063095ea7b3146105335780630e969a05146105995780631201cbd0146105bd5780631624f6c6146105ed576103e6565b80630263b858146103eb578063028468581461043c578063052d9e7e1461048057806306fdde03146104b0575b600080fd5b61043a6004803603604081101561040157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611b22565b005b61047e6004803603602081101561045257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b8e565b005b6104ae6004803603602081101561049657600080fd5b81019080803515159060200190929190505050611bf8565b005b6104b8611c62565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f85780820151818401526020810190506104dd565b50505050905090810190601f1680156105255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61057f6004803603604081101561054957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d04565b604051808215151515815260200191505060405180910390f35b6105a1611d22565b604051808260ff1660ff16815260200191505060405180910390f35b6105eb600480360360208110156105d357600080fd5b81019080803515159060200190929190505050611d27565b005b61074a6004803603606081101561060357600080fd5b810190808035906020019064010000000081111561062057600080fd5b82018360208201111561063257600080fd5b8035906020019184600183028401116401000000008311171561065457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106b757600080fd5b8201836020820111156106c957600080fd5b803590602001918460018302840111640100000000831117156106eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611d91565b005b61078e6004803603602081101561076257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611edc565b005b610798611f46565b6040518082815260200191505060405180910390f35b6107b6611f50565b604051808215151515815260200191505060405180910390f35b6107d8611f63565b604051808260ff1660ff16815260200191505060405180910390f35b6108606004803603606081101561080a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f68565b604051808215151515815260200191505060405180910390f35b6108bc6004803603602081101561089057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061204e565b604051808215151515815260200191505060405180910390f35b610918600480360360208110156108ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061206b565b005b6109226120d5565b604051808260ff1660ff16815260200191505060405180910390f35b61098a6004803603604081101561095457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120ec565b604051808215151515815260200191505060405180910390f35b6109ec600480360360608110156109ba57600080fd5b81019080803560ff169060200190929190803560ff16906020019092919080351515906020019092919050505061219f565b005b6109f661220d565b005b610a006122f7565b604051808260ff1660ff16815260200191505060405180910390f35b610a6860048036036040811015610a3257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506122fc565b604051808215151515815260200191505060405180910390f35b610ac460048036036020811015610a9857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061236f565b604051808215151515815260200191505060405180910390f35b610b2060048036036020811015610af457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061238c565b005b610b6460048036036020811015610b3857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123f6565b604051808215151515815260200191505060405180910390f35b610b86612413565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bc6578082015181840152602081019050610bab565b50505050905090810190601f168015610bf35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c0961242f565b6040518082815260200191505060405180910390f35b610c6160048036036020811015610c3557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061245a565b005b610c6b6124c4565b604051808215151515815260200191505060405180910390f35b610cc760048036036020811015610c9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124db565b005b610d0b60048036036020811015610cdf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612545565b005b610d4f60048036036020811015610d2357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125af565b6040518082815260200191505060405180910390f35b610da760048036036020811015610d7b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125f8565b005b610deb60048036036020811015610dbf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612662565b604051808215151515815260200191505060405180910390f35b610e3460048036036020811015610e1b57600080fd5b81019080803560ff16906020019092919050505061267f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e74578082015181840152602081019050610e59565b50505050905090810190601f168015610ea15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ef160048036036020811015610ec557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612769565b005b610f3560048036036020811015610f0957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127d3565b005b610f3f61283d565b005b6110d4600480360360c0811015610f5757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610f9457600080fd5b820183602082011115610fa657600080fd5b80359060200191846001830284011164010000000083111715610fc857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561102b57600080fd5b82018360208201111561103d57600080fd5b8035906020019184600183028401116401000000008311171561105f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919080359060200190929190803515159060200190929190505050612928565b005b6110de612a56565b604051808215151515815260200191505060405180910390f35b61113a6004803603602081101561110e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a69565b005b61117e6004803603602081101561115257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ad3565b005b6111c26004803603602081101561119657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b3d565b604051808260ff1660ff16815260200191505060405180910390f35b611240600480360360408110156111f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b5d565b604051808215151515815260200191505060405180910390f35b611262612c92565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112a2578082015181840152602081019050611287565b50505050905090810190601f1680156112cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61131f600480360360208110156112f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d34565b005b611329612d9e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561136957808201518184015260208101905061134e565b50505050905090810190601f1680156113965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6113e6600480360360208110156113ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612dd7565b005b611434600480360360408110156113fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e41565b604051808215151515815260200191505060405180910390f35b6114906004803603602081101561146457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eb4565b005b6114de600480360360408110156114a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612f1e565b604051808215151515815260200191505060405180910390f35b6115446004803603604081101561150e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612feb565b604051808215151515815260200191505060405180910390f35b6115a06004803603602081101561157457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130cf565b604051808215151515815260200191505060405180910390f35b6115c26130ec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6116466004803603602081101561161a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613115565b604051808215151515815260200191505060405180910390f35b6116a26004803603602081101561167657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613132565b005b6116ac61319c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156116ec5780820151818401526020810190506116d1565b50505050905090810190601f1680156117195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6117936004803603606081101561173d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506131b8565b604051808260ff1660ff16815260200191505060405180910390f35b611811600480360360408110156117c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061320a565b6040518082815260200191505060405180910390f35b61182f613291565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561186f578082015181840152602081019050611854565b50505050905090810190601f16801561189c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6118e6600480360360408110156118c057600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506132ca565b604051808215151515815260200191505060405180910390f35b6119426004803603602081101561191657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132f9565b604051808215151515815260200191505060405180910390f35b6119a86004803603604081101561197257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613319565b604051808215151515815260200191505060405180910390f35b611a04600480360360208110156119d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061338b565b005b611a6860048036036040811015611a1c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133f5565b604051808215151515815260200191505060405180910390f35b611ac460048036036020811015611a9857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134c1565b005b611b0860048036036020811015611adc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061352b565b604051808215151515815260200191505060405180910390f35b611b2b33612662565b611b80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180615967603a913960400191505060405180910390fd5b611b8a8282613548565b5050565b611b973361204e565b611bec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b611bf5816137c4565b50565b611c013361204e565b611c56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b611c5f81613835565b50565b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cfa5780601f10611ccf57610100808354040283529160200191611cfa565b820191906000526020600020905b815481529060010190602001808311611cdd57829003601f168201915b5050505050905090565b6000611d18611d11613898565b84846138a0565b6001905092915050565b600081565b611d303361204e565b611d85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b611d8e81613a97565b50565b600060019054906101000a900460ff1680611db05750611daf613afa565b5b80611dc757506000809054906101000a900460ff16155b611e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806158b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611e6c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8360339080519060200190611e82929190615571565b508260349080519060200190611e99929190615571565b5081603560006101000a81548160ff021916908360ff1602179055508015611ed65760008060016101000a81548160ff0219169083151502179055505b50505050565b611ee53361204e565b611f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b611f4381613b11565b50565b6000606a54905090565b609f60009054906101000a900460ff1681565b600181565b60008383836000611f7a8484846131b8565b9050600060ff168160ff1614611f8f8261267f565b90612035576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611ffa578082015181840152602081019050611fdf565b50505050905090810190601f1680156120275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50612041888888613b82565b9450505050509392505050565b600061206482609d613c5b90919063ffffffff16565b9050919050565b6120743361204e565b6120c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6120d281613d39565b50565b6000603560009054906101000a900460ff16905090565b60006121956120f9613898565b84612190856069600061210a613898565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613daa90919063ffffffff16565b6138a0565b6001905092915050565b6121a833612662565b6121fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180615967603a913960400191505060405180910390fd5b612208838383613e32565b505050565b612216336123f6565b61226b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061568d6030913960400191505060405180910390fd5b60a660009054906101000a900460ff166122ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6122f5613f28565b565b600281565b6000612307336130cf565b61235c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806157ed6030913960400191505060405180910390fd5b612367338484613fa8565b905092915050565b60006123858260a3613c5b90919063ffffffff16565b9050919050565b61239533613115565b6123ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806157b3603a913960400191505060405180910390fd5b6123f381614024565b50565b600061240c8260a5613c5b90919063ffffffff16565b9050919050565b6040518060600160405280603d81526020016158e4603d913981565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b905090565b61246333613115565b6124b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806157b3603a913960400191505060405180910390fd5b6124c18161415f565b50565b600060a660009054906101000a900460ff16905090565b6124e43361204e565b612539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6125428161429a565b50565b61254e3361204e565b6125a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6125ac8161430b565b50565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6126013361204e565b612656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b61265f8161437c565b50565b600061267882609e613c5b90919063ffffffff16565b9050919050565b6060600060ff168260ff1614156126cd576040518060400160405280600781526020017f53554343455353000000000000000000000000000000000000000000000000008152509050612764565b600160ff168260ff1614156126fc576040518060600160405280603c81526020016159f0603c91399050612764565b600260ff168260ff16141561272b576040518060600160405280603d81526020016158e4603d91399050612764565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525090505b919050565b6127723361204e565b6127c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6127d0816143ed565b50565b6127dc3361204e565b612831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b61283a8161445e565b50565b612846336123f6565b61289b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061568d6030913960400191505060405180910390fd5b60a660009054906101000a900460ff161561291e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6129266144cf565b565b600060019054906101000a900460ff16806129475750612946613afa565b5b8061295e57506000809054906101000a900460ff16155b6129b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806158b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612a03576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612a0e868686611d91565b612a19338885613fa8565b50612a238761430b565b612a2c82613835565b8015612a4d5760008060016101000a81548160ff0219169083151502179055505b50505050505050565b60a860009054906101000a900460ff1681565b612a7233612662565b612ac7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180615967603a913960400191505060405180910390fd5b612ad08161454f565b50565b612adc3361204e565b612b31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b612b3a81614741565b50565b60a06020528060005260406000206000915054906101000a900460ff1681565b6000609f60009054906101000a900460ff16612b7c5760019050612c8c565b600060a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168260ff161480612c395750600060ff168160ff16145b15612c4957600092505050612c8c565b60a160008360ff1660ff16815260200190815260200160002060008260ff1660ff16815260200190815260200160002060009054906101000a900460ff16925050505b92915050565b606060348054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d2a5780601f10612cff57610100808354040283529160200191612d2a565b820191906000526020600020905b815481529060010190602001808311612d0d57829003601f168201915b5050505050905090565b612d3d3361204e565b612d92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b612d9b816148e2565b50565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525081565b612de03361204e565b612e35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b612e3e81614953565b50565b6000612e4c3361236f565b612ea1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806157376030913960400191505060405180910390fd5b612eac3384846149c4565b905092915050565b612ebd3361204e565b612f12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b612f1b81614a40565b50565b6000612fe1612f2b613898565b84612fdc85604051806060016040528060258152602001615a576025913960696000612f55613898565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614ab19092919063ffffffff16565b6138a0565b6001905092915050565b60003383836000612ffd8484846131b8565b9050600060ff168160ff16146130128261267f565b906130b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561307d578082015181840152602081019050613062565b50505050905090810190601f1680156130aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506130c38787614b71565b94505050505092915050565b60006130e58260a2613c5b90919063ffffffff16565b9050919050565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf754905090565b600061312b8260a7613c5b90919063ffffffff16565b9050919050565b61313b3361204e565b613190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b61319981614b8f565b50565b6040518060600160405280603c81526020016159f0603c913981565b60006131c26124c4565b156131d05760029050613203565b6131d98461204e565b156131e75760009050613203565b6131f18484612b5d565b6131fe5760019050613203565b600090505b9392505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600781526020017f535543434553530000000000000000000000000000000000000000000000000081525081565b60a16020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60a96020528060005260406000206000915054906101000a900460ff1681565b60006133243361352b565b613379576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806156df6032913960400191505060405180910390fd5b6133838383614c00565b905092915050565b6133943361204e565b6133e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6133f281614c7c565b50565b600060a860009054906101000a900460ff1661341457600190506134bb565b60a960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156134b8575060a960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b90505b92915050565b6134ca3361204e565b61351f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b61352881614ced565b50565b60006135418260a4613c5b90919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156135ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061578d6026913960400191505060405180910390fd5b600060ff168160ff16141561364b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f496e76616c69642077686974656c69737420494420737570706c69656400000081525060200191505060405180910390fd5b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690508160a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600060ff168160ff1614613761573373ffffffffffffffffffffffffffffffffffffffff168160ff168473ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45b3373ffffffffffffffffffffffffffffffffffffffff168260ff168473ffffffffffffffffffffffffffffffffffffffff167fca6d1e885708b837a7647aeb7f4163ee4ca96058e08ac767be8d23c972c5027060405160405180910390a4505050565b6137d88160a3614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f85222465e0d438163a28671b59fc9ebeb03bf39f880ddd36c8315da7512b31c060405160405180910390a350565b80609f60006101000a81548160ff0219169083151502179055508015153373ffffffffffffffffffffffffffffffffffffffff167fb535c5f7f150db8dbf22962fc390e7fa9026b9c29ffad714197bee4620572bd660405160405180910390a350565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415613926576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806159a16024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156139ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806156bd6022913960400191505060405180910390fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b8060a860006101000a81548160ff0219169083151502179055508015153373ffffffffffffffffffffffffffffffffffffffff167f0254250bff2b56bce9719dfb6237446b9159bfbe2368f9dfe449d85da99b2be060405160405180910390a350565b6000803090506000813b9050600081149250505090565b613b2581609d614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367960405160405180910390a350565b6000613b8f848484614e1b565b613c5084613b9b613898565b613c4b8560405180606001604052806028815260200161586c60289139606960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000613c01613898565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614ab19092919063ffffffff16565b6138a0565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613ce2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806158946022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613d4d8160a2614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f4b5ef9a786cf64a7d82ebcf2d5132667edc9faef4ac36260d9a9e52c526b623260405160405180910390a350565b600080828401905083811015613e28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600060a160008560ff1660ff16815260200190815260200160002060008460ff1660ff16815260200190815260200160002060009054906101000a900460ff1690508160a160008660ff1660ff16815260200190815260200160002060008560ff1660ff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508260ff168460ff163373ffffffffffffffffffffffffffffffffffffffff167fb0353d563a9aa5231878c83727dc723a3cb8a38c2917f8ac2b777aa564c8a0d584866040518083151515158152602001821515151581526020019250505060405180910390a450505050565b600060a660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000613fb483836150d5565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8846040518082815260200191505060405180910390a3600190509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156140aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806157676026913960400191505060405180910390fd5b600160a960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167faf6ebb6594c3be37f747a8a4692decee2e128c133145b92b98391af1e942bb5260405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156141e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806159c5602b913960400191505060405180910390fd5b600060a960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc5d633221a999da7b50bad97ddd6cff0c917455d8651123a6433642833252b7c60405160405180910390a350565b6142ae8160a5614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb75903ade4a0fdb07d60c882c22c779e2e1c751883c37aecdcc92a8ec72b046e60405160405180910390a350565b61431f81609d61529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a60405160405180910390a350565b6143908160a761529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f891e671759c21e48221125d0aa55b5574dc00b3e3225e40f6cb10dde820822ad60405160405180910390a350565b61440181609e614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3ed21605dd544629fb45f2ccaedcc095ba1dbea540fb6eaf5493a7479856b0be60405160405180910390a350565b6144728160a561529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe0953c403a52f9dc1fef4202a8d33975c958b727bee0d7b5b328965ddad98d8160405160405180910390a350565b600160a660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156145d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180615a2c602b913960400191505060405180910390fd5b600060a060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168160ff161415614686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061563a6031913960400191505060405180910390fd5b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff168160ff168373ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45050565b8073ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561478757600080fd5b505afa15801561479b573d6000803e3d6000fd5b505050506040513d60208110156147b157600080fd5b81019080805190602001909291905050507fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b14614859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420636f6d70617469626c6500000000000000000000000000000000000081525060200191505060405180910390fd5b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7557feeaed647dc622e55877c30943e5c1d4feb92d1b8cfcc88d974163e9787bde9af81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6148f68160a461529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f2b5f18afd9a7b21f41bf023b012b3d4c8a22a21b79fa425cd4494ecbe297019660405160405180910390a350565b6149678160a261529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3c091dafb1d99e4a4c333024492eac3b2cd8bf921a3dd547c937db33be307bb860405160405180910390a350565b60006149d0838361536d565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b9453846040518082815260200191505060405180910390a3600190509392505050565b614a548160a7614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc76ab32d91026761e52ef1016d8293a11dbb26424e34581575cefc484d10c6f360405160405180910390a350565b6000838311158290614b5e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614b23578082015181840152602081019050614b08565b50505050905090810190601f168015614b505780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000614b85614b7e613898565b8484614e1b565b6001905092915050565b614ba38160a4614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb6fe3ab11eb9ab1d9f1d41c8f42a5d72d10122099ba1548e4a6d1a4d8cefec4b60405160405180910390a350565b6000614c0d833384614e1b565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb698e31a2abee5824d0d7bcfd2339aead7f9e9ae413fba50bf554ff3fa470b7b846040518082815260200191505060405180910390a36001905092915050565b614c9081609e61529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f5f36f4f5999f34947706fca376b955319b858573bf9d6bc59303c9a4cd80ced060405160405180910390a350565b614d018160a361529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f86515ebaad527298e98929c064c075f5a2604cc80afc0db29e73c01a36f8e98c60405160405180910390a350565b614d688282613c5b565b614dbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061584b6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415614ea1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806159426025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415614f27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806156176023913960400191505060405180910390fd5b614f938160405180606001604052806026815260200161571160269139606860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614ab19092919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061502881606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613daa90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415615178576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61518d81606a54613daa90919063ffffffff16565b606a819055506151e581606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613daa90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61529c8282613c5b565b1561530f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156153f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806159216021913960400191505060405180910390fd5b61545f8160405180606001604052806022815260200161566b60229139606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614ab19092919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506154b781606a5461552790919063ffffffff16565b606a81905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600061556983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614ab1565b905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106155b257805160ff19168380011785556155e0565b828001600101855582156155e0579182015b828111156155df5782518255916020019190600101906155c4565b5b5090506155ed91906155f1565b5090565b61561391905b8082111561560f5760008160009055506001016155f7565b5090565b9056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373416464726573732063616e6e6f742062652072656d6f7665642066726f6d20696e76616c69642077686974656c6973742e45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c6545524332303a20617070726f766520746f20746865207a65726f20616464726573735265766f6b6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205265766f6b657220726f6c6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c6543616e6e6f742061646420616464726573732030783020746f206120426c61636b6c6973742e43616e6e6f742061646420616464726573732030783020746f20612077686974656c6973742e426c61636b6c6973746572526f6c653a2063616c6c657220646f6573206e6f7420686176652074686520426c61636b6c697374657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c654f776e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204f776e657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564546865207472616e736665722077617320726573747269637465642064756520746f2074686520636f6e7472616374206265696e67207061757365642e45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737357686974656c6973746572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374657220726f6c6545524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e6e6f742072656d6f76652061646472657373203078302066726f6d206120426c61636b6c6973742e546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e43616e6e6f742072656d6f76652061646472657373203078302066726f6d20612077686974656c6973742e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820c640150da5b5e9a5cd9a64cdbc4b656f140ce37c3efe8dc3f31eed63f6e5970a64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103e65760003560e01c80637f4ab1dd1161020a578063a457c2d711610125578063dd62ed3e116100b8578063eac449d911610087578063eac449d91461195c578063eaf9144a146119c2578063f2c2b9ae14611a06578063f44637ba14611a82578063f6c4b01f14611ac6576103e6565b8063dd62ed3e146117af578063e7984d1714611827578063e9594508146118aa578063ea72d6ee14611900576103e6565b8063b66cd56c116100f4578063b66cd56c14611604578063c06f8b9414611660578063c8934462146116a4578063d4ce141514611727576103e6565b8063a457c2d714611492578063a9059cbb146114f8578063aa271e1a1461155e578063abd108ba146115ba576103e6565b806392e6d68b1161019d57806397af67441161016c57806397af674414611321578063983b2d56146113a45780639dc29fac146113e85780639fcf10071461144e576103e6565b806392e6d68b146111805780639437e2fe146111de57806395d89b411461125a578063961a66f6146112dd576103e6565b80638771cd2d116101d95780638771cd2d14610f41578063878dd332146110d65780638ab1d681146110f8578063912a98851461113c576103e6565b80637f4ab1dd14610e0557806382c3f79c14610eaf57806382dc1ec414610ef35780638456cb5914610f37576103e6565b80633950935111610305578063489c1b25116102985780636b2c0f55116102675780636b2c0f5514610c855780637065cb4814610cc957806370a0823114610d0d5780637bb06eea14610d655780637d0c269f14610da9576103e6565b8063489c1b2514610b7e57806352d1902d14610c01578063537df3b614610c1f5780635c975abb14610c63576103e6565b806340c10f19116102d457806340c10f1914610a1c5780634334614a14610a8257806344337ea114610ade57806346fbf68e14610b22576103e6565b8063395093511461093e5780633973b596146109a45780633f4ba83a146109ee5780633f713709146109f8576103e6565b8063173825d91161037d57806323b872dd1161034c57806323b872dd146107f45780632f54bf6e1461087a5780633092afd5146108d6578063313ce5671461091a576103e6565b8063173825d91461074c57806318160ddd14610790578063184d69ab146107ae5780631fb45ec0146107d0576103e6565b8063095ea7b3116103b9578063095ea7b3146105335780630e969a05146105995780631201cbd0146105bd5780631624f6c6146105ed576103e6565b80630263b858146103eb578063028468581461043c578063052d9e7e1461048057806306fdde03146104b0575b600080fd5b61043a6004803603604081101561040157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611b22565b005b61047e6004803603602081101561045257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b8e565b005b6104ae6004803603602081101561049657600080fd5b81019080803515159060200190929190505050611bf8565b005b6104b8611c62565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f85780820151818401526020810190506104dd565b50505050905090810190601f1680156105255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61057f6004803603604081101561054957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d04565b604051808215151515815260200191505060405180910390f35b6105a1611d22565b604051808260ff1660ff16815260200191505060405180910390f35b6105eb600480360360208110156105d357600080fd5b81019080803515159060200190929190505050611d27565b005b61074a6004803603606081101561060357600080fd5b810190808035906020019064010000000081111561062057600080fd5b82018360208201111561063257600080fd5b8035906020019184600183028401116401000000008311171561065457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106b757600080fd5b8201836020820111156106c957600080fd5b803590602001918460018302840111640100000000831117156106eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611d91565b005b61078e6004803603602081101561076257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611edc565b005b610798611f46565b6040518082815260200191505060405180910390f35b6107b6611f50565b604051808215151515815260200191505060405180910390f35b6107d8611f63565b604051808260ff1660ff16815260200191505060405180910390f35b6108606004803603606081101561080a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f68565b604051808215151515815260200191505060405180910390f35b6108bc6004803603602081101561089057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061204e565b604051808215151515815260200191505060405180910390f35b610918600480360360208110156108ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061206b565b005b6109226120d5565b604051808260ff1660ff16815260200191505060405180910390f35b61098a6004803603604081101561095457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120ec565b604051808215151515815260200191505060405180910390f35b6109ec600480360360608110156109ba57600080fd5b81019080803560ff169060200190929190803560ff16906020019092919080351515906020019092919050505061219f565b005b6109f661220d565b005b610a006122f7565b604051808260ff1660ff16815260200191505060405180910390f35b610a6860048036036040811015610a3257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506122fc565b604051808215151515815260200191505060405180910390f35b610ac460048036036020811015610a9857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061236f565b604051808215151515815260200191505060405180910390f35b610b2060048036036020811015610af457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061238c565b005b610b6460048036036020811015610b3857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123f6565b604051808215151515815260200191505060405180910390f35b610b86612413565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bc6578082015181840152602081019050610bab565b50505050905090810190601f168015610bf35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c0961242f565b6040518082815260200191505060405180910390f35b610c6160048036036020811015610c3557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061245a565b005b610c6b6124c4565b604051808215151515815260200191505060405180910390f35b610cc760048036036020811015610c9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124db565b005b610d0b60048036036020811015610cdf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612545565b005b610d4f60048036036020811015610d2357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125af565b6040518082815260200191505060405180910390f35b610da760048036036020811015610d7b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125f8565b005b610deb60048036036020811015610dbf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612662565b604051808215151515815260200191505060405180910390f35b610e3460048036036020811015610e1b57600080fd5b81019080803560ff16906020019092919050505061267f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e74578082015181840152602081019050610e59565b50505050905090810190601f168015610ea15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ef160048036036020811015610ec557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612769565b005b610f3560048036036020811015610f0957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127d3565b005b610f3f61283d565b005b6110d4600480360360c0811015610f5757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610f9457600080fd5b820183602082011115610fa657600080fd5b80359060200191846001830284011164010000000083111715610fc857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561102b57600080fd5b82018360208201111561103d57600080fd5b8035906020019184600183028401116401000000008311171561105f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919080359060200190929190803515159060200190929190505050612928565b005b6110de612a56565b604051808215151515815260200191505060405180910390f35b61113a6004803603602081101561110e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a69565b005b61117e6004803603602081101561115257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ad3565b005b6111c26004803603602081101561119657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b3d565b604051808260ff1660ff16815260200191505060405180910390f35b611240600480360360408110156111f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b5d565b604051808215151515815260200191505060405180910390f35b611262612c92565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112a2578082015181840152602081019050611287565b50505050905090810190601f1680156112cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61131f600480360360208110156112f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d34565b005b611329612d9e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561136957808201518184015260208101905061134e565b50505050905090810190601f1680156113965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6113e6600480360360208110156113ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612dd7565b005b611434600480360360408110156113fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e41565b604051808215151515815260200191505060405180910390f35b6114906004803603602081101561146457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eb4565b005b6114de600480360360408110156114a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612f1e565b604051808215151515815260200191505060405180910390f35b6115446004803603604081101561150e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612feb565b604051808215151515815260200191505060405180910390f35b6115a06004803603602081101561157457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130cf565b604051808215151515815260200191505060405180910390f35b6115c26130ec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6116466004803603602081101561161a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613115565b604051808215151515815260200191505060405180910390f35b6116a26004803603602081101561167657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613132565b005b6116ac61319c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156116ec5780820151818401526020810190506116d1565b50505050905090810190601f1680156117195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6117936004803603606081101561173d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506131b8565b604051808260ff1660ff16815260200191505060405180910390f35b611811600480360360408110156117c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061320a565b6040518082815260200191505060405180910390f35b61182f613291565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561186f578082015181840152602081019050611854565b50505050905090810190601f16801561189c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6118e6600480360360408110156118c057600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506132ca565b604051808215151515815260200191505060405180910390f35b6119426004803603602081101561191657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132f9565b604051808215151515815260200191505060405180910390f35b6119a86004803603604081101561197257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613319565b604051808215151515815260200191505060405180910390f35b611a04600480360360208110156119d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061338b565b005b611a6860048036036040811015611a1c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133f5565b604051808215151515815260200191505060405180910390f35b611ac460048036036020811015611a9857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134c1565b005b611b0860048036036020811015611adc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061352b565b604051808215151515815260200191505060405180910390f35b611b2b33612662565b611b80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180615967603a913960400191505060405180910390fd5b611b8a8282613548565b5050565b611b973361204e565b611bec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b611bf5816137c4565b50565b611c013361204e565b611c56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b611c5f81613835565b50565b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cfa5780601f10611ccf57610100808354040283529160200191611cfa565b820191906000526020600020905b815481529060010190602001808311611cdd57829003601f168201915b5050505050905090565b6000611d18611d11613898565b84846138a0565b6001905092915050565b600081565b611d303361204e565b611d85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b611d8e81613a97565b50565b600060019054906101000a900460ff1680611db05750611daf613afa565b5b80611dc757506000809054906101000a900460ff16155b611e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806158b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611e6c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8360339080519060200190611e82929190615571565b508260349080519060200190611e99929190615571565b5081603560006101000a81548160ff021916908360ff1602179055508015611ed65760008060016101000a81548160ff0219169083151502179055505b50505050565b611ee53361204e565b611f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b611f4381613b11565b50565b6000606a54905090565b609f60009054906101000a900460ff1681565b600181565b60008383836000611f7a8484846131b8565b9050600060ff168160ff1614611f8f8261267f565b90612035576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611ffa578082015181840152602081019050611fdf565b50505050905090810190601f1680156120275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50612041888888613b82565b9450505050509392505050565b600061206482609d613c5b90919063ffffffff16565b9050919050565b6120743361204e565b6120c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6120d281613d39565b50565b6000603560009054906101000a900460ff16905090565b60006121956120f9613898565b84612190856069600061210a613898565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613daa90919063ffffffff16565b6138a0565b6001905092915050565b6121a833612662565b6121fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180615967603a913960400191505060405180910390fd5b612208838383613e32565b505050565b612216336123f6565b61226b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061568d6030913960400191505060405180910390fd5b60a660009054906101000a900460ff166122ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6122f5613f28565b565b600281565b6000612307336130cf565b61235c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806157ed6030913960400191505060405180910390fd5b612367338484613fa8565b905092915050565b60006123858260a3613c5b90919063ffffffff16565b9050919050565b61239533613115565b6123ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806157b3603a913960400191505060405180910390fd5b6123f381614024565b50565b600061240c8260a5613c5b90919063ffffffff16565b9050919050565b6040518060600160405280603d81526020016158e4603d913981565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b905090565b61246333613115565b6124b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806157b3603a913960400191505060405180910390fd5b6124c18161415f565b50565b600060a660009054906101000a900460ff16905090565b6124e43361204e565b612539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6125428161429a565b50565b61254e3361204e565b6125a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6125ac8161430b565b50565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6126013361204e565b612656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b61265f8161437c565b50565b600061267882609e613c5b90919063ffffffff16565b9050919050565b6060600060ff168260ff1614156126cd576040518060400160405280600781526020017f53554343455353000000000000000000000000000000000000000000000000008152509050612764565b600160ff168260ff1614156126fc576040518060600160405280603c81526020016159f0603c91399050612764565b600260ff168260ff16141561272b576040518060600160405280603d81526020016158e4603d91399050612764565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525090505b919050565b6127723361204e565b6127c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6127d0816143ed565b50565b6127dc3361204e565b612831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b61283a8161445e565b50565b612846336123f6565b61289b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061568d6030913960400191505060405180910390fd5b60a660009054906101000a900460ff161561291e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6129266144cf565b565b600060019054906101000a900460ff16806129475750612946613afa565b5b8061295e57506000809054906101000a900460ff16155b6129b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806158b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612a03576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612a0e868686611d91565b612a19338885613fa8565b50612a238761430b565b612a2c82613835565b8015612a4d5760008060016101000a81548160ff0219169083151502179055505b50505050505050565b60a860009054906101000a900460ff1681565b612a7233612662565b612ac7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180615967603a913960400191505060405180910390fd5b612ad08161454f565b50565b612adc3361204e565b612b31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b612b3a81614741565b50565b60a06020528060005260406000206000915054906101000a900460ff1681565b6000609f60009054906101000a900460ff16612b7c5760019050612c8c565b600060a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168260ff161480612c395750600060ff168160ff16145b15612c4957600092505050612c8c565b60a160008360ff1660ff16815260200190815260200160002060008260ff1660ff16815260200190815260200160002060009054906101000a900460ff16925050505b92915050565b606060348054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d2a5780601f10612cff57610100808354040283529160200191612d2a565b820191906000526020600020905b815481529060010190602001808311612d0d57829003601f168201915b5050505050905090565b612d3d3361204e565b612d92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b612d9b816148e2565b50565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525081565b612de03361204e565b612e35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b612e3e81614953565b50565b6000612e4c3361236f565b612ea1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806157376030913960400191505060405180910390fd5b612eac3384846149c4565b905092915050565b612ebd3361204e565b612f12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b612f1b81614a40565b50565b6000612fe1612f2b613898565b84612fdc85604051806060016040528060258152602001615a576025913960696000612f55613898565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614ab19092919063ffffffff16565b6138a0565b6001905092915050565b60003383836000612ffd8484846131b8565b9050600060ff168160ff16146130128261267f565b906130b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561307d578082015181840152602081019050613062565b50505050905090810190601f1680156130aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506130c38787614b71565b94505050505092915050565b60006130e58260a2613c5b90919063ffffffff16565b9050919050565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf754905090565b600061312b8260a7613c5b90919063ffffffff16565b9050919050565b61313b3361204e565b613190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b61319981614b8f565b50565b6040518060600160405280603c81526020016159f0603c913981565b60006131c26124c4565b156131d05760029050613203565b6131d98461204e565b156131e75760009050613203565b6131f18484612b5d565b6131fe5760019050613203565b600090505b9392505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600781526020017f535543434553530000000000000000000000000000000000000000000000000081525081565b60a16020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60a96020528060005260406000206000915054906101000a900460ff1681565b60006133243361352b565b613379576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806156df6032913960400191505060405180910390fd5b6133838383614c00565b905092915050565b6133943361204e565b6133e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b6133f281614c7c565b50565b600060a860009054906101000a900460ff1661341457600190506134bb565b60a960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156134b8575060a960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b90505b92915050565b6134ca3361204e565b61351f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061581d602e913960400191505060405180910390fd5b61352881614ced565b50565b60006135418260a4613c5b90919063ffffffff16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156135ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061578d6026913960400191505060405180910390fd5b600060ff168160ff16141561364b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f496e76616c69642077686974656c69737420494420737570706c69656400000081525060200191505060405180910390fd5b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690508160a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600060ff168160ff1614613761573373ffffffffffffffffffffffffffffffffffffffff168160ff168473ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45b3373ffffffffffffffffffffffffffffffffffffffff168260ff168473ffffffffffffffffffffffffffffffffffffffff167fca6d1e885708b837a7647aeb7f4163ee4ca96058e08ac767be8d23c972c5027060405160405180910390a4505050565b6137d88160a3614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f85222465e0d438163a28671b59fc9ebeb03bf39f880ddd36c8315da7512b31c060405160405180910390a350565b80609f60006101000a81548160ff0219169083151502179055508015153373ffffffffffffffffffffffffffffffffffffffff167fb535c5f7f150db8dbf22962fc390e7fa9026b9c29ffad714197bee4620572bd660405160405180910390a350565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415613926576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806159a16024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156139ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806156bd6022913960400191505060405180910390fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b8060a860006101000a81548160ff0219169083151502179055508015153373ffffffffffffffffffffffffffffffffffffffff167f0254250bff2b56bce9719dfb6237446b9159bfbe2368f9dfe449d85da99b2be060405160405180910390a350565b6000803090506000813b9050600081149250505090565b613b2581609d614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367960405160405180910390a350565b6000613b8f848484614e1b565b613c5084613b9b613898565b613c4b8560405180606001604052806028815260200161586c60289139606960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000613c01613898565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614ab19092919063ffffffff16565b6138a0565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613ce2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806158946022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613d4d8160a2614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f4b5ef9a786cf64a7d82ebcf2d5132667edc9faef4ac36260d9a9e52c526b623260405160405180910390a350565b600080828401905083811015613e28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600060a160008560ff1660ff16815260200190815260200160002060008460ff1660ff16815260200190815260200160002060009054906101000a900460ff1690508160a160008660ff1660ff16815260200190815260200160002060008560ff1660ff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508260ff168460ff163373ffffffffffffffffffffffffffffffffffffffff167fb0353d563a9aa5231878c83727dc723a3cb8a38c2917f8ac2b777aa564c8a0d584866040518083151515158152602001821515151581526020019250505060405180910390a450505050565b600060a660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000613fb483836150d5565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8846040518082815260200191505060405180910390a3600190509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156140aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806157676026913960400191505060405180910390fd5b600160a960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167faf6ebb6594c3be37f747a8a4692decee2e128c133145b92b98391af1e942bb5260405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156141e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806159c5602b913960400191505060405180910390fd5b600060a960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc5d633221a999da7b50bad97ddd6cff0c917455d8651123a6433642833252b7c60405160405180910390a350565b6142ae8160a5614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb75903ade4a0fdb07d60c882c22c779e2e1c751883c37aecdcc92a8ec72b046e60405160405180910390a350565b61431f81609d61529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a60405160405180910390a350565b6143908160a761529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f891e671759c21e48221125d0aa55b5574dc00b3e3225e40f6cb10dde820822ad60405160405180910390a350565b61440181609e614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3ed21605dd544629fb45f2ccaedcc095ba1dbea540fb6eaf5493a7479856b0be60405160405180910390a350565b6144728160a561529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe0953c403a52f9dc1fef4202a8d33975c958b727bee0d7b5b328965ddad98d8160405160405180910390a350565b600160a660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156145d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180615a2c602b913960400191505060405180910390fd5b600060a060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168160ff161415614686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061563a6031913960400191505060405180910390fd5b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff168160ff168373ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45050565b8073ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561478757600080fd5b505afa15801561479b573d6000803e3d6000fd5b505050506040513d60208110156147b157600080fd5b81019080805190602001909291905050507fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b14614859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420636f6d70617469626c6500000000000000000000000000000000000081525060200191505060405180910390fd5b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7557feeaed647dc622e55877c30943e5c1d4feb92d1b8cfcc88d974163e9787bde9af81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6148f68160a461529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f2b5f18afd9a7b21f41bf023b012b3d4c8a22a21b79fa425cd4494ecbe297019660405160405180910390a350565b6149678160a261529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3c091dafb1d99e4a4c333024492eac3b2cd8bf921a3dd547c937db33be307bb860405160405180910390a350565b60006149d0838361536d565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b9453846040518082815260200191505060405180910390a3600190509392505050565b614a548160a7614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc76ab32d91026761e52ef1016d8293a11dbb26424e34581575cefc484d10c6f360405160405180910390a350565b6000838311158290614b5e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614b23578082015181840152602081019050614b08565b50505050905090810190601f168015614b505780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000614b85614b7e613898565b8484614e1b565b6001905092915050565b614ba38160a4614d5e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb6fe3ab11eb9ab1d9f1d41c8f42a5d72d10122099ba1548e4a6d1a4d8cefec4b60405160405180910390a350565b6000614c0d833384614e1b565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb698e31a2abee5824d0d7bcfd2339aead7f9e9ae413fba50bf554ff3fa470b7b846040518082815260200191505060405180910390a36001905092915050565b614c9081609e61529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f5f36f4f5999f34947706fca376b955319b858573bf9d6bc59303c9a4cd80ced060405160405180910390a350565b614d018160a361529290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f86515ebaad527298e98929c064c075f5a2604cc80afc0db29e73c01a36f8e98c60405160405180910390a350565b614d688282613c5b565b614dbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061584b6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415614ea1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806159426025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415614f27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806156176023913960400191505060405180910390fd5b614f938160405180606001604052806026815260200161571160269139606860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614ab19092919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061502881606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613daa90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415615178576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61518d81606a54613daa90919063ffffffff16565b606a819055506151e581606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613daa90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61529c8282613c5b565b1561530f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156153f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806159216021913960400191505060405180910390fd5b61545f8160405180606001604052806022815260200161566b60229139606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614ab19092919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506154b781606a5461552790919063ffffffff16565b606a81905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600061556983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614ab1565b905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106155b257805160ff19168380011785556155e0565b828001600101855582156155e0579182015b828111156155df5782518255916020019190600101906155c4565b5b5090506155ed91906155f1565b5090565b61561391905b8082111561560f5760008160009055506001016155f7565b5090565b9056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373416464726573732063616e6e6f742062652072656d6f7665642066726f6d20696e76616c69642077686974656c6973742e45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c6545524332303a20617070726f766520746f20746865207a65726f20616464726573735265766f6b6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205265766f6b657220726f6c6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c6543616e6e6f742061646420616464726573732030783020746f206120426c61636b6c6973742e43616e6e6f742061646420616464726573732030783020746f20612077686974656c6973742e426c61636b6c6973746572526f6c653a2063616c6c657220646f6573206e6f7420686176652074686520426c61636b6c697374657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c654f776e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204f776e657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564546865207472616e736665722077617320726573747269637465642064756520746f2074686520636f6e7472616374206265696e67207061757365642e45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737357686974656c6973746572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374657220726f6c6545524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e6e6f742072656d6f76652061646472657373203078302066726f6d206120426c61636b6c6973742e546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e43616e6e6f742072656d6f76652061646472657373203078302066726f6d20612077686974656c6973742e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820c640150da5b5e9a5cd9a64cdbc4b656f140ce37c3efe8dc3f31eed63f6e5970a64736f6c63430005100032",
  "sourceMap": "453:4080:13:-;;;;;;;;;",
  "deployedSourceMap": "453:4080:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;453:4080:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5618:143:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5618:143:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;914:95:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;914:95:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;5413:106:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5413:106:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;737:81:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;737:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2575:149:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2575:149:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;643:38:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2637:106:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2637:106:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;490:182:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;490:182:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;490:182:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;490:182:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;490:182:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;490:182:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;490:182:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;490:182:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;490:182:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;490:182:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;692:93:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;692:93:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;1634:89:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;373:30:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;687:47:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4316:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4316:215:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;488:105:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;488:105:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;914:95:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;914:95:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;1565:81:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3877:207:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3877:207:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6082:240:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6082:240:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1997:84:17;;;:::i;:::-;;740:40:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;503:143:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;503:143:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;424:107:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;424:107:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2842:115:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2842:115:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;424:107:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;424:107:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;965:111:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;965:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:145:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3056:131:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3056:131:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;903:76:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;914:95:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;914:95:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;599:87:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;599:87:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;1781:108:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1781:108:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;909:99:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;909:99:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;474:117:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;474:117:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3051:526:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3051:526:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3051:526:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:105:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1014:105:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;819:89:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;819:89:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;1824:83:17;;;:::i;:::-;;1267:400:13;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1267:400:13;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1267:400:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1267:400:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1267:400:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1267:400:13;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1267:400:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1267:400:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1267:400:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1267:400:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;312:30:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5860:131:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5860:131:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;1772:122:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1772:122:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;664:51:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;664:51:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4567:773;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4567:773:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;931:85:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;931:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:91:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;837:91:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;1082:59:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1082:59:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;819:89:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;819:89:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;514:134:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;514:134:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1014:105:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1014:105:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;4571:258:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4571:258:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4017:193:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4017:193:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;424:107:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;424:107:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;685:231:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;474:117:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;474:117:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;934:97:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;934:97:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;842:117:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;842:117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2071:751;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2071:751:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2305:132:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2305:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;786:50:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;786:50:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:74:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;871:74:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;411:50:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;411:50:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;550:121:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;550:121:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;909:99:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;909:99:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;2195:369:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2195:369:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;819:89:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;819:89:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;434:109:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;434:109:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5618:143:20;362:25:27;376:10;362:13;:25::i;:::-;354:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:40:20;5730:12;5744:9;5714:15;:40::i;:::-;5618:143;;:::o;914:95:22:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;980:22:22;994:7;980:13;:22::i;:::-;914:95;:::o;5413:106:20:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5483:29:20;5504:7;5483:20;:29::i;:::-;5413:106;:::o;737:81:5:-;774:13;806:5;799:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:81;:::o;2575:149:4:-;2641:4;2657:39;2666:12;:10;:12::i;:::-;2680:7;2689:6;2657:8;:39::i;:::-;2713:4;2706:11;;2575:149;;;;:::o;643:38:13:-;680:1;643:38;:::o;2637:106:14:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2707:29:14;2728:7;2707:20;:29::i;:::-;2637:106;:::o;490:182:5:-;1024:12:9;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;605:4:5;597:5;:12;;;;;;;;;;;;:::i;:::-;;629:6;619:7;:16;;;;;;;;;;;;:::i;:::-;;657:8;645:9;;:20;;;;;;;;;;;;;;;;;;1268:14:9;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;490:182:5;;;;:::o;692:93:24:-;394:19;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:21;770:7;757:12;:21::i;:::-;692:93;:::o;1634:89:4:-;1678:7;1704:12;;1697:19;;1634:89;:::o;373:30:20:-;;;;;;;;;;;;;:::o;687:47:13:-;733:1;687:47;:::o;4316:215::-;4451:12;4417:4;4423:2;4427:5;3733:21;3757:42;3783:4;3789:2;3793:5;3757:25;:42::i;:::-;3733:66;;680:1;3817:31;;:15;:31;;;3850:46;3880:15;3850:29;:46::i;:::-;3809:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3809:88:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4489:35;4508:4;4514:2;4518:5;4489:18;:35::i;:::-;4479:45;;4316:215;;;;;;;;;:::o;488:105:24:-;543:4;566:20;578:7;566;:11;;:20;;;;:::i;:::-;559:27;;488:105;;;:::o;914:95:23:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;980:22:23;994:7;980:13;:22::i;:::-;914:95;:::o;1565:81:5:-;1606:5;1630:9;;;;;;;;;;;1623:16;;1565:81;:::o;3877:207:4:-;3957:4;3973:83;3982:12;:10;:12::i;:::-;3996:7;4005:50;4044:10;4005:11;:25;4017:12;:10;:12::i;:::-;4005:25;;;;;;;;;;;;;;;:34;4031:7;4005:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3973:8;:83::i;:::-;4073:4;4066:11;;3877:207;;;;:::o;6082:240:20:-;362:25:27;376:10;362:13;:25::i;:::-;354:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6228:87:20;6260:15;6277:20;6299:15;6228:31;:87::i;:::-;6082:240;;;:::o;1997:84:17:-;327:20:25;336:10;327:8;:20::i;:::-;319:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1323:7:17;;;;;;;;;;;1315:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:19;:17;:19::i;:::-;1997:84::o;740:40:13:-;779:1;740:40;:::o;503:143:16:-;577:4;327:20:23;336:10;327:8;:20::i;:::-;319:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:43:16;613:10;625:7;634:6;598:14;:43::i;:::-;591:50;;503:143;;;;:::o;424:107:22:-;480:4;503:21;516:7;503:8;:12;;:21;;;;:::i;:::-;496:28;;424:107;;;:::o;2842:115:14:-;362:25:21;376:10;362:13;:25::i;:::-;354:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2921:29:14;2937:12;2921:15;:29::i;:::-;2842:115;:::o;424:107:25:-;480:4;503:21;516:7;503:8;:12;;:21;;;;:::i;:::-;496:28;;424:107;;;:::o;965:111:13:-;;;;;;;;;;;;;;;;;;;:::o;922:145:18:-;968:7;994:66;987:73;;;;922:145;:::o;3056:131:14:-;362:25:21;376:10;362:13;:25::i;:::-;354:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3143:37:14;3164:15;3143:20;:37::i;:::-;3056:131;:::o;903:76:17:-;942:4;965:7;;;;;;;;;;;958:14;;903:76;:::o;914:95:25:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;980:22:25;994:7;980:13;:22::i;:::-;914:95;:::o;599:87:24:-;394:19;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:18;671:7;661:9;:18::i;:::-;599:87;:::o;1781:108:4:-;1838:7;1864:9;:18;1874:7;1864:18;;;;;;;;;;;;;;;;1857:25;;1781:108;;;:::o;909:99:21:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:24:21;993:7;977:15;:24::i;:::-;909:99;:::o;474:117:27:-;535:4;558:26;576:7;558:13;:17;;:26;;;;:::i;:::-;551:33;;474:117;;;:::o;3051:526:13:-;3159:13;680:1;3192:31;;:15;:31;;;3188:84;;;3246:15;;;;;;;;;;;;;;;;;3239:22;;;;3188:84;733:1;3286:40;;:15;:40;;;3282:107;;;3349:29;;;;;;;;;;;;;;;;;3342:36;;;;3282:107;779:1;3403:33;;:15;:33;;;3399:93;;;3459:22;;;;;;;;;;;;;;;;;3452:29;;;;3399:93;3557:13;;;;;;;;;;;;;;;;;3550:20;;3051:526;;;;:::o;1014:105:27:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:27:27;1104:7;1085:18;:27::i;:::-;1014:105;:::o;819:89:25:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:19:25;893:7;882:10;:19::i;:::-;819:89;:::o;1824:83:17:-;327:20:25;336:10;327:8;:20::i;:::-;319:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:7:17;;;;;;;;;;;1131:8;1123:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1883:17;:15;:17::i;:::-;1824:83::o;1267:400:13:-;1024:12:9;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1456:48:13;1481:4;1487:6;1495:8;1456:24;:48::i;:::-;1514;1529:10;1541:5;1548:13;1514:14;:48::i;:::-;;1572:26;1592:5;1572:19;:26::i;:::-;1608:52;1643:16;1608:34;:52::i;:::-;1268:14:9;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1267:400:13;;;;;;;:::o;312:30:14:-;;;;;;;;;;;;;:::o;5860:131:20:-;362:25:27;376:10;362:13;:25::i;:::-;354:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5947:37:20;5968:15;5947:20;:37::i;:::-;5860:131;:::o;1772:122:13:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:40:13;1876:10;1847:28;:40::i;:::-;1772:122;:::o;664:51:20:-;;;;;;;;;;;;;;;;;;;;;;:::o;4567:773::-;4653:4;4740:18;;;;;;;;;;;4736:59;;4780:4;4773:11;;;;4736:59;4850:21;4874:17;:25;4892:6;4874:25;;;;;;;;;;;;;;;;;;;;;;;;;4850:49;;4909:23;4935:17;:27;4953:8;4935:27;;;;;;;;;;;;;;;;;;;;;;;;;4909:53;;504:1;5055:31;;:15;:31;;;:68;;;;504:1;5090:33;;:17;:33;;;5055:68;5052:109;;;5145:5;5138:12;;;;;;5052:109;5272:25;:42;5298:15;5272:42;;;;;;;;;;;;;;;:61;5315:17;5272:61;;;;;;;;;;;;;;;;;;;;;;;;;5265:68;;;;4567:773;;;;;:::o;931:85:5:-;970:13;1002:7;995:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;931:85;:::o;837:91:26:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:20:26;913:7;901:11;:20::i;:::-;837:91;:::o;1082:59:13:-;;;;;;;;;;;;;;;;;;;:::o;819:89:23:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:19:23;893:7;882:10;:19::i;:::-;819:89;:::o;514:134:15:-;588:4;327:20:22;336:10;327:8;:20::i;:::-;319:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;609:34:15;615:10;627:7;636:6;609:5;:34::i;:::-;602:41;;514:134;;;;:::o;1014:105:21:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:27:21;1104:7;1085:18;:27::i;:::-;1014:105;:::o;4571:258:4:-;4656:4;4672:129;4681:12;:10;:12::i;:::-;4695:7;4704:96;4743:15;4704:96;;;;;;;;;;;;;;;;;:11;:25;4716:12;:10;:12::i;:::-;4704:25;;;;;;;;;;;;;;;:34;4730:7;4704:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4672:8;:129::i;:::-;4818:4;4811:11;;4571:258;;;;:::o;4017:193:13:-;4140:12;4100:10;4112:2;4116:5;3733:21;3757:42;3783:4;3789:2;3793:5;3757:25;:42::i;:::-;3733:66;;680:1;3817:31;;:15;:31;;;3850:46;3880:15;3850:29;:46::i;:::-;3809:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3809:88:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:25;4193:2;4197:5;4178:14;:25::i;:::-;4168:35;;4017:193;;;;;;;;:::o;424:107:23:-;480:4;503:21;516:7;503:8;:12;;:21;;;;:::i;:::-;496:28;;424:107;;;:::o;685:231:18:-;733:20;833:66;827:73;811:89;;774:136;:::o;474:117:21:-;535:4;558:26;576:7;558:13;:17;;:26;;;;:::i;:::-;551:33;;474:117;;;:::o;934:97:26:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:23:26;1016:7;1001:14;:23::i;:::-;934:97;:::o;842:117:13:-;;;;;;;;;;;;;;;;;;;:::o;2071:751::-;2187:5;2263:17;:15;:17::i;:::-;2259:69;;;779:1;2296:21;;;;2259:69;2413:23;2431:4;2413:17;:23::i;:::-;2410:72;;;680:1;2452:19;;;;2410:72;2640:31;2662:4;2668:2;2640:21;:31::i;:::-;2636:90;;733:1;2687:28;;;;2636:90;680:1;2796:19;;2071:751;;;;;;:::o;2305:132:4:-;2377:7;2403:11;:18;2415:5;2403:18;;;;;;;;;;;;;;;:27;2422:7;2403:27;;;;;;;;;;;;;;;;2396:34;;2305:132;;;;:::o;786:50:13:-;;;;;;;;;;;;;;;;;;;:::o;871:74:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;411:50:14:-;;;;;;;;;;;;;;;;;;;;;;:::o;550:121:19:-;624:4;334:21:26;344:10;334:9;:21::i;:::-;326:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:21:19;653:4;659:6;645:7;:21::i;:::-;638:28;;550:121;;;;:::o;909:99:27:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:24:27;993:7;977:15;:24::i;:::-;909:99;:::o;2195:369:14:-;2281:4;2368:18;;;;;;;;;;;2364:59;;2408:4;2401:11;;;;2364:59;2500:17;:25;2518:6;2500:25;;;;;;;;;;;;;;;;;;;;;;;;;2499:26;:58;;;;;2530:17;:27;2548:8;2530:27;;;;;;;;;;;;;;;;;;;;;;;;;2529:28;2499:58;2492:65;;2195:369;;;;;:::o;819:89:22:-;394:19:24;402:10;394:7;:19::i;:::-;386:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:19:22;893:7;882:10;:19::i;:::-;819:89;:::o;434:109:26:-;491:4;514:22;528:7;514:9;:13;;:22;;;;:::i;:::-;507:29;;434:109;;;:::o;1863:946:20:-;2026:1;2002:26;;:12;:26;;;;1994:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:1;2131:25;;:9;:25;;;;2123:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:23;2271:17;:31;2289:12;2271:31;;;;;;;;;;;;;;;;;;;;;;;;;2245:57;;2390:9;2356:17;:31;2374:12;2356:31;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;504:1;2503:33;;:17;:33;;;2500:183;;2661:10;2600:72;;2642:17;2600:72;;2628:12;2600:72;;;;;;;;;;;;2500:183;2791:10;2742:60;;2780:9;2742:60;;2766:12;2742:60;;;;;;;;;;;;1863:946;;;:::o;674:139:22:-;733:24;749:7;733:8;:15;;:24;;;;:::i;:::-;795:10;772:34;;786:7;772:34;;;;;;;;;;;;674:139;:::o;1478:157:20:-;1562:7;1541:18;;:28;;;;;;;;;;;;;;;;;;1620:7;1584:44;;1608:10;1584:44;;;;;;;;;;;;1478:157;:::o;862:96:0:-;907:15;941:10;934:17;;862:96;:::o;7425:332:4:-;7535:1;7518:19;;:5;:19;;;;7510:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7615:1;7596:21;;:7;:21;;;;7588:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7697:6;7667:11;:18;7679:5;7667:18;;;;;;;;;;;;;;;:27;7686:7;7667:27;;;;;;;;;;;;;;;:36;;;;7734:7;7718:32;;7727:5;7718:32;;;7743:6;7718:32;;;;;;;;;;;;;;;;;;7425:332;;;:::o;789:157:14:-;873:7;852:18;;:28;;;;;;;;;;;;;;;;;;931:7;895:44;;919:10;895:44;;;;;;;;;;;;789:157;:::o;1409:498:9:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;925:136:24:-;983:23;998:7;983;:14;;:23;;;;:::i;:::-;1043:10;1021:33;;1034:7;1021:33;;;;;;;;;;;;925:136;:::o;3182:300:4:-;3271:4;3287:36;3297:6;3305:9;3316:6;3287:9;:36::i;:::-;3333:121;3342:6;3350:12;:10;:12::i;:::-;3364:89;3402:6;3364:89;;;;;;;;;;;;;;;;;:11;:19;3376:6;3364:19;;;;;;;;;;;;;;;:33;3384:12;:10;:12::i;:::-;3364:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3333:8;:121::i;:::-;3471:4;3464:11;;3182:300;;;;;:::o;779:200:1:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;674:139:23:-;733:24;749:7;733:8;:15;;:24;;;;:::i;:::-;795:10;772:34;;786:7;772:34;;;;;;;;;;;;674:139;:::o;834:176:3:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3836:551:20:-;4005:20;4028:25;:42;4054:15;4028:42;;;;;;;;;;;;;;;:64;4071:20;4028:64;;;;;;;;;;;;;;;;;;;;;;;;;4005:87;;4205:15;4138:25;:42;4164:15;4138:42;;;;;;;;;;;;;;;:64;4181:20;4138:64;;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;4325:20;4271:109;;4308:15;4271:109;;4296:10;4271:109;;;4347:15;4364;4271:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3836:551;;;;:::o;1641:96:17:-;1690:5;1680:7;;:15;;;;;;;;;;;;;;;;;;1710:20;1719:10;1710:20;;;;;;;;;;;;;;;;;;;;;;1641:96::o;264:175:16:-;341:4;355:23;367:2;371:6;355:11;:23::i;:::-;404:2;391:24;;396:6;391:24;;;408:6;391:24;;;;;;;;;;;;;;;;;;430:4;423:11;;264:175;;;;;:::o;1066:399:14:-;1212:1;1188:26;;:12;:26;;;;1180:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:4;1311:17;:31;1329:12;1311:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1447:10;1409:49;;1433:12;1409:49;;;;;;;;;;;;1066:399;:::o;1588:430::-;1745:1;1718:29;;:15;:29;;;;1710:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1895:5;1858:17;:34;1876:15;1858:34;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;2000:10;1955:56;;1983:15;1955:56;;;;;;;;;;;;1588:430;:::o;674:139:25:-;733:24;749:7;733:8;:15;;:24;;;;:::i;:::-;795:10;772:34;;786:7;772:34;;;;;;;;;;;;674:139;:::o;791:128:24:-;846:20;858:7;846;:11;;:20;;;;:::i;:::-;901:10;881:31;;892:7;881:31;;;;;;;;;;;;791:128;:::o;597:146:21:-;658:26;676:7;658:13;:17;;:26;;;;:::i;:::-;725:10;699:37;;716:7;699:37;;;;;;;;;;;;597:146;:::o;749:154:27:-;813:29;834:7;813:13;:20;;:29;;;;:::i;:::-;885:10;857:39;;876:7;857:39;;;;;;;;;;;;749:154;:::o;537:131:25:-;593:21;606:7;593:8;:12;;:21;;;;:::i;:::-;650:10;629:32;;641:7;629:32;;;;;;;;;;;;537:131;:::o;1460:91:17:-;1507:4;1497:7;;:14;;;;;;;;;;;;;;;;;;1526:18;1533:10;1526:18;;;;;;;;;;;;;;;;;;;;;;1460:91::o;2929:727:20:-;3086:1;3059:29;;:15;:29;;;;3051:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3191:23;3217:17;:34;3235:15;3217:34;;;;;;;;;;;;;;;;;;;;;;;;;3191:60;;504:1;3328:33;;:17;:33;;;;3320:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:1;3470:17;:34;3488:15;3470:34;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;3638:10;3574:75;;3619:17;3574:75;;3602:15;3574:75;;;;;;;;;;;;2929:727;;:::o;231:448:18:-;408:10;398:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;398:37:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;398:37:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;398:37:18;;;;;;;;;;;;;;;;327:66;319:75;;:116;298:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:10;538:66;531:86;642:30;661:10;642:30;;;;;;;;;;;;;;;;;;;;;;231:448;:::o;549:134:26:-;606:22;620:7;606:9;:13;;:22;;;;:::i;:::-;665:10;643:33;;656:7;643:33;;;;;;;;;;;;549:134;:::o;537:131:23:-;593:21;606:7;593:8;:12;;:21;;;;:::i;:::-;650:10;629:32;;641:7;629:32;;;;;;;;;;;;537:131;:::o;266:181:15:-;345:4;359:25;371:4;377:6;359:11;:25::i;:::-;410:4;397:26;;402:6;397:26;;;416:6;397:26;;;;;;;;;;;;;;;;;;438:4;431:11;;266:181;;;;;:::o;749:154:21:-;813:29;834:7;813:13;:20;;:29;;;;:::i;:::-;885:10;857:39;;876:7;857:39;;;;;;;;;;;;749:154;:::o;1732:187:3:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;2092:155:4:-;2161:4;2177:42;2187:12;:10;:12::i;:::-;2201:9;2212:6;2177:9;:42::i;:::-;2236:4;2229:11;;2092:155;;;;:::o;689:142:26:-;749:25;766:7;749:9;:16;;:25;;;;:::i;:::-;813:10;789:35;;804:7;789:35;;;;;;;;;;;;689:142;:::o;273:211:19:-;360:4;374:43;390:5;397:10;409:7;374:15;:43::i;:::-;447:5;428:34;;435:10;428:34;;;454:7;428:34;;;;;;;;;;;;;;;;;;475:4;468:11;;273:211;;;;:::o;597:146:27:-;658:26;676:7;658:13;:17;;:26;;;;:::i;:::-;725:10;699:37;;716:7;699:37;;;;;;;;;;;;597:146;:::o;537:131:22:-;593:21;606:7;593:8;:12;;:21;;;;:::i;:::-;650:10;629:32;;641:7;629:32;;;;;;;;;;;;537:131;:::o;510:180:1:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;5303:464:4:-;5418:1;5400:20;;:6;:20;;;;5392:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5501:1;5480:23;;:9;:23;;;;5472:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5574;5596:6;5574:71;;;;;;;;;;;;;;;;;:9;:17;5584:6;5574:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5554:9;:17;5564:6;5554:17;;;;;;;;;;;;;;;:91;;;;5678:32;5703:6;5678:9;:20;5688:9;5678:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5655:9;:20;5665:9;5655:20;;;;;;;;;;;;;;;:55;;;;5742:9;5725:35;;5734:6;5725:35;;;5753:6;5725:35;;;;;;;;;;;;;;;;;;5303:464;;;:::o;6037:302::-;6131:1;6112:21;;:7;:21;;;;6104:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6195:24;6212:6;6195:12;;:16;;:24;;;;:::i;:::-;6180:12;:39;;;;6250:30;6273:6;6250:9;:18;6260:7;6250:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6229:9;:18;6239:7;6229:18;;;;;;;;;;;;;;;:51;;;;6316:7;6295:37;;6312:1;6295:37;;;6325:6;6295:37;;;;;;;;;;;;;;;;;;6037:302;;:::o;260:175:1:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;6658:342:4:-;6752:1;6733:21;;:7;:21;;;;6725:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6824:68;6847:6;6824:68;;;;;;;;;;;;;;;;;:9;:18;6834:7;6824:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;6803:9;:18;6813:7;6803:18;;;;;;;;;;;;;;;:89;;;;6917:24;6934:6;6917:12;;:16;;:24;;;;:::i;:::-;6902:12;:39;;;;6982:1;6956:37;;6965:7;6956:37;;;6986:6;6956:37;;;;;;;;;;;;;;;;;;6658:342;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;453:4080:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"./capabilities/Proxiable.sol\";\nimport \"./@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"./ERC1404.sol\";\nimport \"./roles/OwnerRole.sol\";\nimport \"./capabilities/Whitelistable.sol\";\nimport \"./capabilities/Mintable.sol\";\nimport \"./capabilities/Burnable.sol\";\nimport \"./capabilities/Revocable.sol\";\nimport \"./capabilities/Pausable.sol\";\nimport \"./capabilities/Blacklistable.sol\";\n\ncontract TokenSoftToken is Proxiable, ERC20Detailed, ERC1404, OwnerRole, Whitelistable, Mintable, Burnable, Revocable, Pausable, Blacklistable {\n\n    // ERC1404 Error codes and messages\n    uint8 public constant SUCCESS_CODE = 0;\n    uint8 public constant FAILURE_NON_WHITELIST = 1;\n    uint8 public constant FAILURE_PAUSED = 2;\n    string public constant SUCCESS_MESSAGE = \"SUCCESS\";\n    string public constant FAILURE_NON_WHITELIST_MESSAGE = \"The transfer was restricted due to white list configuration.\";\n    string public constant FAILURE_PAUSED_MESSAGE = \"The transfer was restricted due to the contract being paused.\";\n    string public constant UNKNOWN_ERROR = \"Unknown Error Code\";\n\n\n    /**\n    Constructor for the token to set readable details and mint all tokens\n    to the specified owner.\n     */\n    function initialize (address owner, string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, bool whitelistEnabled)\n        public\n        initializer\n    {\n        ERC20Detailed.initialize(name, symbol, decimals);\n        Mintable._mint(msg.sender, owner, initialSupply);\n        OwnerRole._addOwner(owner);\n        Whitelistable._setWhitelistEnabled(whitelistEnabled);\n    }\n\n    /**\n    Public function to update the address of the code contract, retricted to owner\n     */\n    function updateCodeAddress (address newAddress) public onlyOwner {\n        Proxiable._updateCodeAddress(newAddress);\n    }\n\n    /**\n    This function detects whether a transfer should be restricted and not allowed.\n    If the function returns SUCCESS_CODE (0) then it should be allowed.\n     */\n    function detectTransferRestriction (address from, address to, uint256)\n        public\n        view\n        returns (uint8)\n    {\n        // Check the paused status of the contract\n        if (Pausable.paused()) {\n            return FAILURE_PAUSED;\n        }\n\n        // If an owner transferring, then ignore whitelist restrictions\n        if(OwnerRole.isOwner(from)) {\n            return SUCCESS_CODE;\n        }\n\n        // Restrictions are enabled, so verify the whitelist config allows the transfer.\n        // Logic defined in Whitelistable parent class\n        if(!checkWhitelistAllowed(from, to)) {\n            return FAILURE_NON_WHITELIST;\n        }\n\n        // If no restrictions were triggered return success\n        return SUCCESS_CODE;\n    }\n\n    /**\n    This function allows a wallet or other client to get a human readable string to show\n    a user if a transfer was restricted.  It should return enough information for the user\n    to know why it failed.\n     */\n    function messageForTransferRestriction (uint8 restrictionCode)\n        public\n        view\n        returns (string memory)\n    {\n        if (restrictionCode == SUCCESS_CODE) {\n            return SUCCESS_MESSAGE;\n        }\n\n        if (restrictionCode == FAILURE_NON_WHITELIST) {\n            return FAILURE_NON_WHITELIST_MESSAGE;\n        }\n\n        if (restrictionCode == FAILURE_PAUSED) {\n            return FAILURE_PAUSED_MESSAGE;\n        }\n\n        // An unknown error code was passed in.\n        return UNKNOWN_ERROR;\n    }\n\n    /**\n    Evaluates whether a transfer should be allowed or not.\n     */\n    modifier notRestricted (address from, address to, uint256 value) {\n        uint8 restrictionCode = detectTransferRestriction(from, to, value);\n        require(restrictionCode == SUCCESS_CODE, messageForTransferRestriction(restrictionCode));\n        _;\n    }\n\n    /**\n    Overrides the parent class token transfer function to enforce restrictions.\n     */\n    function transfer (address to, uint256 value)\n        public\n        notRestricted(msg.sender, to, value)\n        returns (bool success)\n    {\n        success = ERC20.transfer(to, value);\n    }\n\n    /**\n    Overrides the parent class token transferFrom function to enforce restrictions.\n     */\n    function transferFrom (address from, address to, uint256 value)\n        public\n        notRestricted(from, to, value)\n        returns (bool success)\n    {\n        success = ERC20.transferFrom(from, to, value);\n    }\n}\n",
  "sourcePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol",
  "ast": {
    "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol",
    "exportedSymbols": {
      "TokenSoftToken": [
        1644
      ]
    },
    "id": 1645,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1385,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Proxiable.sol",
        "file": "./capabilities/Proxiable.sol",
        "id": 1386,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2075,
        "src": "25:38:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "./@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1387,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 846,
        "src": "64:92:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/ERC1404.sol",
        "file": "./ERC1404.sol",
        "id": 1388,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 1303,
        "src": "157:23:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/OwnerRole.sol",
        "file": "./roles/OwnerRole.sol",
        "id": 1389,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2862,
        "src": "181:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Whitelistable.sol",
        "file": "./capabilities/Whitelistable.sol",
        "id": 1390,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2441,
        "src": "213:42:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Mintable.sol",
        "file": "./capabilities/Mintable.sol",
        "id": 1391,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 1934,
        "src": "256:37:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Burnable.sol",
        "file": "./capabilities/Burnable.sol",
        "id": 1392,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 1870,
        "src": "294:37:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Revocable.sol",
        "file": "./capabilities/Revocable.sol",
        "id": 1393,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2137,
        "src": "332:38:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Pausable.sol",
        "file": "./capabilities/Pausable.sol",
        "id": 1394,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2029,
        "src": "371:37:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Blacklistable.sol",
        "file": "./capabilities/Blacklistable.sol",
        "id": 1395,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 1807,
        "src": "409:42:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1396,
              "name": "Proxiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2074,
              "src": "480:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxiable_$2074",
                "typeString": "contract Proxiable"
              }
            },
            "id": 1397,
            "nodeType": "InheritanceSpecifier",
            "src": "480:9:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1398,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 845,
              "src": "491:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$845",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1399,
            "nodeType": "InheritanceSpecifier",
            "src": "491:13:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1400,
              "name": "ERC1404",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1302,
              "src": "506:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1404_$1302",
                "typeString": "contract ERC1404"
              }
            },
            "id": 1401,
            "nodeType": "InheritanceSpecifier",
            "src": "506:7:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1402,
              "name": "OwnerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2861,
              "src": "515:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerRole_$2861",
                "typeString": "contract OwnerRole"
              }
            },
            "id": 1403,
            "nodeType": "InheritanceSpecifier",
            "src": "515:9:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1404,
              "name": "Whitelistable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2440,
              "src": "526:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelistable_$2440",
                "typeString": "contract Whitelistable"
              }
            },
            "id": 1405,
            "nodeType": "InheritanceSpecifier",
            "src": "526:13:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1406,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1933,
              "src": "541:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$1933",
                "typeString": "contract Mintable"
              }
            },
            "id": 1407,
            "nodeType": "InheritanceSpecifier",
            "src": "541:8:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1408,
              "name": "Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1869,
              "src": "551:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Burnable_$1869",
                "typeString": "contract Burnable"
              }
            },
            "id": 1409,
            "nodeType": "InheritanceSpecifier",
            "src": "551:8:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1410,
              "name": "Revocable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2136,
              "src": "561:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Revocable_$2136",
                "typeString": "contract Revocable"
              }
            },
            "id": 1411,
            "nodeType": "InheritanceSpecifier",
            "src": "561:9:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1412,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2028,
              "src": "572:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$2028",
                "typeString": "contract Pausable"
              }
            },
            "id": 1413,
            "nodeType": "InheritanceSpecifier",
            "src": "572:8:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1414,
              "name": "Blacklistable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1806,
              "src": "582:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Blacklistable_$1806",
                "typeString": "contract Blacklistable"
              }
            },
            "id": 1415,
            "nodeType": "InheritanceSpecifier",
            "src": "582:13:13"
          }
        ],
        "contractDependencies": [
          29,
          778,
          845,
          914,
          1278,
          1302,
          1806,
          1869,
          1933,
          2028,
          2074,
          2136,
          2440,
          2545,
          2650,
          2755,
          2861,
          2966,
          3071,
          3176
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1644,
        "linearizedBaseContracts": [
          1644,
          1806,
          2545,
          2028,
          2966,
          2136,
          3071,
          1869,
          2650,
          1933,
          2755,
          2440,
          3176,
          2861,
          778,
          1302,
          845,
          914,
          29,
          1278,
          2074
        ],
        "name": "TokenSoftToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1418,
            "name": "SUCCESS_CODE",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "643:38:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1416,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "643:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1417,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "680:1:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1421,
            "name": "FAILURE_NON_WHITELIST",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "687:47:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1419,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "687:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "733:1:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1424,
            "name": "FAILURE_PAUSED",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "740:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1422,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "740:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 1423,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "779:1:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1427,
            "name": "SUCCESS_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "786:50:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1425,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "786:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554343455353",
              "id": 1426,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "827:9:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
                "typeString": "literal_string \"SUCCESS\""
              },
              "value": "SUCCESS"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1430,
            "name": "FAILURE_NON_WHITELIST_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "842:117:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1428,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "842:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e",
              "id": 1429,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "897:62:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e2c08a66f2b86feb88c976c9f1fd6dfebdf34e61c54a5cf461a34d6ed427b2fc",
                "typeString": "literal_string \"The transfer was restricted due to white list configuration.\""
              },
              "value": "The transfer was restricted due to white list configuration."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1433,
            "name": "FAILURE_PAUSED_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "965:111:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1431,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "965:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f2074686520636f6e7472616374206265696e67207061757365642e",
              "id": 1432,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1013:63:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ad9af571a3b442df832ef21fd7c443d0876ede9535ce3c723edddbbdbeaba383",
                "typeString": "literal_string \"The transfer was restricted due to the contract being paused.\""
              },
              "value": "The transfer was restricted due to the contract being paused."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1436,
            "name": "UNKNOWN_ERROR",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "1082:59:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1434,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1082:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "556e6b6e6f776e204572726f7220436f6465",
              "id": 1435,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1121:20:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eff12b0856ae7501c8b50262ed26026205f1ee274bd4090cd444e8ef0358a146",
                "typeString": "literal_string \"Unknown Error Code\""
              },
              "value": "Unknown Error Code"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1482,
              "nodeType": "Block",
              "src": "1446:221:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1456,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1440,
                        "src": "1481:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1457,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "1487:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1458,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "1495:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1453,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "1456:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$845_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 1455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 816,
                      "src": "1456:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:48:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1460,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:48:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1464,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4014,
                          "src": "1529:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1529:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1466,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "1541:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1467,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1446,
                        "src": "1548:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1461,
                        "name": "Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "1514:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mintable_$1933_$",
                          "typeString": "type(contract Mintable)"
                        }
                      },
                      "id": 1463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1912,
                      "src": "1514:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:48:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:48:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1473,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "1592:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1470,
                        "name": "OwnerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "1572:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnerRole_$2861_$",
                          "typeString": "type(contract OwnerRole)"
                        }
                      },
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2842,
                      "src": "1572:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1475,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:26:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1479,
                        "name": "whitelistEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "1643:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1476,
                        "name": "Whitelistable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2440,
                        "src": "1608:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Whitelistable_$2440_$",
                          "typeString": "type(contract Whitelistable)"
                        }
                      },
                      "id": 1478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setWhitelistEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2206,
                      "src": "1608:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1481,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:52:13"
                }
              ]
            },
            "documentation": "Constructor for the token to set readable details and mint all tokens\nto the specified owner.",
            "id": 1483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1450,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1253,
                  "src": "1430:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1430:11:13"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1438,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1288:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1440,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1303:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1442,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1323:20:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1444,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1345:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1446,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1361:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1448,
                  "name": "whitelistEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1384:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1287:119:13"
            },
            "returnParameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:13"
            },
            "scope": 1644,
            "src": "1267:400:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "1837:57:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "1876:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1490,
                        "name": "Proxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2074,
                        "src": "1847:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Proxiable_$2074_$",
                          "typeString": "type(contract Proxiable)"
                        }
                      },
                      "id": 1492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_updateCodeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2058,
                      "src": "1847:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:40:13"
                }
              ]
            },
            "documentation": "Public function to update the address of the code contract, retricted to owner",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1488,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1487,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2787,
                  "src": "1827:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1827:9:13"
              }
            ],
            "name": "updateCodeAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1485,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "1800:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1799:20:13"
            },
            "returnParameters": {
              "id": 1489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:13"
            },
            "scope": 1644,
            "src": "1772:122:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1534,
              "nodeType": "Block",
              "src": "2198:624:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1508,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "2263:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$2028_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1956,
                      "src": "2263:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1514,
                  "nodeType": "IfStatement",
                  "src": "2259:69:13",
                  "trueBody": {
                    "id": 1513,
                    "nodeType": "Block",
                    "src": "2282:46:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1511,
                          "name": "FAILURE_PAUSED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1424,
                          "src": "2303:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1507,
                        "id": 1512,
                        "nodeType": "Return",
                        "src": "2296:21:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1517,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1499,
                        "src": "2431:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1515,
                        "name": "OwnerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "2413:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnerRole_$2861_$",
                          "typeString": "type(contract OwnerRole)"
                        }
                      },
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "2413:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1522,
                  "nodeType": "IfStatement",
                  "src": "2410:72:13",
                  "trueBody": {
                    "id": 1521,
                    "nodeType": "Block",
                    "src": "2438:44:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1519,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1418,
                          "src": "2459:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1507,
                        "id": 1520,
                        "nodeType": "Return",
                        "src": "2452:19:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2639:32:13",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1524,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1499,
                          "src": "2662:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1525,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1501,
                          "src": "2668:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1523,
                        "name": "checkWhitelistAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2382,
                        "src": "2640:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address,address) view returns (bool)"
                        }
                      },
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2640:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1531,
                  "nodeType": "IfStatement",
                  "src": "2636:90:13",
                  "trueBody": {
                    "id": 1530,
                    "nodeType": "Block",
                    "src": "2673:53:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1528,
                          "name": "FAILURE_NON_WHITELIST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "2694:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1507,
                        "id": 1529,
                        "nodeType": "Return",
                        "src": "2687:28:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1532,
                    "name": "SUCCESS_CODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1418,
                    "src": "2803:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1507,
                  "id": 1533,
                  "nodeType": "Return",
                  "src": "2796:19:13"
                }
              ]
            },
            "documentation": "This function detects whether a transfer should be restricted and not allowed.\nIf the function returns SUCCESS_CODE (0) then it should be allowed.",
            "id": 1535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "detectTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1499,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2107:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1501,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2121:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1503,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2133:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2106:35:13"
            },
            "returnParameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1506,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2187:5:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1505,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2186:7:13"
            },
            "scope": 1644,
            "src": "2071:751:13",
            "stateMutability": "view",
            "superFunction": 1294,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1565,
              "nodeType": "Block",
              "src": "3178:399:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1542,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "3192:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1543,
                      "name": "SUCCESS_CODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1418,
                      "src": "3211:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3192:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1548,
                  "nodeType": "IfStatement",
                  "src": "3188:84:13",
                  "trueBody": {
                    "id": 1547,
                    "nodeType": "Block",
                    "src": "3225:47:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1545,
                          "name": "SUCCESS_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "3246:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1541,
                        "id": 1546,
                        "nodeType": "Return",
                        "src": "3239:22:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1549,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "3286:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1550,
                      "name": "FAILURE_NON_WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "3305:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3286:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1555,
                  "nodeType": "IfStatement",
                  "src": "3282:107:13",
                  "trueBody": {
                    "id": 1554,
                    "nodeType": "Block",
                    "src": "3328:61:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1552,
                          "name": "FAILURE_NON_WHITELIST_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1430,
                          "src": "3349:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1541,
                        "id": 1553,
                        "nodeType": "Return",
                        "src": "3342:36:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1556,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "3403:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1557,
                      "name": "FAILURE_PAUSED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1424,
                      "src": "3422:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3403:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1562,
                  "nodeType": "IfStatement",
                  "src": "3399:93:13",
                  "trueBody": {
                    "id": 1561,
                    "nodeType": "Block",
                    "src": "3438:54:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1559,
                          "name": "FAILURE_PAUSED_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1433,
                          "src": "3459:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1541,
                        "id": 1560,
                        "nodeType": "Return",
                        "src": "3452:29:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1563,
                    "name": "UNKNOWN_ERROR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1436,
                    "src": "3557:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1541,
                  "id": 1564,
                  "nodeType": "Return",
                  "src": "3550:20:13"
                }
              ]
            },
            "documentation": "This function allows a wallet or other client to get a human readable string to show\na user if a transfer was restricted.  It should return enough information for the user\nto know why it failed.",
            "id": 1566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageForTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1537,
                  "name": "restrictionCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "3091:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3091:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3090:23:13"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1540,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "3159:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:15:13"
            },
            "scope": 1644,
            "src": "3051:526:13",
            "stateMutability": "view",
            "superFunction": 1301,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1592,
              "nodeType": "Block",
              "src": "3723:192:13",
              "statements": [
                {
                  "assignments": [
                    1575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1575,
                      "name": "restrictionCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "3733:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1574,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3733:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1581,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1577,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1568,
                        "src": "3783:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1578,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1570,
                        "src": "3789:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "3793:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1576,
                      "name": "detectTransferRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1535
                      ],
                      "referencedDeclaration": 1535,
                      "src": "3757:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                        "typeString": "function (address,address,uint256) view returns (uint8)"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3733:66:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1583,
                          "name": "restrictionCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1575,
                          "src": "3817:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1584,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1418,
                          "src": "3836:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3817:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1587,
                            "name": "restrictionCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "3880:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1586,
                          "name": "messageForTransferRestriction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1566
                          ],
                          "referencedDeclaration": 1566,
                          "src": "3850:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint8) view returns (string memory)"
                          }
                        },
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3850:46:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4017,
                        4018
                      ],
                      "referencedDeclaration": 4018,
                      "src": "3809:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3809:88:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:88:13"
                },
                {
                  "id": 1591,
                  "nodeType": "PlaceholderStatement",
                  "src": "3907:1:13"
                }
              ]
            },
            "documentation": "Evaluates whether a transfer should be allowed or not.",
            "id": 1593,
            "name": "notRestricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1568,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "3682:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1570,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "3696:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3696:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1572,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "3708:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3708:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3681:41:13"
            },
            "src": "3658:257:13",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1616,
              "nodeType": "Block",
              "src": "4158:52:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1608,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1606,
                      "src": "4168:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1611,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1595,
                          "src": "4193:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1612,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1597,
                          "src": "4197:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1609,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "4178:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$778_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 432,
                        "src": "4178:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4178:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4168:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1615,
                  "nodeType": "ExpressionStatement",
                  "src": "4168:35:13"
                }
              ]
            },
            "documentation": "Overrides the parent class token transfer function to enforce restrictions.",
            "id": 1617,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1600,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4014,
                      "src": "4100:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4100:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1602,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1595,
                    "src": "4112:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1603,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1597,
                    "src": "4116:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1604,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1599,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1593,
                  "src": "4086:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4086:36:13"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1595,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "4036:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4036:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "4048:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4035:27:13"
            },
            "returnParameters": {
              "id": 1607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1606,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "4140:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1605,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4140:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4139:14:13"
            },
            "scope": 1644,
            "src": "4017:193:13",
            "stateMutability": "nonpayable",
            "superFunction": 432,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1642,
              "nodeType": "Block",
              "src": "4469:62:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1633,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1631,
                      "src": "4479:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1636,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1619,
                          "src": "4508:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1637,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1621,
                          "src": "4514:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1638,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1623,
                          "src": "4518:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1634,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "4489:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$778_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 503,
                        "src": "4489:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) returns (bool)"
                        }
                      },
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4489:35:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4479:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1641,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:45:13"
                }
              ]
            },
            "documentation": "Overrides the parent class token transferFrom function to enforce restrictions.",
            "id": 1643,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1626,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1619,
                    "src": "4417:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1627,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1621,
                    "src": "4423:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1628,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1623,
                    "src": "4427:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1629,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1625,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1593,
                  "src": "4403:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4403:30:13"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1619,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "4339:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4339:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1621,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "4353:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4353:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1623,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "4365:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4365:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4338:41:13"
            },
            "returnParameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "4451:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4451:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4450:14:13"
            },
            "scope": 1644,
            "src": "4316:215:13",
            "stateMutability": "nonpayable",
            "superFunction": 503,
            "visibility": "public"
          }
        ],
        "scope": 1645,
        "src": "453:4080:13"
      }
    ],
    "src": "0:4534:13"
  },
  "legacyAST": {
    "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol",
    "exportedSymbols": {
      "TokenSoftToken": [
        1644
      ]
    },
    "id": 1645,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1385,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Proxiable.sol",
        "file": "./capabilities/Proxiable.sol",
        "id": 1386,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2075,
        "src": "25:38:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "./@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1387,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 846,
        "src": "64:92:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/ERC1404.sol",
        "file": "./ERC1404.sol",
        "id": 1388,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 1303,
        "src": "157:23:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/OwnerRole.sol",
        "file": "./roles/OwnerRole.sol",
        "id": 1389,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2862,
        "src": "181:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Whitelistable.sol",
        "file": "./capabilities/Whitelistable.sol",
        "id": 1390,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2441,
        "src": "213:42:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Mintable.sol",
        "file": "./capabilities/Mintable.sol",
        "id": 1391,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 1934,
        "src": "256:37:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Burnable.sol",
        "file": "./capabilities/Burnable.sol",
        "id": 1392,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 1870,
        "src": "294:37:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Revocable.sol",
        "file": "./capabilities/Revocable.sol",
        "id": 1393,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2137,
        "src": "332:38:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Pausable.sol",
        "file": "./capabilities/Pausable.sol",
        "id": 1394,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2029,
        "src": "371:37:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Blacklistable.sol",
        "file": "./capabilities/Blacklistable.sol",
        "id": 1395,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 1807,
        "src": "409:42:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1396,
              "name": "Proxiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2074,
              "src": "480:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxiable_$2074",
                "typeString": "contract Proxiable"
              }
            },
            "id": 1397,
            "nodeType": "InheritanceSpecifier",
            "src": "480:9:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1398,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 845,
              "src": "491:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$845",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1399,
            "nodeType": "InheritanceSpecifier",
            "src": "491:13:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1400,
              "name": "ERC1404",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1302,
              "src": "506:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1404_$1302",
                "typeString": "contract ERC1404"
              }
            },
            "id": 1401,
            "nodeType": "InheritanceSpecifier",
            "src": "506:7:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1402,
              "name": "OwnerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2861,
              "src": "515:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerRole_$2861",
                "typeString": "contract OwnerRole"
              }
            },
            "id": 1403,
            "nodeType": "InheritanceSpecifier",
            "src": "515:9:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1404,
              "name": "Whitelistable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2440,
              "src": "526:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelistable_$2440",
                "typeString": "contract Whitelistable"
              }
            },
            "id": 1405,
            "nodeType": "InheritanceSpecifier",
            "src": "526:13:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1406,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1933,
              "src": "541:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$1933",
                "typeString": "contract Mintable"
              }
            },
            "id": 1407,
            "nodeType": "InheritanceSpecifier",
            "src": "541:8:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1408,
              "name": "Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1869,
              "src": "551:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Burnable_$1869",
                "typeString": "contract Burnable"
              }
            },
            "id": 1409,
            "nodeType": "InheritanceSpecifier",
            "src": "551:8:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1410,
              "name": "Revocable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2136,
              "src": "561:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Revocable_$2136",
                "typeString": "contract Revocable"
              }
            },
            "id": 1411,
            "nodeType": "InheritanceSpecifier",
            "src": "561:9:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1412,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2028,
              "src": "572:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$2028",
                "typeString": "contract Pausable"
              }
            },
            "id": 1413,
            "nodeType": "InheritanceSpecifier",
            "src": "572:8:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1414,
              "name": "Blacklistable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1806,
              "src": "582:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Blacklistable_$1806",
                "typeString": "contract Blacklistable"
              }
            },
            "id": 1415,
            "nodeType": "InheritanceSpecifier",
            "src": "582:13:13"
          }
        ],
        "contractDependencies": [
          29,
          778,
          845,
          914,
          1278,
          1302,
          1806,
          1869,
          1933,
          2028,
          2074,
          2136,
          2440,
          2545,
          2650,
          2755,
          2861,
          2966,
          3071,
          3176
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1644,
        "linearizedBaseContracts": [
          1644,
          1806,
          2545,
          2028,
          2966,
          2136,
          3071,
          1869,
          2650,
          1933,
          2755,
          2440,
          3176,
          2861,
          778,
          1302,
          845,
          914,
          29,
          1278,
          2074
        ],
        "name": "TokenSoftToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1418,
            "name": "SUCCESS_CODE",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "643:38:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1416,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "643:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1417,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "680:1:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1421,
            "name": "FAILURE_NON_WHITELIST",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "687:47:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1419,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "687:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 1420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "733:1:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1424,
            "name": "FAILURE_PAUSED",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "740:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1422,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "740:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 1423,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "779:1:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1427,
            "name": "SUCCESS_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "786:50:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1425,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "786:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554343455353",
              "id": 1426,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "827:9:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
                "typeString": "literal_string \"SUCCESS\""
              },
              "value": "SUCCESS"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1430,
            "name": "FAILURE_NON_WHITELIST_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "842:117:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1428,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "842:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e",
              "id": 1429,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "897:62:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e2c08a66f2b86feb88c976c9f1fd6dfebdf34e61c54a5cf461a34d6ed427b2fc",
                "typeString": "literal_string \"The transfer was restricted due to white list configuration.\""
              },
              "value": "The transfer was restricted due to white list configuration."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1433,
            "name": "FAILURE_PAUSED_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "965:111:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1431,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "965:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f2074686520636f6e7472616374206265696e67207061757365642e",
              "id": 1432,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1013:63:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ad9af571a3b442df832ef21fd7c443d0876ede9535ce3c723edddbbdbeaba383",
                "typeString": "literal_string \"The transfer was restricted due to the contract being paused.\""
              },
              "value": "The transfer was restricted due to the contract being paused."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1436,
            "name": "UNKNOWN_ERROR",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
            "src": "1082:59:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1434,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1082:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "556e6b6e6f776e204572726f7220436f6465",
              "id": 1435,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1121:20:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eff12b0856ae7501c8b50262ed26026205f1ee274bd4090cd444e8ef0358a146",
                "typeString": "literal_string \"Unknown Error Code\""
              },
              "value": "Unknown Error Code"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1482,
              "nodeType": "Block",
              "src": "1446:221:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1456,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1440,
                        "src": "1481:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1457,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "1487:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1458,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "1495:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1453,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "1456:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$845_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 1455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 816,
                      "src": "1456:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:48:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1460,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:48:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1464,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4014,
                          "src": "1529:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1529:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1466,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "1541:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1467,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1446,
                        "src": "1548:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1461,
                        "name": "Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "1514:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mintable_$1933_$",
                          "typeString": "type(contract Mintable)"
                        }
                      },
                      "id": 1463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1912,
                      "src": "1514:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:48:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:48:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1473,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "1592:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1470,
                        "name": "OwnerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "1572:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnerRole_$2861_$",
                          "typeString": "type(contract OwnerRole)"
                        }
                      },
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2842,
                      "src": "1572:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1475,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:26:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1479,
                        "name": "whitelistEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "1643:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1476,
                        "name": "Whitelistable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2440,
                        "src": "1608:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Whitelistable_$2440_$",
                          "typeString": "type(contract Whitelistable)"
                        }
                      },
                      "id": 1478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setWhitelistEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2206,
                      "src": "1608:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1481,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:52:13"
                }
              ]
            },
            "documentation": "Constructor for the token to set readable details and mint all tokens\nto the specified owner.",
            "id": 1483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1450,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1253,
                  "src": "1430:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1430:11:13"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1438,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1288:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1440,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1303:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1442,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1323:20:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1444,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1345:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1446,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1361:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1448,
                  "name": "whitelistEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "1384:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1287:119:13"
            },
            "returnParameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:13"
            },
            "scope": 1644,
            "src": "1267:400:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "1837:57:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "1876:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1490,
                        "name": "Proxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2074,
                        "src": "1847:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Proxiable_$2074_$",
                          "typeString": "type(contract Proxiable)"
                        }
                      },
                      "id": 1492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_updateCodeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2058,
                      "src": "1847:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:40:13"
                }
              ]
            },
            "documentation": "Public function to update the address of the code contract, retricted to owner",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1488,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1487,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2787,
                  "src": "1827:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1827:9:13"
              }
            ],
            "name": "updateCodeAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1485,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "1800:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1799:20:13"
            },
            "returnParameters": {
              "id": 1489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:13"
            },
            "scope": 1644,
            "src": "1772:122:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1534,
              "nodeType": "Block",
              "src": "2198:624:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1508,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "2263:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$2028_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1956,
                      "src": "2263:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1514,
                  "nodeType": "IfStatement",
                  "src": "2259:69:13",
                  "trueBody": {
                    "id": 1513,
                    "nodeType": "Block",
                    "src": "2282:46:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1511,
                          "name": "FAILURE_PAUSED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1424,
                          "src": "2303:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1507,
                        "id": 1512,
                        "nodeType": "Return",
                        "src": "2296:21:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1517,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1499,
                        "src": "2431:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1515,
                        "name": "OwnerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "2413:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnerRole_$2861_$",
                          "typeString": "type(contract OwnerRole)"
                        }
                      },
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "2413:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1522,
                  "nodeType": "IfStatement",
                  "src": "2410:72:13",
                  "trueBody": {
                    "id": 1521,
                    "nodeType": "Block",
                    "src": "2438:44:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1519,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1418,
                          "src": "2459:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1507,
                        "id": 1520,
                        "nodeType": "Return",
                        "src": "2452:19:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2639:32:13",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1524,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1499,
                          "src": "2662:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1525,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1501,
                          "src": "2668:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1523,
                        "name": "checkWhitelistAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2382,
                        "src": "2640:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address,address) view returns (bool)"
                        }
                      },
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2640:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1531,
                  "nodeType": "IfStatement",
                  "src": "2636:90:13",
                  "trueBody": {
                    "id": 1530,
                    "nodeType": "Block",
                    "src": "2673:53:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1528,
                          "name": "FAILURE_NON_WHITELIST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "2694:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1507,
                        "id": 1529,
                        "nodeType": "Return",
                        "src": "2687:28:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1532,
                    "name": "SUCCESS_CODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1418,
                    "src": "2803:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1507,
                  "id": 1533,
                  "nodeType": "Return",
                  "src": "2796:19:13"
                }
              ]
            },
            "documentation": "This function detects whether a transfer should be restricted and not allowed.\nIf the function returns SUCCESS_CODE (0) then it should be allowed.",
            "id": 1535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "detectTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1499,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2107:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1501,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2121:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1503,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2133:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2106:35:13"
            },
            "returnParameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1506,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "2187:5:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1505,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2186:7:13"
            },
            "scope": 1644,
            "src": "2071:751:13",
            "stateMutability": "view",
            "superFunction": 1294,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1565,
              "nodeType": "Block",
              "src": "3178:399:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1542,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "3192:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1543,
                      "name": "SUCCESS_CODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1418,
                      "src": "3211:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3192:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1548,
                  "nodeType": "IfStatement",
                  "src": "3188:84:13",
                  "trueBody": {
                    "id": 1547,
                    "nodeType": "Block",
                    "src": "3225:47:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1545,
                          "name": "SUCCESS_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "3246:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1541,
                        "id": 1546,
                        "nodeType": "Return",
                        "src": "3239:22:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1549,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "3286:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1550,
                      "name": "FAILURE_NON_WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "3305:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3286:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1555,
                  "nodeType": "IfStatement",
                  "src": "3282:107:13",
                  "trueBody": {
                    "id": 1554,
                    "nodeType": "Block",
                    "src": "3328:61:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1552,
                          "name": "FAILURE_NON_WHITELIST_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1430,
                          "src": "3349:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1541,
                        "id": 1553,
                        "nodeType": "Return",
                        "src": "3342:36:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1556,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "3403:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1557,
                      "name": "FAILURE_PAUSED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1424,
                      "src": "3422:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3403:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1562,
                  "nodeType": "IfStatement",
                  "src": "3399:93:13",
                  "trueBody": {
                    "id": 1561,
                    "nodeType": "Block",
                    "src": "3438:54:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1559,
                          "name": "FAILURE_PAUSED_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1433,
                          "src": "3459:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1541,
                        "id": 1560,
                        "nodeType": "Return",
                        "src": "3452:29:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1563,
                    "name": "UNKNOWN_ERROR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1436,
                    "src": "3557:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1541,
                  "id": 1564,
                  "nodeType": "Return",
                  "src": "3550:20:13"
                }
              ]
            },
            "documentation": "This function allows a wallet or other client to get a human readable string to show\na user if a transfer was restricted.  It should return enough information for the user\nto know why it failed.",
            "id": 1566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageForTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1537,
                  "name": "restrictionCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "3091:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3091:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3090:23:13"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1540,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "3159:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:15:13"
            },
            "scope": 1644,
            "src": "3051:526:13",
            "stateMutability": "view",
            "superFunction": 1301,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1592,
              "nodeType": "Block",
              "src": "3723:192:13",
              "statements": [
                {
                  "assignments": [
                    1575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1575,
                      "name": "restrictionCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "3733:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1574,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3733:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1581,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1577,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1568,
                        "src": "3783:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1578,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1570,
                        "src": "3789:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "3793:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1576,
                      "name": "detectTransferRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1535
                      ],
                      "referencedDeclaration": 1535,
                      "src": "3757:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                        "typeString": "function (address,address,uint256) view returns (uint8)"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3733:66:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1583,
                          "name": "restrictionCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1575,
                          "src": "3817:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1584,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1418,
                          "src": "3836:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3817:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1587,
                            "name": "restrictionCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "3880:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1586,
                          "name": "messageForTransferRestriction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1566
                          ],
                          "referencedDeclaration": 1566,
                          "src": "3850:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint8) view returns (string memory)"
                          }
                        },
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3850:46:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4017,
                        4018
                      ],
                      "referencedDeclaration": 4018,
                      "src": "3809:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3809:88:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:88:13"
                },
                {
                  "id": 1591,
                  "nodeType": "PlaceholderStatement",
                  "src": "3907:1:13"
                }
              ]
            },
            "documentation": "Evaluates whether a transfer should be allowed or not.",
            "id": 1593,
            "name": "notRestricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1568,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "3682:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1570,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "3696:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3696:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1572,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "3708:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3708:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3681:41:13"
            },
            "src": "3658:257:13",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1616,
              "nodeType": "Block",
              "src": "4158:52:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1608,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1606,
                      "src": "4168:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1611,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1595,
                          "src": "4193:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1612,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1597,
                          "src": "4197:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1609,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "4178:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$778_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 432,
                        "src": "4178:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4178:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4168:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1615,
                  "nodeType": "ExpressionStatement",
                  "src": "4168:35:13"
                }
              ]
            },
            "documentation": "Overrides the parent class token transfer function to enforce restrictions.",
            "id": 1617,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1600,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4014,
                      "src": "4100:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4100:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1602,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1595,
                    "src": "4112:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1603,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1597,
                    "src": "4116:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1604,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1599,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1593,
                  "src": "4086:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4086:36:13"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1595,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "4036:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4036:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "4048:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4035:27:13"
            },
            "returnParameters": {
              "id": 1607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1606,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "4140:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1605,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4140:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4139:14:13"
            },
            "scope": 1644,
            "src": "4017:193:13",
            "stateMutability": "nonpayable",
            "superFunction": 432,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1642,
              "nodeType": "Block",
              "src": "4469:62:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1633,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1631,
                      "src": "4479:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1636,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1619,
                          "src": "4508:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1637,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1621,
                          "src": "4514:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1638,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1623,
                          "src": "4518:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1634,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "4489:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$778_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 503,
                        "src": "4489:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) returns (bool)"
                        }
                      },
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4489:35:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4479:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1641,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:45:13"
                }
              ]
            },
            "documentation": "Overrides the parent class token transferFrom function to enforce restrictions.",
            "id": 1643,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1626,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1619,
                    "src": "4417:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1627,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1621,
                    "src": "4423:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1628,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1623,
                    "src": "4427:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1629,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1625,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1593,
                  "src": "4403:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4403:30:13"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1619,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "4339:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4339:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1621,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "4353:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4353:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1623,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "4365:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4365:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4338:41:13"
            },
            "returnParameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "4451:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4451:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4450:14:13"
            },
            "scope": 1644,
            "src": "4316:215:13",
            "stateMutability": "nonpayable",
            "superFunction": 503,
            "visibility": "public"
          }
        ],
        "scope": 1645,
        "src": "453:4080:13"
      }
    ],
    "src": "0:4534:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-10-29T21:31:07.942Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Called by an Owner to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "unpause()": {
        "details": "Called by an Owner to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {
      "addToBlacklist(address)": {
        "notice": "Public function that allows admins to remove an address from a Blacklist"
      },
      "addToWhitelist(address,uint8)": {
        "notice": "Public function that allows admins to remove an address from a whitelist"
      },
      "burn(address,uint256)": {
        "notice": "Allow Burners to burn tokens from valid addresses"
      },
      "checkBlacklistAllowed(address,address)": {
        "notice": "Determine if the a sender is allowed to send to the receiver. If either the sender or receiver is blacklisted, then the transfer should be denied"
      },
      "checkWhitelistAllowed(address,address)": {
        "notice": "Determine if the a sender is allowed to send to the receiver. The source whitelist must be enabled to send to the whitelist where the receive exists."
      },
      "detectTransferRestriction(address,address,uint256)": {
        "notice": "This function detects whether a transfer should be restricted and not allowed. If the function returns SUCCESS_CODE (0) then it should be allowed."
      },
      "initialize(address,string,string,uint8,uint256,bool)": {
        "notice": "Constructor for the token to set readable details and mint all tokens to the specified owner."
      },
      "messageForTransferRestriction(uint8)": {
        "notice": "This function allows a wallet or other client to get a human readable string to show a user if a transfer was restricted.  It should return enough information for the user to know why it failed."
      },
      "mint(address,uint256)": {
        "notice": "Allow Owners to mint tokens to valid addresses"
      },
      "removeFromBlacklist(address)": {
        "notice": "Public function that allows admins to remove an address from a Blacklist"
      },
      "removeFromWhitelist(address)": {
        "notice": "Public function that allows admins to remove an address from a whitelist"
      },
      "revoke(address,uint256)": {
        "notice": "Allow Admins to revoke tokens from any address"
      },
      "setBlacklistEnabled(bool)": {
        "notice": "Enable or disable the Blacklist enforcement"
      },
      "setWhitelistEnabled(bool)": {
        "notice": "Enable or disable the whitelist enforcement"
      },
      "transfer(address,uint256)": {
        "notice": "Overrides the parent class token transfer function to enforce restrictions."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Overrides the parent class token transferFrom function to enforce restrictions."
      },
      "updateCodeAddress(address)": {
        "notice": "Public function to update the address of the code contract, retricted to owner"
      },
      "updateOutboundWhitelistEnabled(uint8,uint8,bool)": {
        "notice": "Public function that allows admins to update outbound whitelists"
      }
    }
  }
}