{
  "contractName": "TokenSoftToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "whitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "AddressAddedToWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "whitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "AddressRemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBurner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "BurnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBurner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "BurnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "CodeAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedMinter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedMinter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "sourceWhitelist",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "destinationWhitelist",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "from",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "to",
          "type": "bool"
        }
      ],
      "name": "OutboundWhitelistUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "OwnerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "OwnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedPauser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedPauser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "revoker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedRevoker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "RevokerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedRevoker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "RevokerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "WhitelistEnabledUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedWhitelister",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addedBy",
          "type": "address"
        }
      ],
      "name": "WhitelisterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedWhitelister",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "removedBy",
          "type": "address"
        }
      ],
      "name": "WhitelisterRemoved",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_NON_WHITELIST",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_NON_WHITELIST_MESSAGE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_PAUSED",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FAILURE_PAUSED_MESSAGE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SUCCESS_CODE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SUCCESS_MESSAGE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UNKNOWN_ERROR",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addRevoker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToAdd",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "whitelist",
          "type": "uint8"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressWhitelists",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "checkWhitelistAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLogicAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "logicAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isRevoker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isWhitelistEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelister",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "outboundWhitelistsEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBurner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToRemove",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeRevoker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setWhitelistEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "sourceWhitelist",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "destinationWhitelist",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "newEnabledValue",
          "type": "bool"
        }
      ],
      "name": "updateOutboundWhitelistEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "whitelistEnabled",
          "type": "bool"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCodeAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "detectTransferRestriction",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "restrictionCode",
          "type": "uint8"
        }
      ],
      "name": "messageForTransferRestriction",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"whitelist\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"AddressAddedToWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"whitelist\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"AddressRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBurner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"BurnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBurner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"BurnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"CodeAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedMinter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedMinter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"sourceWhitelist\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"destinationWhitelist\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"from\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"to\",\"type\":\"bool\"}],\"name\":\"OutboundWhitelistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedPauser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedPauser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedRevoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"RevokerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedRevoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"RevokerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"WhitelistEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedWhitelister\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addedBy\",\"type\":\"address\"}],\"name\":\"WhitelisterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedWhitelister\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedBy\",\"type\":\"address\"}],\"name\":\"WhitelisterRemoved\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"FAILURE_NON_WHITELIST\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FAILURE_NON_WHITELIST_MESSAGE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FAILURE_PAUSED\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FAILURE_PAUSED_MESSAGE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SUCCESS_CODE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SUCCESS_MESSAGE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UNKNOWN_ERROR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRevoker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToAdd\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"whitelist\",\"type\":\"uint8\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressWhitelists\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"checkWhitelistAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"detectTransferRestriction\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLogicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"logicAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"whitelistEnabled\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRevoker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isWhitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"restrictionCode\",\"type\":\"uint8\"}],\"name\":\"messageForTransferRestriction\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"outboundWhitelistsEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToRemove\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeRevoker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setWhitelistEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCodeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"sourceWhitelist\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"destinationWhitelist\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"newEnabledValue\",\"type\":\"bool\"}],\"name\":\"updateOutboundWhitelistEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Called by an Owner to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"unpause()\":{\"details\":\"Called by an Owner to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{\"addToWhitelist(address,uint8)\":{\"notice\":\"Public function that allows admins to remove an address from a whitelist\"},\"burn(address,uint256)\":{\"notice\":\"Allow Burners to burn tokens from valid addresses\"},\"checkWhitelistAllowed(address,address)\":{\"notice\":\"Determine if the a sender is allowed to send to the receiver. The source whitelist must be enabled to send to the whitelist where the receive exists.\"},\"detectTransferRestriction(address,address,uint256)\":{\"notice\":\"This function detects whether a transfer should be restricted and not allowed. If the function returns SUCCESS_CODE (0) then it should be allowed.\"},\"initialize(address,string,string,uint8,uint256,bool)\":{\"notice\":\"Constructor for the token to set readable details and mint all tokens to the specified owner.\"},\"messageForTransferRestriction(uint8)\":{\"notice\":\"This function allows a wallet or other client to get a human readable string to show a user if a transfer was restricted.  It should return enough information for the user to know why it failed.\"},\"mint(address,uint256)\":{\"notice\":\"Allow Owners to mint tokens to valid addresses\"},\"removeFromWhitelist(address)\":{\"notice\":\"Public function that allows admins to remove an address from a whitelist\"},\"revoke(address,uint256)\":{\"notice\":\"Allow Admins to revoke tokens from any address\"},\"setWhitelistEnabled(bool)\":{\"notice\":\"Enable or disable the whitelist enforcement\"},\"transfer(address,uint256)\":{\"notice\":\"Overrides the parent class token transfer function to enforce restrictions.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Overrides the parent class token transferFrom function to enforce restrictions.\"},\"updateCodeAddress(address)\":{\"notice\":\"Public function to update the address of the code contract, retricted to owner\"},\"updateOutboundWhitelistEnabled(uint8,uint8,bool)\":{\"notice\":\"Public function that allows admins to update outbound whitelists\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol\":\"TokenSoftToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/james/Source/tokensoft/tokensoft_token/contracts/ERC1404.sol\":{\"keccak256\":\"0x17b1b9fc9b6966cde61a0008f7fb713e09fa16ac4d04065071afbd445609691f\",\"urls\":[\"bzz-raw://0bca71f6d3fe44ad41e87d80209fe174a027b8027fb80bc6471fcf4c7e669a96\",\"dweb:/ipfs/QmNnSwvbQrcqYJDa6NaV15nj5r2iWerbSoKoAiV9MTbkK4\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol\":{\"keccak256\":\"0xf2c8b6309fc50d1e723336a7ee3de2b1b05fe01ecf645e5784c5397023a52c35\",\"urls\":[\"bzz-raw://6fec7e7f18775e7f4f49124c1bea8c16490c847ad8786268c9e354f4270333cb\",\"dweb:/ipfs/QmcpEL18S1h2993UiNEyysevEpVJ9vbRQ72YaaromPSkqB\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Burnable.sol\":{\"keccak256\":\"0x97aab938a9d1832391e4e5961e50d083c00df98cdeb5603638b5d7b1a69cfcd7\",\"urls\":[\"bzz-raw://79bf867fae884ab81aae11ba446af6437d5285c4401dd51898c5ac2d90a0fe18\",\"dweb:/ipfs/QmSiaikkPMQ7DkY15XjzGZFBRXKZf9PbZQPfq2HjhntkuF\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Mintable.sol\":{\"keccak256\":\"0xfa8cfaacfad03685ea3165b260835b685b70306257610487fc7bb5432a68db26\",\"urls\":[\"bzz-raw://0ada182ac55b8415c0e4e936034dca82d9157c0bdf68fcdbf0d09e6f974dd02b\",\"dweb:/ipfs/QmPiAmvsy3x5kd4FZ8H2yZD5K29cVtrR5GrmXrCiAWuXgX\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Pausable.sol\":{\"keccak256\":\"0x32eec27e33107b73c74347fcdc2331520f60272e2fadb773e3dfb31842b09a56\",\"urls\":[\"bzz-raw://05d634da0637eab284622d5947230e3244e001d6783789bba9e69acec8243774\",\"dweb:/ipfs/QmRf7KL8uUYVEnSc9A13WNBQb2LTi8RK2JCfNBvqLctGTk\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Proxiable.sol\":{\"keccak256\":\"0xc97f679b69b1084204d790cbff9c707703f41eb34371328f015e25ea91cf717e\",\"urls\":[\"bzz-raw://85e1390e68b470c241013ce3f12d72602e9bfd1d0e57e0145270d85405ef5d18\",\"dweb:/ipfs/QmVL1fsJdK9nV5rMUgYuFBpuBH9H8E7eJhoEmPhzTe5tWZ\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Revocable.sol\":{\"keccak256\":\"0x0dc56123d2a307cb53728bbe7a8e22530d3928eccf8d02ea8dcd4eb04d599f54\",\"urls\":[\"bzz-raw://5a89a469110f7823f84210399f0899608d87b89aa21336763ea06ad46116f65e\",\"dweb:/ipfs/Qmf3rhawePfkmE8w4ToJQ6X8EB2VvdcKu8g4RRmzpEEAfA\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Whitelistable.sol\":{\"keccak256\":\"0x355f618fe6f95ce0470e3a4e416e2ceb849eb0e9bde84d555b4b6cef22cffc55\",\"urls\":[\"bzz-raw://fe1d93335092f4dd58746e3c183edbca0293339fc17cc084f7d60116a7737808\",\"dweb:/ipfs/QmPx2fmTBDLD2KsTmedr9GoQQTQyDCYLntRHZtnhCNebeJ\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/BurnerRole.sol\":{\"keccak256\":\"0x91d1c12fa1808d7877990f8c68fe4ddeb4c0829a5efe40e109c5fd20c1cf3be6\",\"urls\":[\"bzz-raw://e501e1677136c72d98ee7b3b311672300c70382d1973197e861b23343c0b5b56\",\"dweb:/ipfs/QmU8VhwPFRfEmjupfQoGp4qtTYo1KiAz4S9b5Zy9mVWoic\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/MinterRole.sol\":{\"keccak256\":\"0xb9cc8c406effdbf885efd480497ec00fcbed8ad11e0f2b7c1d610fdcbfe4fdba\",\"urls\":[\"bzz-raw://391f7b81fbdc4b50419052efdcdd75ce74d69d7b487478e0a4eefc80c420650f\",\"dweb:/ipfs/QmTc5WfAVrNYHuUxjnUesMnmivHX78HrTMhrawGUBgVA51\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/OwnerRole.sol\":{\"keccak256\":\"0x35532a2185165cec52f04fbff693877cfbe564cfdef2659c97f09e1965ac1d54\",\"urls\":[\"bzz-raw://afe81f64745439bd5c146d41e6d853b039c08b272fbfec2c0d9a6e331b858ad7\",\"dweb:/ipfs/QmWEHevjeFsgR8HcaBXwuhWkDwR13tdVtfq4RWxqNDf7CL\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/PauserRole.sol\":{\"keccak256\":\"0x21a77ba7f68fb209612059424cc5f3c46254ddc48bd384b12edcb327acc8af13\",\"urls\":[\"bzz-raw://62232e410840de0d4275c89aeb8efe8eb6373e07eefbac5b9e7ca8c6bea5aceb\",\"dweb:/ipfs/QmSbKzp1Xo9a3xWUMM8ar1Ui5E4c9wwJPnb9KXi7ZeSz4F\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/RevokerRole.sol\":{\"keccak256\":\"0xeaa1609a5f035ddce1190cd52e9ffd462ff0e7c0e9997d0c7b3e747fdb59b839\",\"urls\":[\"bzz-raw://2c48a523cb7d6038ca9be409cda21e9a26cd4c08d3f59d7f0fc32a48f4ea470d\",\"dweb:/ipfs/QmXpQALeoHg1gQoQKc1wDBY3bTGiEn9cwYRm6L2hcQfxe1\"]},\"/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/WhitelisterRole.sol\":{\"keccak256\":\"0x2d6a4c2ece371f44df78482e87b869dea6009a7d0e1d01add34f4872d35d1b43\",\"urls\":[\"bzz-raw://bf16bc4fe45c9d6010545b9fa6b9320abc4e622e3afd351825c0db0fd8ca2a54\",\"dweb:/ipfs/Qmav6sukxUWtzkFV78WsZjXcNHa55kMbnGkzR6XwEbe3mR\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2a474399663812668bb8e9c9e7d011d54fd09de386bd6e9fcb2407a677ebd1aa\",\"urls\":[\"bzz-raw://93754fbe81bcf1f111288152c40987a9fd7cdb43dc72b9f8d7eabb96a4fa9976\",\"dweb:/ipfs/QmNZadpwGrNYB6jndNcAk6dT7f6HHMZBPXdNTa5fKu3HVp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x6080604052614f93806100136000396000f3fe608060405234801561001057600080fd5b50600436106103835760003560e01c80637d0c269f116101de5780639dc29fac1161010f578063d4ce1415116100ad578063eac449d91161007c578063eac449d9146116df578063eaf9144a14611745578063f44637ba14611789578063f6c4b01f146117cd57610383565b8063d4ce141514611506578063dd62ed3e1461158e578063e7984d1714611606578063e95945081461168957610383565b8063aa271e1a116100e9578063aa271e1a14611399578063abd108ba146113f5578063c06f8b941461143f578063c89344621461148357610383565b80639dc29fac14611267578063a457c2d7146112cd578063a9059cbb1461133357610383565b8063912a98851161017c57806395d89b411161015657806395d89b41146110d9578063961a66f61461115c57806397af6744146111a0578063983b2d561461122357610383565b8063912a988514610fbb57806392e6d68b14610fff5780639437e2fe1461105d57610383565b806382dc1ec4116101b857806382dc1ec414610d945780638456cb5914610dd85780638771cd2d14610de25780638ab1d68114610f7757610383565b80637d0c269f14610c4a5780637f4ab1dd14610ca657806382c3f79c14610d5057610383565b8063313ce567116102b857806346fbf68e116102565780635c975abb116102305780635c975abb14610b485780636b2c0f5514610b6a5780637065cb4814610bae57806370a0823114610bf257610383565b806346fbf68e14610a4b578063489c1b2514610aa757806352d1902d14610b2a57610383565b80633f4ba83a116102925780633f4ba83a1461095b5780633f7137091461096557806340c10f19146109895780634334614a146109ef57610383565b8063313ce5671461088757806339509351146108ab5780633973b5961461091157610383565b8063173825d9116103255780631fb45ec0116102ff5780631fb45ec01461073d57806323b872dd146107615780632f54bf6e146107e75780633092afd51461084357610383565b8063173825d9146106b957806318160ddd146106fd578063184d69ab1461071b57610383565b806306fdde031161036157806306fdde031461044d578063095ea7b3146104d05780630e969a05146105365780631624f6c61461055a57610383565b80630263b8581461038857806302846858146103d9578063052d9e7e1461041d575b600080fd5b6103d76004803603604081101561039e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611829565b005b61041b600480360360208110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611895565b005b61044b6004803603602081101561043357600080fd5b810190808035151590602001909291905050506118ff565b005b610455611969565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561049557808201518184015260208101905061047a565b50505050905090810190601f1680156104c25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61051c600480360360408110156104e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a0b565b604051808215151515815260200191505060405180910390f35b61053e611a29565b604051808260ff1660ff16815260200191505060405180910390f35b6106b76004803603606081101561057057600080fd5b810190808035906020019064010000000081111561058d57600080fd5b82018360208201111561059f57600080fd5b803590602001918460018302840111640100000000831117156105c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062457600080fd5b82018360208201111561063657600080fd5b8035906020019184600183028401116401000000008311171561065857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611a2e565b005b6106fb600480360360208110156106cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b79565b005b610705611c68565b6040518082815260200191505060405180910390f35b610723611c72565b604051808215151515815260200191505060405180910390f35b610745611c85565b604051808260ff1660ff16815260200191505060405180910390f35b6107cd6004803603606081101561077757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c8a565b604051808215151515815260200191505060405180910390f35b610829600480360360208110156107fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d70565b604051808215151515815260200191505060405180910390f35b6108856004803603602081101561085957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d8d565b005b61088f611df7565b604051808260ff1660ff16815260200191505060405180910390f35b6108f7600480360360408110156108c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e0e565b604051808215151515815260200191505060405180910390f35b6109596004803603606081101561092757600080fd5b81019080803560ff169060200190929190803560ff169060200190929190803515159060200190929190505050611ec1565b005b610963611f2f565b005b61096d612019565b604051808260ff1660ff16815260200191505060405180910390f35b6109d56004803603604081101561099f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061201e565b604051808215151515815260200191505060405180910390f35b610a3160048036036020811015610a0557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612091565b604051808215151515815260200191505060405180910390f35b610a8d60048036036020811015610a6157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120ae565b604051808215151515815260200191505060405180910390f35b610aaf6120cb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610aef578082015181840152602081019050610ad4565b50505050905090810190601f168015610b1c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b326120e7565b6040518082815260200191505060405180910390f35b610b50612112565b604051808215151515815260200191505060405180910390f35b610bac60048036036020811015610b8057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612129565b005b610bf060048036036020811015610bc457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612193565b005b610c3460048036036020811015610c0857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121fd565b6040518082815260200191505060405180910390f35b610c8c60048036036020811015610c6057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612246565b604051808215151515815260200191505060405180910390f35b610cd560048036036020811015610cbc57600080fd5b81019080803560ff169060200190929190505050612263565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d15578082015181840152602081019050610cfa565b50505050905090810190601f168015610d425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d9260048036036020811015610d6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061234d565b005b610dd660048036036020811015610daa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123b7565b005b610de0612421565b005b610f75600480360360c0811015610df857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610e3557600080fd5b820183602082011115610e4757600080fd5b80359060200191846001830284011164010000000083111715610e6957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ecc57600080fd5b820183602082011115610ede57600080fd5b80359060200191846001830284011164010000000083111715610f0057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff1690602001909291908035906020019092919080351515906020019092919050505061250c565b005b610fb960048036036020811015610f8d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061263a565b005b610ffd60048036036020811015610fd157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126a4565b005b6110416004803603602081101561101557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061270e565b604051808260ff1660ff16815260200191505060405180910390f35b6110bf6004803603604081101561107357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061272e565b604051808215151515815260200191505060405180910390f35b6110e1612863565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611121578082015181840152602081019050611106565b50505050905090810190601f16801561114e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61119e6004803603602081101561117257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612905565b005b6111a861296f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156111e85780820151818401526020810190506111cd565b50505050905090810190601f1680156112155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6112656004803603602081101561123957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506129a8565b005b6112b36004803603604081101561127d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612a12565b604051808215151515815260200191505060405180910390f35b611319600480360360408110156112e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612a85565b604051808215151515815260200191505060405180910390f35b61137f6004803603604081101561134957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612b52565b604051808215151515815260200191505060405180910390f35b6113db600480360360208110156113af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c36565b604051808215151515815260200191505060405180910390f35b6113fd612c53565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6114816004803603602081101561145557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c7c565b005b61148b612ce6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156114cb5780820151818401526020810190506114b0565b50505050905090810190601f1680156114f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6115726004803603606081101561151c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612d02565b604051808260ff1660ff16815260200191505060405180910390f35b6115f0600480360360408110156115a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d54565b6040518082815260200191505060405180910390f35b61160e612ddb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561164e578082015181840152602081019050611633565b50505050905090810190601f16801561167b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6116c56004803603604081101561169f57600080fd5b81019080803560ff169060200190929190803560ff169060200190929190505050612e14565b604051808215151515815260200191505060405180910390f35b61172b600480360360408110156116f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e43565b604051808215151515815260200191505060405180910390f35b6117876004803603602081101561175b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eb5565b005b6117cb6004803603602081101561179f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f1f565b005b61180f600480360360208110156117e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f89565b604051808215151515815260200191505060405180910390f35b61183233612246565b611887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180614ea0603a913960400191505060405180910390fd5b6118918282612fa6565b5050565b61189e33611d70565b6118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b6118fc8161319c565b50565b61190833611d70565b61195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b6119668161320d565b50565b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a015780601f106119d657610100808354040283529160200191611a01565b820191906000526020600020905b8154815290600101906020018083116119e457829003601f168201915b5050505050905090565b6000611a1f611a18613270565b8484613278565b6001905092915050565b600081565b600060019054906101000a900460ff1680611a4d5750611a4c61346f565b5b80611a6457506000809054906101000a900460ff16155b611ab9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614dc7602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611b09576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8360339080519060200190611b1f929190614b08565b508260349080519060200190611b36929190614b08565b5081603560006101000a81548160ff021916908360ff1602179055508015611b735760008060016101000a81548160ff0219169083151502179055505b50505050565b611b8233611d70565b611bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611c5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614df56028913960400191505060405180910390fd5b611c6581613486565b50565b6000606a54905090565b609f60009054906101000a900460ff1681565b600181565b60008383836000611c9c848484612d02565b9050600060ff168160ff1614611cb182612263565b90611d57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d1c578082015181840152602081019050611d01565b50505050905090810190601f168015611d495780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611d638888886134f7565b9450505050509392505050565b6000611d8682609d6135d090919063ffffffff16565b9050919050565b611d9633611d70565b611deb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b611df4816136ae565b50565b6000603560009054906101000a900460ff16905090565b6000611eb7611e1b613270565b84611eb28560696000611e2c613270565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461371f90919063ffffffff16565b613278565b6001905092915050565b611eca33612246565b611f1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180614ea0603a913960400191505060405180910390fd5b611f2a8383836137a7565b505050565b611f38336120ae565b611f8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614c246030913960400191505060405180910390fd5b60a660009054906101000a900460ff1661200f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b61201761389d565b565b600281565b600061202933612c36565b61207e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614cfe6030913960400191505060405180910390fd5b61208933848461391d565b905092915050565b60006120a78260a36135d090919063ffffffff16565b9050919050565b60006120c48260a56135d090919063ffffffff16565b9050919050565b6040518060600160405280603d8152602001614e1d603d913981565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b905090565b600060a660009054906101000a900460ff16905090565b61213233611d70565b612187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b61219081613999565b50565b61219c33611d70565b6121f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b6121fa81613a0a565b50565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061225c82609e6135d090919063ffffffff16565b9050919050565b6060600060ff168260ff1614156122b1576040518060400160405280600781526020017f53554343455353000000000000000000000000000000000000000000000000008152509050612348565b600160ff168260ff1614156122e0576040518060600160405280603c8152602001614efe603c91399050612348565b600260ff168260ff16141561230f576040518060600160405280603d8152602001614e1d603d91399050612348565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525090505b919050565b61235633611d70565b6123ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b6123b481613a7b565b50565b6123c033611d70565b612415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b61241e81613aec565b50565b61242a336120ae565b61247f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614c246030913960400191505060405180910390fd5b60a660009054906101000a900460ff1615612502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b61250a613b5d565b565b600060019054906101000a900460ff168061252b575061252a61346f565b5b8061254257506000809054906101000a900460ff16155b612597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614dc7602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156125e7576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6125f2868686611a2e565b6125fd33888561391d565b5061260787613a0a565b6126108261320d565b80156126315760008060016101000a81548160ff0219169083151502179055505b50505050505050565b61264333612246565b612698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180614ea0603a913960400191505060405180910390fd5b6126a181613bdd565b50565b6126ad33611d70565b612702576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b61270b81613d49565b50565b60a06020528060005260406000206000915054906101000a900460ff1681565b6000609f60009054906101000a900460ff1661274d576001905061285d565b600060a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168260ff16148061280a5750600060ff168160ff16145b1561281a5760009250505061285d565b60a160008360ff1660ff16815260200190815260200160002060008260ff1660ff16815260200190815260200160002060009054906101000a900460ff16925050505b92915050565b606060348054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128fb5780601f106128d0576101008083540402835291602001916128fb565b820191906000526020600020905b8154815290600101906020018083116128de57829003601f168201915b5050505050905090565b61290e33611d70565b612963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b61296c81613eea565b50565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525081565b6129b133611d70565b612a06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b612a0f81613f5b565b50565b6000612a1d33612091565b612a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614cce6030913960400191505060405180910390fd5b612a7d338484613fcc565b905092915050565b6000612b48612a92613270565b84612b4385604051806060016040528060258152602001614f3a6025913960696000612abc613270565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546140489092919063ffffffff16565b613278565b6001905092915050565b60003383836000612b64848484612d02565b9050600060ff168160ff1614612b7982612263565b90612c1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612be4578082015181840152602081019050612bc9565b50505050905090810190601f168015612c115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50612c2a8787614108565b94505050505092915050565b6000612c4c8260a26135d090919063ffffffff16565b9050919050565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf754905090565b612c8533611d70565b612cda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b612ce381614126565b50565b6040518060600160405280603c8152602001614efe603c913981565b6000612d0c612112565b15612d1a5760029050612d4d565b612d2384611d70565b15612d315760009050612d4d565b612d3b848461272e565b612d485760019050612d4d565b600090505b9392505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600781526020017f535543434553530000000000000000000000000000000000000000000000000081525081565b60a16020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000612e4e33612f89565b612ea3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180614c766032913960400191505060405180910390fd5b612ead8383614197565b905092915050565b612ebe33611d70565b612f13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b612f1c81614213565b50565b612f2833611d70565b612f7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b612f8681614284565b50565b6000612f9f8260a46135d090919063ffffffff16565b9050919050565b600060ff168160ff161415613023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f496e76616c69642077686974656c69737420494420737570706c69656400000081525060200191505060405180910390fd5b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690508160a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600060ff168160ff1614613139573373ffffffffffffffffffffffffffffffffffffffff168160ff168473ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45b3373ffffffffffffffffffffffffffffffffffffffff168260ff168473ffffffffffffffffffffffffffffffffffffffff167fca6d1e885708b837a7647aeb7f4163ee4ca96058e08ac767be8d23c972c5027060405160405180910390a4505050565b6131b08160a36142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f85222465e0d438163a28671b59fc9ebeb03bf39f880ddd36c8315da7512b31c060405160405180910390a350565b80609f60006101000a81548160ff0219169083151502179055508015153373ffffffffffffffffffffffffffffffffffffffff167fb535c5f7f150db8dbf22962fc390e7fa9026b9c29ffad714197bee4620572bd660405160405180910390a350565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156132fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180614eda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613384576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180614c546022913960400191505060405180910390fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000803090506000813b9050600081149250505090565b61349a81609d6142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367960405160405180910390a350565b60006135048484846143b2565b6135c584613510613270565b6135c085604051806060016040528060288152602001614d7d60289139606960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000613576613270565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546140489092919063ffffffff16565b613278565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613657576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180614da56022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6136c28160a26142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f4b5ef9a786cf64a7d82ebcf2d5132667edc9faef4ac36260d9a9e52c526b623260405160405180910390a350565b60008082840190508381101561379d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600060a160008560ff1660ff16815260200190815260200160002060008460ff1660ff16815260200190815260200160002060009054906101000a900460ff1690508160a160008660ff1660ff16815260200190815260200160002060008560ff1660ff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508260ff168460ff163373ffffffffffffffffffffffffffffffffffffffff167fb0353d563a9aa5231878c83727dc723a3cb8a38c2917f8ac2b777aa564c8a0d584866040518083151515158152602001821515151581526020019250505060405180910390a450505050565b600060a660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000613929838361466c565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8846040518082815260200191505060405180910390a3600190509392505050565b6139ad8160a56142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb75903ade4a0fdb07d60c882c22c779e2e1c751883c37aecdcc92a8ec72b046e60405160405180910390a350565b613a1e81609d61482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a60405160405180910390a350565b613a8f81609e6142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3ed21605dd544629fb45f2ccaedcc095ba1dbea540fb6eaf5493a7479856b0be60405160405180910390a350565b613b008160a561482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe0953c403a52f9dc1fef4202a8d33975c958b727bee0d7b5b328965ddad98d8160405160405180910390a350565b600160a660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600060a060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168160ff161415613c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180614bd16031913960400191505060405180910390fd5b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff168160ff168373ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45050565b8073ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015613d8f57600080fd5b505afa158015613da3573d6000803e3d6000fd5b505050506040513d6020811015613db957600080fd5b81019080805190602001909291905050507fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b14613e61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420636f6d70617469626c6500000000000000000000000000000000000081525060200191505060405180910390fd5b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7557feeaed647dc622e55877c30943e5c1d4feb92d1b8cfcc88d974163e9787bde9af81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b613efe8160a461482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f2b5f18afd9a7b21f41bf023b012b3d4c8a22a21b79fa425cd4494ecbe297019660405160405180910390a350565b613f6f8160a261482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3c091dafb1d99e4a4c333024492eac3b2cd8bf921a3dd547c937db33be307bb860405160405180910390a350565b6000613fd88383614904565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b9453846040518082815260200191505060405180910390a3600190509392505050565b60008383111582906140f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156140ba57808201518184015260208101905061409f565b50505050905090810190601f1680156140e75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600061411c614115613270565b84846143b2565b6001905092915050565b61413a8160a46142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb6fe3ab11eb9ab1d9f1d41c8f42a5d72d10122099ba1548e4a6d1a4d8cefec4b60405160405180910390a350565b60006141a48333846143b2565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb698e31a2abee5824d0d7bcfd2339aead7f9e9ae413fba50bf554ff3fa470b7b846040518082815260200191505060405180910390a36001905092915050565b61422781609e61482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f5f36f4f5999f34947706fca376b955319b858573bf9d6bc59303c9a4cd80ced060405160405180910390a350565b6142988160a361482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f86515ebaad527298e98929c064c075f5a2604cc80afc0db29e73c01a36f8e98c60405160405180910390a350565b6142ff82826135d0565b614354576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614d5c6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415614438576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180614e7b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156144be576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180614bae6023913960400191505060405180910390fd5b61452a81604051806060016040528060268152602001614ca860269139606860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546140489092919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506145bf81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461371f90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561470f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61472481606a5461371f90919063ffffffff16565b606a8190555061477c81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461371f90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61483382826135d0565b156148a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561498a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614e5a6021913960400191505060405180910390fd5b6149f681604051806060016040528060228152602001614c0260229139606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546140489092919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614a4e81606a54614abe90919063ffffffff16565b606a81905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000614b0083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614048565b905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614b4957805160ff1916838001178555614b77565b82800160010185558215614b77579182015b82811115614b76578251825591602001919060010190614b5b565b5b509050614b849190614b88565b5090565b614baa91905b80821115614ba6576000816000905550600101614b8e565b5090565b9056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373416464726573732063616e6e6f742062652072656d6f7665642066726f6d20696e76616c69642077686974656c6973742e45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c6545524332303a20617070726f766520746f20746865207a65726f20616464726573735265766f6b6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205265766f6b657220726f6c6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c654f776e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204f776e657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644f776e6572732063616e6e6f742072656d6f7665207468656d73656c766573206173206f776e6572546865207472616e736665722077617320726573747269637465642064756520746f2074686520636f6e7472616374206265696e67207061757365642e45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737357686974656c6973746572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374657220726f6c6545524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158202a3fda8b622318d0614adcd8e0ad14e75c7af1eae18f8f6772aef937c35bd91b64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103835760003560e01c80637d0c269f116101de5780639dc29fac1161010f578063d4ce1415116100ad578063eac449d91161007c578063eac449d9146116df578063eaf9144a14611745578063f44637ba14611789578063f6c4b01f146117cd57610383565b8063d4ce141514611506578063dd62ed3e1461158e578063e7984d1714611606578063e95945081461168957610383565b8063aa271e1a116100e9578063aa271e1a14611399578063abd108ba146113f5578063c06f8b941461143f578063c89344621461148357610383565b80639dc29fac14611267578063a457c2d7146112cd578063a9059cbb1461133357610383565b8063912a98851161017c57806395d89b411161015657806395d89b41146110d9578063961a66f61461115c57806397af6744146111a0578063983b2d561461122357610383565b8063912a988514610fbb57806392e6d68b14610fff5780639437e2fe1461105d57610383565b806382dc1ec4116101b857806382dc1ec414610d945780638456cb5914610dd85780638771cd2d14610de25780638ab1d68114610f7757610383565b80637d0c269f14610c4a5780637f4ab1dd14610ca657806382c3f79c14610d5057610383565b8063313ce567116102b857806346fbf68e116102565780635c975abb116102305780635c975abb14610b485780636b2c0f5514610b6a5780637065cb4814610bae57806370a0823114610bf257610383565b806346fbf68e14610a4b578063489c1b2514610aa757806352d1902d14610b2a57610383565b80633f4ba83a116102925780633f4ba83a1461095b5780633f7137091461096557806340c10f19146109895780634334614a146109ef57610383565b8063313ce5671461088757806339509351146108ab5780633973b5961461091157610383565b8063173825d9116103255780631fb45ec0116102ff5780631fb45ec01461073d57806323b872dd146107615780632f54bf6e146107e75780633092afd51461084357610383565b8063173825d9146106b957806318160ddd146106fd578063184d69ab1461071b57610383565b806306fdde031161036157806306fdde031461044d578063095ea7b3146104d05780630e969a05146105365780631624f6c61461055a57610383565b80630263b8581461038857806302846858146103d9578063052d9e7e1461041d575b600080fd5b6103d76004803603604081101561039e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611829565b005b61041b600480360360208110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611895565b005b61044b6004803603602081101561043357600080fd5b810190808035151590602001909291905050506118ff565b005b610455611969565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561049557808201518184015260208101905061047a565b50505050905090810190601f1680156104c25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61051c600480360360408110156104e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a0b565b604051808215151515815260200191505060405180910390f35b61053e611a29565b604051808260ff1660ff16815260200191505060405180910390f35b6106b76004803603606081101561057057600080fd5b810190808035906020019064010000000081111561058d57600080fd5b82018360208201111561059f57600080fd5b803590602001918460018302840111640100000000831117156105c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062457600080fd5b82018360208201111561063657600080fd5b8035906020019184600183028401116401000000008311171561065857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611a2e565b005b6106fb600480360360208110156106cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b79565b005b610705611c68565b6040518082815260200191505060405180910390f35b610723611c72565b604051808215151515815260200191505060405180910390f35b610745611c85565b604051808260ff1660ff16815260200191505060405180910390f35b6107cd6004803603606081101561077757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c8a565b604051808215151515815260200191505060405180910390f35b610829600480360360208110156107fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d70565b604051808215151515815260200191505060405180910390f35b6108856004803603602081101561085957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d8d565b005b61088f611df7565b604051808260ff1660ff16815260200191505060405180910390f35b6108f7600480360360408110156108c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e0e565b604051808215151515815260200191505060405180910390f35b6109596004803603606081101561092757600080fd5b81019080803560ff169060200190929190803560ff169060200190929190803515159060200190929190505050611ec1565b005b610963611f2f565b005b61096d612019565b604051808260ff1660ff16815260200191505060405180910390f35b6109d56004803603604081101561099f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061201e565b604051808215151515815260200191505060405180910390f35b610a3160048036036020811015610a0557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612091565b604051808215151515815260200191505060405180910390f35b610a8d60048036036020811015610a6157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120ae565b604051808215151515815260200191505060405180910390f35b610aaf6120cb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610aef578082015181840152602081019050610ad4565b50505050905090810190601f168015610b1c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b326120e7565b6040518082815260200191505060405180910390f35b610b50612112565b604051808215151515815260200191505060405180910390f35b610bac60048036036020811015610b8057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612129565b005b610bf060048036036020811015610bc457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612193565b005b610c3460048036036020811015610c0857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121fd565b6040518082815260200191505060405180910390f35b610c8c60048036036020811015610c6057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612246565b604051808215151515815260200191505060405180910390f35b610cd560048036036020811015610cbc57600080fd5b81019080803560ff169060200190929190505050612263565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d15578082015181840152602081019050610cfa565b50505050905090810190601f168015610d425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d9260048036036020811015610d6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061234d565b005b610dd660048036036020811015610daa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123b7565b005b610de0612421565b005b610f75600480360360c0811015610df857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610e3557600080fd5b820183602082011115610e4757600080fd5b80359060200191846001830284011164010000000083111715610e6957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ecc57600080fd5b820183602082011115610ede57600080fd5b80359060200191846001830284011164010000000083111715610f0057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff1690602001909291908035906020019092919080351515906020019092919050505061250c565b005b610fb960048036036020811015610f8d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061263a565b005b610ffd60048036036020811015610fd157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126a4565b005b6110416004803603602081101561101557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061270e565b604051808260ff1660ff16815260200191505060405180910390f35b6110bf6004803603604081101561107357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061272e565b604051808215151515815260200191505060405180910390f35b6110e1612863565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611121578082015181840152602081019050611106565b50505050905090810190601f16801561114e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61119e6004803603602081101561117257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612905565b005b6111a861296f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156111e85780820151818401526020810190506111cd565b50505050905090810190601f1680156112155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6112656004803603602081101561123957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506129a8565b005b6112b36004803603604081101561127d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612a12565b604051808215151515815260200191505060405180910390f35b611319600480360360408110156112e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612a85565b604051808215151515815260200191505060405180910390f35b61137f6004803603604081101561134957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612b52565b604051808215151515815260200191505060405180910390f35b6113db600480360360208110156113af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c36565b604051808215151515815260200191505060405180910390f35b6113fd612c53565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6114816004803603602081101561145557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c7c565b005b61148b612ce6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156114cb5780820151818401526020810190506114b0565b50505050905090810190601f1680156114f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6115726004803603606081101561151c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612d02565b604051808260ff1660ff16815260200191505060405180910390f35b6115f0600480360360408110156115a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d54565b6040518082815260200191505060405180910390f35b61160e612ddb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561164e578082015181840152602081019050611633565b50505050905090810190601f16801561167b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6116c56004803603604081101561169f57600080fd5b81019080803560ff169060200190929190803560ff169060200190929190505050612e14565b604051808215151515815260200191505060405180910390f35b61172b600480360360408110156116f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e43565b604051808215151515815260200191505060405180910390f35b6117876004803603602081101561175b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eb5565b005b6117cb6004803603602081101561179f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f1f565b005b61180f600480360360208110156117e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f89565b604051808215151515815260200191505060405180910390f35b61183233612246565b611887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180614ea0603a913960400191505060405180910390fd5b6118918282612fa6565b5050565b61189e33611d70565b6118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b6118fc8161319c565b50565b61190833611d70565b61195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b6119668161320d565b50565b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a015780601f106119d657610100808354040283529160200191611a01565b820191906000526020600020905b8154815290600101906020018083116119e457829003601f168201915b5050505050905090565b6000611a1f611a18613270565b8484613278565b6001905092915050565b600081565b600060019054906101000a900460ff1680611a4d5750611a4c61346f565b5b80611a6457506000809054906101000a900460ff16155b611ab9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614dc7602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611b09576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8360339080519060200190611b1f929190614b08565b508260349080519060200190611b36929190614b08565b5081603560006101000a81548160ff021916908360ff1602179055508015611b735760008060016101000a81548160ff0219169083151502179055505b50505050565b611b8233611d70565b611bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611c5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614df56028913960400191505060405180910390fd5b611c6581613486565b50565b6000606a54905090565b609f60009054906101000a900460ff1681565b600181565b60008383836000611c9c848484612d02565b9050600060ff168160ff1614611cb182612263565b90611d57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d1c578082015181840152602081019050611d01565b50505050905090810190601f168015611d495780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611d638888886134f7565b9450505050509392505050565b6000611d8682609d6135d090919063ffffffff16565b9050919050565b611d9633611d70565b611deb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b611df4816136ae565b50565b6000603560009054906101000a900460ff16905090565b6000611eb7611e1b613270565b84611eb28560696000611e2c613270565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461371f90919063ffffffff16565b613278565b6001905092915050565b611eca33612246565b611f1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180614ea0603a913960400191505060405180910390fd5b611f2a8383836137a7565b505050565b611f38336120ae565b611f8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614c246030913960400191505060405180910390fd5b60a660009054906101000a900460ff1661200f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b61201761389d565b565b600281565b600061202933612c36565b61207e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614cfe6030913960400191505060405180910390fd5b61208933848461391d565b905092915050565b60006120a78260a36135d090919063ffffffff16565b9050919050565b60006120c48260a56135d090919063ffffffff16565b9050919050565b6040518060600160405280603d8152602001614e1d603d913981565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b905090565b600060a660009054906101000a900460ff16905090565b61213233611d70565b612187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b61219081613999565b50565b61219c33611d70565b6121f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b6121fa81613a0a565b50565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061225c82609e6135d090919063ffffffff16565b9050919050565b6060600060ff168260ff1614156122b1576040518060400160405280600781526020017f53554343455353000000000000000000000000000000000000000000000000008152509050612348565b600160ff168260ff1614156122e0576040518060600160405280603c8152602001614efe603c91399050612348565b600260ff168260ff16141561230f576040518060600160405280603d8152602001614e1d603d91399050612348565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525090505b919050565b61235633611d70565b6123ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b6123b481613a7b565b50565b6123c033611d70565b612415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b61241e81613aec565b50565b61242a336120ae565b61247f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614c246030913960400191505060405180910390fd5b60a660009054906101000a900460ff1615612502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b61250a613b5d565b565b600060019054906101000a900460ff168061252b575061252a61346f565b5b8061254257506000809054906101000a900460ff16155b612597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614dc7602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156125e7576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6125f2868686611a2e565b6125fd33888561391d565b5061260787613a0a565b6126108261320d565b80156126315760008060016101000a81548160ff0219169083151502179055505b50505050505050565b61264333612246565b612698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180614ea0603a913960400191505060405180910390fd5b6126a181613bdd565b50565b6126ad33611d70565b612702576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b61270b81613d49565b50565b60a06020528060005260406000206000915054906101000a900460ff1681565b6000609f60009054906101000a900460ff1661274d576001905061285d565b600060a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168260ff16148061280a5750600060ff168160ff16145b1561281a5760009250505061285d565b60a160008360ff1660ff16815260200190815260200160002060008260ff1660ff16815260200190815260200160002060009054906101000a900460ff16925050505b92915050565b606060348054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128fb5780601f106128d0576101008083540402835291602001916128fb565b820191906000526020600020905b8154815290600101906020018083116128de57829003601f168201915b5050505050905090565b61290e33611d70565b612963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b61296c81613eea565b50565b6040518060400160405280601281526020017f556e6b6e6f776e204572726f7220436f6465000000000000000000000000000081525081565b6129b133611d70565b612a06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b612a0f81613f5b565b50565b6000612a1d33612091565b612a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180614cce6030913960400191505060405180910390fd5b612a7d338484613fcc565b905092915050565b6000612b48612a92613270565b84612b4385604051806060016040528060258152602001614f3a6025913960696000612abc613270565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546140489092919063ffffffff16565b613278565b6001905092915050565b60003383836000612b64848484612d02565b9050600060ff168160ff1614612b7982612263565b90612c1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612be4578082015181840152602081019050612bc9565b50505050905090810190601f168015612c115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50612c2a8787614108565b94505050505092915050565b6000612c4c8260a26135d090919063ffffffff16565b9050919050565b60007fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf754905090565b612c8533611d70565b612cda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b612ce381614126565b50565b6040518060600160405280603c8152602001614efe603c913981565b6000612d0c612112565b15612d1a5760029050612d4d565b612d2384611d70565b15612d315760009050612d4d565b612d3b848461272e565b612d485760019050612d4d565b600090505b9392505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600781526020017f535543434553530000000000000000000000000000000000000000000000000081525081565b60a16020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000612e4e33612f89565b612ea3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180614c766032913960400191505060405180910390fd5b612ead8383614197565b905092915050565b612ebe33611d70565b612f13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b612f1c81614213565b50565b612f2833611d70565b612f7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d2e602e913960400191505060405180910390fd5b612f8681614284565b50565b6000612f9f8260a46135d090919063ffffffff16565b9050919050565b600060ff168160ff161415613023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f496e76616c69642077686974656c69737420494420737570706c69656400000081525060200191505060405180910390fd5b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690508160a060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600060ff168160ff1614613139573373ffffffffffffffffffffffffffffffffffffffff168160ff168473ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45b3373ffffffffffffffffffffffffffffffffffffffff168260ff168473ffffffffffffffffffffffffffffffffffffffff167fca6d1e885708b837a7647aeb7f4163ee4ca96058e08ac767be8d23c972c5027060405160405180910390a4505050565b6131b08160a36142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f85222465e0d438163a28671b59fc9ebeb03bf39f880ddd36c8315da7512b31c060405160405180910390a350565b80609f60006101000a81548160ff0219169083151502179055508015153373ffffffffffffffffffffffffffffffffffffffff167fb535c5f7f150db8dbf22962fc390e7fa9026b9c29ffad714197bee4620572bd660405160405180910390a350565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156132fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180614eda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613384576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180614c546022913960400191505060405180910390fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000803090506000813b9050600081149250505090565b61349a81609d6142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367960405160405180910390a350565b60006135048484846143b2565b6135c584613510613270565b6135c085604051806060016040528060288152602001614d7d60289139606960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000613576613270565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546140489092919063ffffffff16565b613278565b600190509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613657576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180614da56022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6136c28160a26142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f4b5ef9a786cf64a7d82ebcf2d5132667edc9faef4ac36260d9a9e52c526b623260405160405180910390a350565b60008082840190508381101561379d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600060a160008560ff1660ff16815260200190815260200160002060008460ff1660ff16815260200190815260200160002060009054906101000a900460ff1690508160a160008660ff1660ff16815260200190815260200160002060008560ff1660ff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508260ff168460ff163373ffffffffffffffffffffffffffffffffffffffff167fb0353d563a9aa5231878c83727dc723a3cb8a38c2917f8ac2b777aa564c8a0d584866040518083151515158152602001821515151581526020019250505060405180910390a450505050565b600060a660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000613929838361466c565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8846040518082815260200191505060405180910390a3600190509392505050565b6139ad8160a56142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb75903ade4a0fdb07d60c882c22c779e2e1c751883c37aecdcc92a8ec72b046e60405160405180910390a350565b613a1e81609d61482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a60405160405180910390a350565b613a8f81609e6142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3ed21605dd544629fb45f2ccaedcc095ba1dbea540fb6eaf5493a7479856b0be60405160405180910390a350565b613b008160a561482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fe0953c403a52f9dc1fef4202a8d33975c958b727bee0d7b5b328965ddad98d8160405160405180910390a350565b600160a660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600060a060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050600060ff168160ff161415613c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180614bd16031913960400191505060405180910390fd5b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff168160ff168373ffffffffffffffffffffffffffffffffffffffff167fb50a30a0fa972f89fbb2b514d12b31f5a5d64f53603402de7939742cd8507f6e60405160405180910390a45050565b8073ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015613d8f57600080fd5b505afa158015613da3573d6000803e3d6000fd5b505050506040513d6020811015613db957600080fd5b81019080805190602001909291905050507fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf760001b14613e61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420636f6d70617469626c6500000000000000000000000000000000000081525060200191505060405180910390fd5b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7557feeaed647dc622e55877c30943e5c1d4feb92d1b8cfcc88d974163e9787bde9af81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b613efe8160a461482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f2b5f18afd9a7b21f41bf023b012b3d4c8a22a21b79fa425cd4494ecbe297019660405160405180910390a350565b613f6f8160a261482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3c091dafb1d99e4a4c333024492eac3b2cd8bf921a3dd547c937db33be307bb860405160405180910390a350565b6000613fd88383614904565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fbac40739b0d4ca32fa2d82fc91630465ba3eddd1598da6fca393b26fb63b9453846040518082815260200191505060405180910390a3600190509392505050565b60008383111582906140f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156140ba57808201518184015260208101905061409f565b50505050905090810190601f1680156140e75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600061411c614115613270565b84846143b2565b6001905092915050565b61413a8160a46142f590919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb6fe3ab11eb9ab1d9f1d41c8f42a5d72d10122099ba1548e4a6d1a4d8cefec4b60405160405180910390a350565b60006141a48333846143b2565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb698e31a2abee5824d0d7bcfd2339aead7f9e9ae413fba50bf554ff3fa470b7b846040518082815260200191505060405180910390a36001905092915050565b61422781609e61482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f5f36f4f5999f34947706fca376b955319b858573bf9d6bc59303c9a4cd80ced060405160405180910390a350565b6142988160a361482990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f86515ebaad527298e98929c064c075f5a2604cc80afc0db29e73c01a36f8e98c60405160405180910390a350565b6142ff82826135d0565b614354576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614d5c6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415614438576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180614e7b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156144be576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180614bae6023913960400191505060405180910390fd5b61452a81604051806060016040528060268152602001614ca860269139606860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546140489092919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506145bf81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461371f90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561470f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61472481606a5461371f90919063ffffffff16565b606a8190555061477c81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461371f90919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61483382826135d0565b156148a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561498a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614e5a6021913960400191505060405180910390fd5b6149f681604051806060016040528060228152602001614c0260229139606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546140489092919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614a4e81606a54614abe90919063ffffffff16565b606a81905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000614b0083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614048565b905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614b4957805160ff1916838001178555614b77565b82800160010185558215614b77579182015b82811115614b76578251825591602001919060010190614b5b565b5b509050614b849190614b88565b5090565b614baa91905b80821115614ba6576000816000905550600101614b8e565b5090565b9056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373416464726573732063616e6e6f742062652072656d6f7665642066726f6d20696e76616c69642077686974656c6973742e45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c6545524332303a20617070726f766520746f20746865207a65726f20616464726573735265766f6b6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205265766f6b657220726f6c6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c654f776e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204f776e657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644f776e6572732063616e6e6f742072656d6f7665207468656d73656c766573206173206f776e6572546865207472616e736665722077617320726573747269637465642064756520746f2074686520636f6e7472616374206265696e67207061757365642e45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737357686974656c6973746572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c697374657220726f6c6545524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158202a3fda8b622318d0614adcd8e0ad14e75c7af1eae18f8f6772aef937c35bd91b64736f6c63430005100032",
  "sourceMap": "408:4065:3:-;;;;;;;;;",
  "deployedSourceMap": "408:4065:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;408:4065:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5338:143:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5338:143:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;914:103:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;914:103:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;5133:106:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5133:106:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;739:81:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;739:81:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:149:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2577:149:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;583:38:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;492:182:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:24;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;492:182:24;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:24;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;492:182:24;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;492:182:24;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:24;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;492:182:24;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;689:177:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;689:177:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1636:89:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;373:30:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;627:47:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4256:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4256:215:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;485:105:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;485:105:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;914:95:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;914:95:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;1567:81:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3879:207:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3879:207:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5802:240:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5802:240:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1997:84:6;;;:::i;:::-;;680:40:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;500:143:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;500:143:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;424:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;424:107:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;::13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;424:107:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;905:111:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;905:111:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:145:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;903:76:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;914:95:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;914:95:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;596:87:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;596:87:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1783:108:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1783:108:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;474:117:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;474:117:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2991:526:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2991:526:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2991:526:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:105:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1014:105:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;819:89:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;819:89:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;1824:83:6;;;:::i;:::-;;1207:400:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1207:400:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1207:400:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1207:400:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1207:400:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1207:400:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1207:400:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1207:400:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1207:400:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1207:400:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5580:131:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5580:131:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;1712:122:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1712:122:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;664:51:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;664:51:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4287:773;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4287:773:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;933:85:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;933:85:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:91:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;837:91:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;1022:59:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1022:59:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;819:89:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;819:89:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;511:134:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;511:134:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4573:258:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4573:258:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3957:193:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3957:193:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;424:107:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;424:107:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;685:231:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;934:97:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;934:97:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;782:117:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;782:117:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:751;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2011:751:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2307:132:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2307:132:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;726:50:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;726:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:74:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;871:74:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;547:121:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;547:121:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;909:99:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;909:99:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;819:89:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;819:89:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;434:109:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;434:109:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5338:143:9;362:25:15;376:10;362:13;:25::i;:::-;354:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5434:40:9;5450:12;5464:9;5434:15;:40::i;:::-;5338:143;;:::o;914:103:10:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:22:10;1002:7;988:13;:22::i;:::-;914:103;:::o;5133:106:9:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:29:9;5224:7;5203:20;:29::i;:::-;5133:106;:::o;739:81:24:-;776:13;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;:::o;2577:149:23:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;2715:4;2708:11;;2577:149;;;;:::o;583:38:3:-;620:1;583:38;:::o;492:182:24:-;1024:12:26;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;607:4:24;599:5;:12;;;;;;;;;;;;:::i;:::-;;631:6;621:7;:16;;;;;;;;;;;;:::i;:::-;;659:8;647:9;;:20;;;;;;;;;;;;;;;;;;1268:14:26;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;492:182:24;;;;:::o;689:177:12:-;391:19;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:7;762:21;;:10;:21;;;;754:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:21;851:7;838:12;:21::i;:::-;689:177;:::o;1636:89:23:-;1680:7;1706:12;;1699:19;;1636:89;:::o;373:30:9:-;;;;;;;;;;;;;:::o;627:47:3:-;673:1;627:47;:::o;4256:215::-;4391:12;4357:4;4363:2;4367:5;3673:21;3697:42;3723:4;3729:2;3733:5;3697:25;:42::i;:::-;3673:66;;620:1;3757:31;;:15;:31;;;3790:46;3820:15;3790:29;:46::i;:::-;3749:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3749:88:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4429:35;4448:4;4454:2;4458:5;4429:18;:35::i;:::-;4419:45;;4256:215;;;;;;;;;:::o;485:105:12:-;540:4;563:20;575:7;563;:11;;:20;;;;:::i;:::-;556:27;;485:105;;;:::o;914:95:11:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;980:22:11;994:7;980:13;:22::i;:::-;914:95;:::o;1567:81:24:-;1608:5;1632:9;;;;;;;;;;;1625:16;;1567:81;:::o;3879:207:23:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;4007:25;;;;;;;;;;;;;;;:34;4033:7;4007:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3975:8;:83::i;:::-;4075:4;4068:11;;3879:207;;;;:::o;5802:240:9:-;362:25:15;376:10;362:13;:25::i;:::-;354:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5948:87:9;5980:15;5997:20;6019:15;5948:31;:87::i;:::-;5802:240;;;:::o;1997:84:6:-;327:20:13;336:10;327:8;:20::i;:::-;319:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1323:7:6;;;;;;;;;;;1315:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:19;:17;:19::i;:::-;1997:84::o;680:40:3:-;719:1;680:40;:::o;500:143:5:-;574:4;327:20:11;336:10;327:8;:20::i;:::-;319:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:43:5;610:10;622:7;631:6;595:14;:43::i;:::-;588:50;;500:143;;;;:::o;424:107:10:-;480:4;503:21;516:7;503:8;:12;;:21;;;;:::i;:::-;496:28;;424:107;;;:::o;::13:-;480:4;503:21;516:7;503:8;:12;;:21;;;;:::i;:::-;496:28;;424:107;;;:::o;905:111:3:-;;;;;;;;;;;;;;;;;;;:::o;922:145:7:-;968:7;994:66;987:73;;;;922:145;:::o;903:76:6:-;942:4;965:7;;;;;;;;;;;958:14;;903:76;:::o;914:95:13:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;980:22:13;994:7;980:13;:22::i;:::-;914:95;:::o;596:87:12:-;391:19;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:18;668:7;658:9;:18::i;:::-;596:87;:::o;1783:108:23:-;1840:7;1866:9;:18;1876:7;1866:18;;;;;;;;;;;;;;;;1859:25;;1783:108;;;:::o;474:117:15:-;535:4;558:26;576:7;558:13;:17;;:26;;;;:::i;:::-;551:33;;474:117;;;:::o;2991:526:3:-;3099:13;620:1;3132:31;;:15;:31;;;3128:84;;;3186:15;;;;;;;;;;;;;;;;;3179:22;;;;3128:84;673:1;3226:40;;:15;:40;;;3222:107;;;3289:29;;;;;;;;;;;;;;;;;3282:36;;;;3222:107;719:1;3343:33;;:15;:33;;;3339:93;;;3399:22;;;;;;;;;;;;;;;;;3392:29;;;;3339:93;3497:13;;;;;;;;;;;;;;;;;3490:20;;2991:526;;;;:::o;1014:105:15:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:27:15;1104:7;1085:18;:27::i;:::-;1014:105;:::o;819:89:13:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:19:13;893:7;882:10;:19::i;:::-;819:89;:::o;1824:83:6:-;327:20:13;336:10;327:8;:20::i;:::-;319:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:7:6;;;;;;;;;;;1131:8;1123:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1883:17;:15;:17::i;:::-;1824:83::o;1207:400:3:-;1024:12:26;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1396:48:3;1421:4;1427:6;1435:8;1396:24;:48::i;:::-;1454;1469:10;1481:5;1488:13;1454:14;:48::i;:::-;;1512:26;1532:5;1512:19;:26::i;:::-;1548:52;1583:16;1548:34;:52::i;:::-;1268:14:26;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1207:400:3;;;;;;;:::o;5580:131:9:-;362:25:15;376:10;362:13;:25::i;:::-;354:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5667:37:9;5688:15;5667:20;:37::i;:::-;5580:131;:::o;1712:122:3:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1787:40:3;1816:10;1787:28;:40::i;:::-;1712:122;:::o;664:51:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;4287:773::-;4373:4;4460:18;;;;;;;;;;;4456:59;;4500:4;4493:11;;;;4456:59;4570:21;4594:17;:25;4612:6;4594:25;;;;;;;;;;;;;;;;;;;;;;;;;4570:49;;4629:23;4655:17;:27;4673:8;4655:27;;;;;;;;;;;;;;;;;;;;;;;;;4629:53;;504:1;4775:31;;:15;:31;;;:68;;;;504:1;4810:33;;:17;:33;;;4775:68;4772:109;;;4865:5;4858:12;;;;;;4772:109;4992:25;:42;5018:15;4992:42;;;;;;;;;;;;;;;:61;5035:17;4992:61;;;;;;;;;;;;;;;;;;;;;;;;;4985:68;;;;4287:773;;;;;:::o;933:85:24:-;972:13;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:85;:::o;837:91:14:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:20:14;913:7;901:11;:20::i;:::-;837:91;:::o;1022:59:3:-;;;;;;;;;;;;;;;;;;;:::o;819:89:11:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:19:11;893:7;882:10;:19::i;:::-;819:89;:::o;511:134:4:-;585:4;327:20:10;336:10;327:8;:20::i;:::-;319:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:34:4;612:10;624:7;633:6;606:5;:34::i;:::-;599:41;;511:134;;;;:::o;4573:258:23:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;4706:25;;;;;;;;;;;;;;;:34;4732:7;4706:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4674:8;:129::i;:::-;4820:4;4813:11;;4573:258;;;;:::o;3957:193:3:-;4080:12;4040:10;4052:2;4056:5;3673:21;3697:42;3723:4;3729:2;3733:5;3697:25;:42::i;:::-;3673:66;;620:1;3757:31;;:15;:31;;;3790:46;3820:15;3790:29;:46::i;:::-;3749:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3749:88:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4118:25;4133:2;4137:5;4118:14;:25::i;:::-;4108:35;;3957:193;;;;;;;;:::o;424:107:11:-;480:4;503:21;516:7;503:8;:12;;:21;;;;:::i;:::-;496:28;;424:107;;;:::o;685:231:7:-;733:20;833:66;827:73;811:89;;774:136;:::o;934:97:14:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:23:14;1016:7;1001:14;:23::i;:::-;934:97;:::o;782:117:3:-;;;;;;;;;;;;;;;;;;;:::o;2011:751::-;2127:5;2203:17;:15;:17::i;:::-;2199:69;;;719:1;2236:21;;;;2199:69;2353:23;2371:4;2353:17;:23::i;:::-;2350:72;;;620:1;2392:19;;;;2350:72;2580:31;2602:4;2608:2;2580:21;:31::i;:::-;2576:90;;673:1;2627:28;;;;2576:90;620:1;2736:19;;2011:751;;;;;;:::o;2307:132:23:-;2379:7;2405:11;:18;2417:5;2405:18;;;;;;;;;;;;;;;:27;2424:7;2405:27;;;;;;;;;;;;;;;;2398:34;;2307:132;;;;:::o;726:50:3:-;;;;;;;;;;;;;;;;;;;:::o;871:74:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;547:121:8:-;621:4;334:21:14;344:10;334:9;:21::i;:::-;326:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;642:21:8;650:4;656:6;642:7;:21::i;:::-;635:28;;547:121;;;;:::o;909:99:15:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:24:15;993:7;977:15;:24::i;:::-;909:99;:::o;819:89:10:-;391:19:12;399:10;391:7;:19::i;:::-;383:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:19:10;893:7;882:10;:19::i;:::-;819:89;:::o;434:109:14:-;491:4;514:22;528:7;514:9;:13;;:22;;;;:::i;:::-;507:29;;434:109;;;:::o;1863:810:9:-;504:1;1995:25;;:9;:25;;;;1987:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:23;2135:17;:31;2153:12;2135:31;;;;;;;;;;;;;;;;;;;;;;;;;2109:57;;2254:9;2220:17;:31;2238:12;2220:31;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;504:1;2367:33;;:17;:33;;;2364:183;;2525:10;2464:72;;2506:17;2464:72;;2492:12;2464:72;;;;;;;;;;;;2364:183;2655:10;2606:60;;2644:9;2606:60;;2630:12;2606:60;;;;;;;;;;;;1863:810;;;:::o;674:139:10:-;733:24;749:7;733:8;:15;;:24;;;;:::i;:::-;795:10;772:34;;786:7;772:34;;;;;;;;;;;;674:139;:::o;1478:157:9:-;1562:7;1541:18;;:28;;;;;;;;;;;;;;;;;;1620:7;1584:44;;1608:10;1584:44;;;;;;;;;;;;1478:157;:::o;867:96:20:-;912:15;946:10;939:17;;867:96;:::o;7427:332:23:-;7537:1;7520:19;;:5;:19;;;;7512:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7617:1;7598:21;;:7;:21;;;;7590:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7699:6;7669:11;:18;7681:5;7669:18;;;;;;;;;;;;;;;:27;7688:7;7669:27;;;;;;;;;;;;;;;:36;;;;7736:7;7720:32;;7729:5;7720:32;;;7745:6;7720:32;;;;;;;;;;;;;;;;;;7427:332;;;:::o;1409:498:26:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;1006:136:12:-;1064:23;1079:7;1064;:14;;:23;;;;:::i;:::-;1124:10;1102:33;;1115:7;1102:33;;;;;;;;;;;;1006:136;:::o;3184:300:23:-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;:11;:19;3378:6;3366:19;;;;;;;;;;;;;;;:33;3386:12;:10;:12::i;:::-;3366:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3335:8;:121::i;:::-;3473:4;3466:11;;3184:300;;;;;:::o;779:200:21:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;674:139:11:-;733:24;749:7;733:8;:15;;:24;;;;:::i;:::-;795:10;772:34;;786:7;772:34;;;;;;;;;;;;674:139;:::o;834:176:22:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3556:551:9:-;3725:20;3748:25;:42;3774:15;3748:42;;;;;;;;;;;;;;;:64;3791:20;3748:64;;;;;;;;;;;;;;;;;;;;;;;;;3725:87;;3925:15;3858:25;:42;3884:15;3858:42;;;;;;;;;;;;;;;:64;3901:20;3858:64;;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;4045:20;3991:109;;4028:15;3991:109;;4016:10;3991:109;;;4067:15;4084;3991:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3556:551;;;;:::o;1641:96:6:-;1690:5;1680:7;;:15;;;;;;;;;;;;;;;;;;1710:20;1719:10;1710:20;;;;;;;;;;;;;;;;;;;;;;1641:96::o;261:175:5:-;338:4;352:23;364:2;368:6;352:11;:23::i;:::-;401:2;388:24;;393:6;388:24;;;405:6;388:24;;;;;;;;;;;;;;;;;;427:4;420:11;;261:175;;;;;:::o;674:139:13:-;733:24;749:7;733:8;:15;;:24;;;;:::i;:::-;795:10;772:34;;786:7;772:34;;;;;;;;;;;;674:139;:::o;872:128:12:-;927:20;939:7;927;:11;;:20;;;;:::i;:::-;982:10;962:31;;973:7;962:31;;;;;;;;;;;;872:128;:::o;749:154:15:-;813:29;834:7;813:13;:20;;:29;;;;:::i;:::-;885:10;857:39;;876:7;857:39;;;;;;;;;;;;749:154;:::o;537:131:13:-;593:21;606:7;593:8;:12;;:21;;;;:::i;:::-;650:10;629:32;;641:7;629:32;;;;;;;;;;;;537:131;:::o;1460:91:6:-;1507:4;1497:7;;:14;;;;;;;;;;;;;;;;;;1526:18;1533:10;1526:18;;;;;;;;;;;;;;;;;;;;;;1460:91::o;2793:583:9:-;2911:23;2937:17;:34;2955:15;2937:34;;;;;;;;;;;;;;;;;;;;;;;;;2911:60;;504:1;3048:33;;:17;:33;;;;3040:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:1;3190:17;:34;3208:15;3190:34;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;3358:10;3294:75;;3339:17;3294:75;;3322:15;3294:75;;;;;;;;;;;;2793:583;;:::o;231:448:7:-;408:10;398:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;398:37:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;398:37:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;398:37:7;;;;;;;;;;;;;;;;327:66;319:75;;:116;298:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:10;538:66;531:86;642:30;661:10;642:30;;;;;;;;;;;;;;;;;;;;;;231:448;:::o;549:134:14:-;606:22;620:7;606:9;:13;;:22;;;;:::i;:::-;665:10;643:33;;656:7;643:33;;;;;;;;;;;;549:134;:::o;537:131:11:-;593:21;606:7;593:8;:12;;:21;;;;:::i;:::-;650:10;629:32;;641:7;629:32;;;;;;;;;;;;537:131;:::o;263:181:4:-;342:4;356:25;368:4;374:6;356:11;:25::i;:::-;407:4;394:26;;399:6;394:26;;;413:6;394:26;;;;;;;;;;;;;;;;;;435:4;428:11;;263:181;;;;;:::o;1732:187:22:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;2094:155:23:-;2163:4;2179:42;2189:12;:10;:12::i;:::-;2203:9;2214:6;2179:9;:42::i;:::-;2238:4;2231:11;;2094:155;;;;:::o;689:142:14:-;749:25;766:7;749:9;:16;;:25;;;;:::i;:::-;813:10;789:35;;804:7;789:35;;;;;;;;;;;;689:142;:::o;270:211:8:-;357:4;371:43;387:5;394:10;406:7;371:15;:43::i;:::-;444:5;425:34;;432:10;425:34;;;451:7;425:34;;;;;;;;;;;;;;;;;;472:4;465:11;;270:211;;;;:::o;597:146:15:-;658:26;676:7;658:13;:17;;:26;;;;:::i;:::-;725:10;699:37;;716:7;699:37;;;;;;;;;;;;597:146;:::o;537:131:10:-;593:21;606:7;593:8;:12;;:21;;;;:::i;:::-;650:10;629:32;;641:7;629:32;;;;;;;;;;;;537:131;:::o;510:180:21:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;5305:464:23:-;5420:1;5402:20;;:6;:20;;;;5394:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5503:1;5482:23;;:9;:23;;;;5474:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;:9;:17;5586:6;5576:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5556:9;:17;5566:6;5556:17;;;;;;;;;;;;;;;:91;;;;5680:32;5705:6;5680:9;:20;5690:9;5680:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5657:9;:20;5667:9;5657:20;;;;;;;;;;;;;;;:55;;;;5744:9;5727:35;;5736:6;5727:35;;;5755:6;5727:35;;;;;;;;;;;;;;;;;;5305:464;;;:::o;6039:302::-;6133:1;6114:21;;:7;:21;;;;6106:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:24;6214:6;6197:12;;:16;;:24;;;;:::i;:::-;6182:12;:39;;;;6252:30;6275:6;6252:9;:18;6262:7;6252:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6231:9;:18;6241:7;6231:18;;;;;;;;;;;;;;;:51;;;;6318:7;6297:37;;6314:1;6297:37;;;6327:6;6297:37;;;;;;;;;;;;;;;;;;6039:302;;:::o;260:175:21:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;6660:342:23:-;6754:1;6735:21;;:7;:21;;;;6727:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6826:68;6849:6;6826:68;;;;;;;;;;;;;;;;;:9;:18;6836:7;6826:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;6805:9;:18;6815:7;6805:18;;;;;;;;;;;;;;;:89;;;;6919:24;6936:6;6919:12;;:16;;:24;;;;:::i;:::-;6904:12;:39;;;;6984:1;6958:37;;6967:7;6958:37;;;6988:6;6958:37;;;;;;;;;;;;;;;;;;6660:342;;:::o;1274:134:22:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;408:4065:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"./capabilities/Proxiable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"./ERC1404.sol\";\nimport \"./roles/OwnerRole.sol\";\nimport \"./capabilities/Whitelistable.sol\";\nimport \"./capabilities/Mintable.sol\";\nimport \"./capabilities/Burnable.sol\";\nimport \"./capabilities/Revocable.sol\";\nimport \"./capabilities/Pausable.sol\";\n\ncontract TokenSoftToken is Proxiable, ERC20Detailed, ERC1404, OwnerRole, Whitelistable, Mintable, Burnable, Revocable, Pausable {\n\n    // ERC1404 Error codes and messages\n    uint8 public constant SUCCESS_CODE = 0;\n    uint8 public constant FAILURE_NON_WHITELIST = 1;\n    uint8 public constant FAILURE_PAUSED = 2;\n    string public constant SUCCESS_MESSAGE = \"SUCCESS\";\n    string public constant FAILURE_NON_WHITELIST_MESSAGE = \"The transfer was restricted due to white list configuration.\";\n    string public constant FAILURE_PAUSED_MESSAGE = \"The transfer was restricted due to the contract being paused.\";\n    string public constant UNKNOWN_ERROR = \"Unknown Error Code\";\n\n\n    /**\n    Constructor for the token to set readable details and mint all tokens\n    to the specified owner.\n     */\n    function initialize (address owner, string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, bool whitelistEnabled)\n        public\n        initializer\n    {\n        ERC20Detailed.initialize(name, symbol, decimals);\n        Mintable._mint(msg.sender, owner, initialSupply);\n        OwnerRole._addOwner(owner);\n        Whitelistable._setWhitelistEnabled(whitelistEnabled);\n    }\n\n    /**\n    Public function to update the address of the code contract, retricted to owner\n     */\n    function updateCodeAddress (address newAddress) public onlyOwner {\n        Proxiable._updateCodeAddress(newAddress);\n    }\n\n    /**\n    This function detects whether a transfer should be restricted and not allowed.\n    If the function returns SUCCESS_CODE (0) then it should be allowed.\n     */\n    function detectTransferRestriction (address from, address to, uint256)\n        public\n        view\n        returns (uint8)\n    {\n        // Check the paused status of the contract\n        if (Pausable.paused()) {\n            return FAILURE_PAUSED;\n        }\n\n        // If an owner transferring, then ignore whitelist restrictions\n        if(OwnerRole.isOwner(from)) {\n            return SUCCESS_CODE;\n        }\n\n        // Restrictions are enabled, so verify the whitelist config allows the transfer.\n        // Logic defined in Whitelistable parent class\n        if(!checkWhitelistAllowed(from, to)) {\n            return FAILURE_NON_WHITELIST;\n        }\n\n        // If no restrictions were triggered return success\n        return SUCCESS_CODE;\n    }\n\n    /**\n    This function allows a wallet or other client to get a human readable string to show\n    a user if a transfer was restricted.  It should return enough information for the user\n    to know why it failed.\n     */\n    function messageForTransferRestriction (uint8 restrictionCode)\n        public\n        view\n        returns (string memory)\n    {\n        if (restrictionCode == SUCCESS_CODE) {\n            return SUCCESS_MESSAGE;\n        }\n\n        if (restrictionCode == FAILURE_NON_WHITELIST) {\n            return FAILURE_NON_WHITELIST_MESSAGE;\n        }\n\n        if (restrictionCode == FAILURE_PAUSED) {\n            return FAILURE_PAUSED_MESSAGE;\n        }\n\n        // An unknown error code was passed in.\n        return UNKNOWN_ERROR;\n    }\n\n    /**\n    Evaluates whether a transfer should be allowed or not.\n     */\n    modifier notRestricted (address from, address to, uint256 value) {\n        uint8 restrictionCode = detectTransferRestriction(from, to, value);\n        require(restrictionCode == SUCCESS_CODE, messageForTransferRestriction(restrictionCode));\n        _;\n    }\n\n    /**\n    Overrides the parent class token transfer function to enforce restrictions.\n     */\n    function transfer (address to, uint256 value)\n        public\n        notRestricted(msg.sender, to, value)\n        returns (bool success)\n    {\n        success = ERC20.transfer(to, value);\n    }\n\n    /**\n    Overrides the parent class token transferFrom function to enforce restrictions.\n     */\n    function transferFrom (address from, address to, uint256 value)\n        public\n        notRestricted(from, to, value)\n        returns (bool success)\n    {\n        success = ERC20.transferFrom(from, to, value);\n    }\n}\n",
  "sourcePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol",
  "ast": {
    "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol",
    "exportedSymbols": {
      "TokenSoftToken": [
        353
      ]
    },
    "id": 354,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 97,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Proxiable.sol",
        "file": "./capabilities/Proxiable.sol",
        "id": 98,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 622,
        "src": "25:38:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 99,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 3209,
        "src": "64:90:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/ERC1404.sol",
        "file": "./ERC1404.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 24,
        "src": "155:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/OwnerRole.sol",
        "file": "./roles/OwnerRole.sol",
        "id": 101,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 1294,
        "src": "179:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Whitelistable.sol",
        "file": "./capabilities/Whitelistable.sol",
        "id": 102,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 970,
        "src": "211:42:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Mintable.sol",
        "file": "./capabilities/Mintable.sol",
        "id": 103,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 481,
        "src": "254:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Burnable.sol",
        "file": "./capabilities/Burnable.sol",
        "id": 104,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 417,
        "src": "292:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Revocable.sol",
        "file": "./capabilities/Revocable.sol",
        "id": 105,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 684,
        "src": "330:38:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Pausable.sol",
        "file": "./capabilities/Pausable.sol",
        "id": 106,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 576,
        "src": "369:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 107,
              "name": "Proxiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 621,
              "src": "435:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxiable_$621",
                "typeString": "contract Proxiable"
              }
            },
            "id": 108,
            "nodeType": "InheritanceSpecifier",
            "src": "435:9:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 109,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3208,
              "src": "446:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3208",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 110,
            "nodeType": "InheritanceSpecifier",
            "src": "446:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 111,
              "name": "ERC1404",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23,
              "src": "461:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1404_$23",
                "typeString": "contract ERC1404"
              }
            },
            "id": 112,
            "nodeType": "InheritanceSpecifier",
            "src": "461:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 113,
              "name": "OwnerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1293,
              "src": "470:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerRole_$1293",
                "typeString": "contract OwnerRole"
              }
            },
            "id": 114,
            "nodeType": "InheritanceSpecifier",
            "src": "470:9:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 115,
              "name": "Whitelistable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 969,
              "src": "481:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelistable_$969",
                "typeString": "contract Whitelistable"
              }
            },
            "id": 116,
            "nodeType": "InheritanceSpecifier",
            "src": "481:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 117,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 480,
              "src": "496:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$480",
                "typeString": "contract Mintable"
              }
            },
            "id": 118,
            "nodeType": "InheritanceSpecifier",
            "src": "496:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 119,
              "name": "Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 416,
              "src": "506:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Burnable_$416",
                "typeString": "contract Burnable"
              }
            },
            "id": 120,
            "nodeType": "InheritanceSpecifier",
            "src": "506:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 121,
              "name": "Revocable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 683,
              "src": "516:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Revocable_$683",
                "typeString": "contract Revocable"
              }
            },
            "id": 122,
            "nodeType": "InheritanceSpecifier",
            "src": "516:9:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 123,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 575,
              "src": "527:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$575",
                "typeString": "contract Pausable"
              }
            },
            "id": 124,
            "nodeType": "InheritanceSpecifier",
            "src": "527:8:3"
          }
        ],
        "contractDependencies": [
          23,
          416,
          480,
          575,
          621,
          683,
          969,
          1074,
          1179,
          1293,
          1398,
          1503,
          1608,
          2461,
          3141,
          3208,
          3277,
          3346
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 353,
        "linearizedBaseContracts": [
          353,
          575,
          1398,
          683,
          1503,
          416,
          1074,
          480,
          1179,
          969,
          1608,
          1293,
          3141,
          23,
          3208,
          3277,
          2461,
          3346,
          621
        ],
        "name": "TokenSoftToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 127,
            "name": "SUCCESS_CODE",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "583:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 125,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "583:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 126,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "620:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 130,
            "name": "FAILURE_NON_WHITELIST",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "627:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 128,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "627:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "673:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 133,
            "name": "FAILURE_PAUSED",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "680:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 131,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "680:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 132,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "719:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 136,
            "name": "SUCCESS_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "726:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 134,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "726:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554343455353",
              "id": 135,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "767:9:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
                "typeString": "literal_string \"SUCCESS\""
              },
              "value": "SUCCESS"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 139,
            "name": "FAILURE_NON_WHITELIST_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "782:117:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 137,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "782:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e",
              "id": 138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "837:62:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e2c08a66f2b86feb88c976c9f1fd6dfebdf34e61c54a5cf461a34d6ed427b2fc",
                "typeString": "literal_string \"The transfer was restricted due to white list configuration.\""
              },
              "value": "The transfer was restricted due to white list configuration."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 142,
            "name": "FAILURE_PAUSED_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "905:111:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 140,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "905:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f2074686520636f6e7472616374206265696e67207061757365642e",
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "953:63:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ad9af571a3b442df832ef21fd7c443d0876ede9535ce3c723edddbbdbeaba383",
                "typeString": "literal_string \"The transfer was restricted due to the contract being paused.\""
              },
              "value": "The transfer was restricted due to the contract being paused."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 145,
            "name": "UNKNOWN_ERROR",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "1022:59:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 143,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1022:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "556e6b6e6f776e204572726f7220436f6465",
              "id": 144,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1061:20:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eff12b0856ae7501c8b50262ed26026205f1ee274bd4090cd444e8ef0358a146",
                "typeString": "literal_string \"Unknown Error Code\""
              },
              "value": "Unknown Error Code"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "1386:221:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "1421:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1427:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1435:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3208,
                        "src": "1396:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3208_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3179,
                      "src": "1396:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3361,
                          "src": "1469:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1469:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "1481:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "1488:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1454:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mintable_$480_$",
                          "typeString": "type(contract Mintable)"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "1454:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "1532:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 179,
                        "name": "OwnerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "1512:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnerRole_$1293_$",
                          "typeString": "type(contract OwnerRole)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1274,
                      "src": "1512:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "whitelistEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1583:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "Whitelistable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "1548:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Whitelistable_$969_$",
                          "typeString": "type(contract Whitelistable)"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setWhitelistEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 753,
                      "src": "1548:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:52:3"
                }
              ]
            },
            "documentation": "Constructor for the token to set readable details and mint all tokens\nto the specified owner.",
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 159,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3321,
                  "src": "1370:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1370:11:3"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1228:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1243:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1263:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1285:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1301:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "whitelistEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1324:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1227:119:3"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:3"
            },
            "scope": 353,
            "src": "1207:400:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1777:57:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "1816:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "Proxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "1787:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Proxiable_$621_$",
                          "typeString": "type(contract Proxiable)"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_updateCodeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 605,
                      "src": "1787:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1787:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:40:3"
                }
              ]
            },
            "documentation": "Public function to update the address of the code contract, retricted to owner",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 197,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 196,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1211,
                  "src": "1767:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1767:9:3"
              }
            ],
            "name": "updateCodeAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1740:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1739:20:3"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:3"
            },
            "scope": 353,
            "src": "1712:122:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "2138:624:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "2203:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$575_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "2203:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 223,
                  "nodeType": "IfStatement",
                  "src": "2199:69:3",
                  "trueBody": {
                    "id": 222,
                    "nodeType": "Block",
                    "src": "2222:46:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "FAILURE_PAUSED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "2243:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 216,
                        "id": 221,
                        "nodeType": "Return",
                        "src": "2236:21:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2371:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "OwnerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "2353:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnerRole_$1293_$",
                          "typeString": "type(contract OwnerRole)"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1224,
                      "src": "2353:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 231,
                  "nodeType": "IfStatement",
                  "src": "2350:72:3",
                  "trueBody": {
                    "id": 230,
                    "nodeType": "Block",
                    "src": "2378:44:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 228,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "2399:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 216,
                        "id": 229,
                        "nodeType": "Return",
                        "src": "2392:19:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2579:32:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 233,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2602:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 234,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2608:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 232,
                        "name": "checkWhitelistAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "2580:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address,address) view returns (bool)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2580:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 240,
                  "nodeType": "IfStatement",
                  "src": "2576:90:3",
                  "trueBody": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "2613:53:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 237,
                          "name": "FAILURE_NON_WHITELIST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "2634:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 216,
                        "id": 238,
                        "nodeType": "Return",
                        "src": "2627:28:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 241,
                    "name": "SUCCESS_CODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "2743:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 216,
                  "id": 242,
                  "nodeType": "Return",
                  "src": "2736:19:3"
                }
              ]
            },
            "documentation": "This function detects whether a transfer should be restricted and not allowed.\nIf the function returns SUCCESS_CODE (0) then it should be allowed.",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "detectTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2047:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2047:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2061:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2073:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2046:35:3"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2127:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2126:7:3"
            },
            "scope": 353,
            "src": "2011:751:3",
            "stateMutability": "view",
            "superFunction": 15,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3118:399:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 251,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3132:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "SUCCESS_CODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3151:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3132:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 257,
                  "nodeType": "IfStatement",
                  "src": "3128:84:3",
                  "trueBody": {
                    "id": 256,
                    "nodeType": "Block",
                    "src": "3165:47:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 254,
                          "name": "SUCCESS_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "3186:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 250,
                        "id": 255,
                        "nodeType": "Return",
                        "src": "3179:22:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 258,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3226:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 259,
                      "name": "FAILURE_NON_WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "3245:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3226:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 264,
                  "nodeType": "IfStatement",
                  "src": "3222:107:3",
                  "trueBody": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "3268:61:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "FAILURE_NON_WHITELIST_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "3289:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 250,
                        "id": 262,
                        "nodeType": "Return",
                        "src": "3282:36:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 265,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3343:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 266,
                      "name": "FAILURE_PAUSED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3362:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3343:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 271,
                  "nodeType": "IfStatement",
                  "src": "3339:93:3",
                  "trueBody": {
                    "id": 270,
                    "nodeType": "Block",
                    "src": "3378:54:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "FAILURE_PAUSED_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3399:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 250,
                        "id": 269,
                        "nodeType": "Return",
                        "src": "3392:29:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 272,
                    "name": "UNKNOWN_ERROR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "3497:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 250,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "3490:20:3"
                }
              ]
            },
            "documentation": "This function allows a wallet or other client to get a human readable string to show\na user if a transfer was restricted.  It should return enough information for the user\nto know why it failed.",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageForTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "name": "restrictionCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3031:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3030:23:3"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3099:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3098:15:3"
            },
            "scope": 353,
            "src": "2991:526:3",
            "stateMutability": "view",
            "superFunction": 22,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "3663:192:3",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "name": "restrictionCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3673:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 283,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3673:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 290,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "3723:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3729:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 288,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3733:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "detectTransferRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        244
                      ],
                      "referencedDeclaration": 244,
                      "src": "3697:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                        "typeString": "function (address,address,uint256) view returns (uint8)"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3697:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3673:66:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 292,
                          "name": "restrictionCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "3757:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 293,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "3776:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3757:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 296,
                            "name": "restrictionCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "3820:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 295,
                          "name": "messageForTransferRestriction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            275
                          ],
                          "referencedDeclaration": 275,
                          "src": "3790:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint8) view returns (string memory)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3364,
                        3365
                      ],
                      "referencedDeclaration": 3365,
                      "src": "3749:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3749:88:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:88:3"
                },
                {
                  "id": 300,
                  "nodeType": "PlaceholderStatement",
                  "src": "3847:1:3"
                }
              ]
            },
            "documentation": "Evaluates whether a transfer should be allowed or not.",
            "id": 302,
            "name": "notRestricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3622:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3636:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3648:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3621:41:3"
            },
            "src": "3598:257:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "4098:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 317,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "4108:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 320,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "4133:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 321,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "4137:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 318,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3141,
                          "src": "4118:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3141_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2795,
                        "src": "4118:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4118:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4108:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:35:3"
                }
              ]
            },
            "documentation": "Overrides the parent class token transfer function to enforce restrictions.",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3361,
                      "src": "4040:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4040:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 311,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 304,
                    "src": "4052:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 312,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 306,
                    "src": "4056:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 313,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 308,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 302,
                  "src": "4026:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4026:36:3"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "3976:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3976:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "3988:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3988:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3975:27:3"
            },
            "returnParameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "4080:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4079:14:3"
            },
            "scope": 353,
            "src": "3957:193:3",
            "stateMutability": "nonpayable",
            "superFunction": 2795,
            "visibility": "public"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "4409:62:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "4419:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 345,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "4448:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 346,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "4454:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 347,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "4458:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 343,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3141,
                          "src": "4429:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3141_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2866,
                        "src": "4429:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) returns (bool)"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4429:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4419:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:45:3"
                }
              ]
            },
            "documentation": "Overrides the parent class token transferFrom function to enforce restrictions.",
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 335,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 328,
                    "src": "4357:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 336,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 330,
                    "src": "4363:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 337,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 332,
                    "src": "4367:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 338,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 334,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 302,
                  "src": "4343:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4343:30:3"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4279:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4293:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4293:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4305:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4305:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4278:41:3"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4391:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4390:14:3"
            },
            "scope": 353,
            "src": "4256:215:3",
            "stateMutability": "nonpayable",
            "superFunction": 2866,
            "visibility": "public"
          }
        ],
        "scope": 354,
        "src": "408:4065:3"
      }
    ],
    "src": "0:4474:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/TokenSoftToken.sol",
    "exportedSymbols": {
      "TokenSoftToken": [
        353
      ]
    },
    "id": 354,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 97,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Proxiable.sol",
        "file": "./capabilities/Proxiable.sol",
        "id": 98,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 622,
        "src": "25:38:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 99,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 3209,
        "src": "64:90:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/ERC1404.sol",
        "file": "./ERC1404.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 24,
        "src": "155:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/roles/OwnerRole.sol",
        "file": "./roles/OwnerRole.sol",
        "id": 101,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 1294,
        "src": "179:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Whitelistable.sol",
        "file": "./capabilities/Whitelistable.sol",
        "id": 102,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 970,
        "src": "211:42:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Mintable.sol",
        "file": "./capabilities/Mintable.sol",
        "id": 103,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 481,
        "src": "254:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Burnable.sol",
        "file": "./capabilities/Burnable.sol",
        "id": 104,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 417,
        "src": "292:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Revocable.sol",
        "file": "./capabilities/Revocable.sol",
        "id": 105,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 684,
        "src": "330:38:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/james/Source/tokensoft/tokensoft_token/contracts/capabilities/Pausable.sol",
        "file": "./capabilities/Pausable.sol",
        "id": 106,
        "nodeType": "ImportDirective",
        "scope": 354,
        "sourceUnit": 576,
        "src": "369:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 107,
              "name": "Proxiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 621,
              "src": "435:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxiable_$621",
                "typeString": "contract Proxiable"
              }
            },
            "id": 108,
            "nodeType": "InheritanceSpecifier",
            "src": "435:9:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 109,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3208,
              "src": "446:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3208",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 110,
            "nodeType": "InheritanceSpecifier",
            "src": "446:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 111,
              "name": "ERC1404",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23,
              "src": "461:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1404_$23",
                "typeString": "contract ERC1404"
              }
            },
            "id": 112,
            "nodeType": "InheritanceSpecifier",
            "src": "461:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 113,
              "name": "OwnerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1293,
              "src": "470:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnerRole_$1293",
                "typeString": "contract OwnerRole"
              }
            },
            "id": 114,
            "nodeType": "InheritanceSpecifier",
            "src": "470:9:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 115,
              "name": "Whitelistable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 969,
              "src": "481:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelistable_$969",
                "typeString": "contract Whitelistable"
              }
            },
            "id": 116,
            "nodeType": "InheritanceSpecifier",
            "src": "481:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 117,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 480,
              "src": "496:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$480",
                "typeString": "contract Mintable"
              }
            },
            "id": 118,
            "nodeType": "InheritanceSpecifier",
            "src": "496:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 119,
              "name": "Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 416,
              "src": "506:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Burnable_$416",
                "typeString": "contract Burnable"
              }
            },
            "id": 120,
            "nodeType": "InheritanceSpecifier",
            "src": "506:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 121,
              "name": "Revocable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 683,
              "src": "516:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Revocable_$683",
                "typeString": "contract Revocable"
              }
            },
            "id": 122,
            "nodeType": "InheritanceSpecifier",
            "src": "516:9:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 123,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 575,
              "src": "527:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$575",
                "typeString": "contract Pausable"
              }
            },
            "id": 124,
            "nodeType": "InheritanceSpecifier",
            "src": "527:8:3"
          }
        ],
        "contractDependencies": [
          23,
          416,
          480,
          575,
          621,
          683,
          969,
          1074,
          1179,
          1293,
          1398,
          1503,
          1608,
          2461,
          3141,
          3208,
          3277,
          3346
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 353,
        "linearizedBaseContracts": [
          353,
          575,
          1398,
          683,
          1503,
          416,
          1074,
          480,
          1179,
          969,
          1608,
          1293,
          3141,
          23,
          3208,
          3277,
          2461,
          3346,
          621
        ],
        "name": "TokenSoftToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 127,
            "name": "SUCCESS_CODE",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "583:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 125,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "583:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 126,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "620:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 130,
            "name": "FAILURE_NON_WHITELIST",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "627:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 128,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "627:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "673:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 133,
            "name": "FAILURE_PAUSED",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "680:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 131,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "680:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 132,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "719:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 136,
            "name": "SUCCESS_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "726:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 134,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "726:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53554343455353",
              "id": 135,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "767:9:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_39bf027dd97f3bae0cf8cfb909695ec63313a9bd61ad52fc7f52cf565b141da8",
                "typeString": "literal_string \"SUCCESS\""
              },
              "value": "SUCCESS"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 139,
            "name": "FAILURE_NON_WHITELIST_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "782:117:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 137,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "782:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f207768697465206c69737420636f6e66696775726174696f6e2e",
              "id": 138,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "837:62:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e2c08a66f2b86feb88c976c9f1fd6dfebdf34e61c54a5cf461a34d6ed427b2fc",
                "typeString": "literal_string \"The transfer was restricted due to white list configuration.\""
              },
              "value": "The transfer was restricted due to white list configuration."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 142,
            "name": "FAILURE_PAUSED_MESSAGE",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "905:111:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 140,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "905:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546865207472616e736665722077617320726573747269637465642064756520746f2074686520636f6e7472616374206265696e67207061757365642e",
              "id": 141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "953:63:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ad9af571a3b442df832ef21fd7c443d0876ede9535ce3c723edddbbdbeaba383",
                "typeString": "literal_string \"The transfer was restricted due to the contract being paused.\""
              },
              "value": "The transfer was restricted due to the contract being paused."
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 145,
            "name": "UNKNOWN_ERROR",
            "nodeType": "VariableDeclaration",
            "scope": 353,
            "src": "1022:59:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 143,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1022:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "556e6b6e6f776e204572726f7220436f6465",
              "id": 144,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1061:20:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eff12b0856ae7501c8b50262ed26026205f1ee274bd4090cd444e8ef0358a146",
                "typeString": "literal_string \"Unknown Error Code\""
              },
              "value": "Unknown Error Code"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "1386:221:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "1421:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1427:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1435:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3208,
                        "src": "1396:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3208_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3179,
                      "src": "1396:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3361,
                          "src": "1469:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1469:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "1481:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "1488:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1454:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mintable_$480_$",
                          "typeString": "type(contract Mintable)"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "1454:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "1532:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 179,
                        "name": "OwnerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "1512:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnerRole_$1293_$",
                          "typeString": "type(contract OwnerRole)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1274,
                      "src": "1512:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "whitelistEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1583:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "Whitelistable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "1548:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Whitelistable_$969_$",
                          "typeString": "type(contract Whitelistable)"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setWhitelistEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 753,
                      "src": "1548:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:52:3"
                }
              ]
            },
            "documentation": "Constructor for the token to set readable details and mint all tokens\nto the specified owner.",
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 159,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3321,
                  "src": "1370:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1370:11:3"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1228:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1243:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1263:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1285:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1301:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "whitelistEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1324:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1227:119:3"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:3"
            },
            "scope": 353,
            "src": "1207:400:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1777:57:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "1816:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "Proxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "1787:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Proxiable_$621_$",
                          "typeString": "type(contract Proxiable)"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_updateCodeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 605,
                      "src": "1787:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1787:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:40:3"
                }
              ]
            },
            "documentation": "Public function to update the address of the code contract, retricted to owner",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 197,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 196,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1211,
                  "src": "1767:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1767:9:3"
              }
            ],
            "name": "updateCodeAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1740:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1739:20:3"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:3"
            },
            "scope": 353,
            "src": "1712:122:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "2138:624:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "2203:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$575_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "2203:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 223,
                  "nodeType": "IfStatement",
                  "src": "2199:69:3",
                  "trueBody": {
                    "id": 222,
                    "nodeType": "Block",
                    "src": "2222:46:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "FAILURE_PAUSED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "2243:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 216,
                        "id": 221,
                        "nodeType": "Return",
                        "src": "2236:21:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2371:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "OwnerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "2353:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnerRole_$1293_$",
                          "typeString": "type(contract OwnerRole)"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1224,
                      "src": "2353:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 231,
                  "nodeType": "IfStatement",
                  "src": "2350:72:3",
                  "trueBody": {
                    "id": 230,
                    "nodeType": "Block",
                    "src": "2378:44:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 228,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "2399:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 216,
                        "id": 229,
                        "nodeType": "Return",
                        "src": "2392:19:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2579:32:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 233,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2602:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 234,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2608:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 232,
                        "name": "checkWhitelistAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "2580:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address,address) view returns (bool)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2580:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 240,
                  "nodeType": "IfStatement",
                  "src": "2576:90:3",
                  "trueBody": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "2613:53:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 237,
                          "name": "FAILURE_NON_WHITELIST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "2634:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 216,
                        "id": 238,
                        "nodeType": "Return",
                        "src": "2627:28:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 241,
                    "name": "SUCCESS_CODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "2743:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 216,
                  "id": 242,
                  "nodeType": "Return",
                  "src": "2736:19:3"
                }
              ]
            },
            "documentation": "This function detects whether a transfer should be restricted and not allowed.\nIf the function returns SUCCESS_CODE (0) then it should be allowed.",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "detectTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2047:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2047:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2061:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2073:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2046:35:3"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2127:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2126:7:3"
            },
            "scope": 353,
            "src": "2011:751:3",
            "stateMutability": "view",
            "superFunction": 15,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3118:399:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 251,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3132:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "SUCCESS_CODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3151:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3132:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 257,
                  "nodeType": "IfStatement",
                  "src": "3128:84:3",
                  "trueBody": {
                    "id": 256,
                    "nodeType": "Block",
                    "src": "3165:47:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 254,
                          "name": "SUCCESS_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "3186:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 250,
                        "id": 255,
                        "nodeType": "Return",
                        "src": "3179:22:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 258,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3226:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 259,
                      "name": "FAILURE_NON_WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "3245:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3226:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 264,
                  "nodeType": "IfStatement",
                  "src": "3222:107:3",
                  "trueBody": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "3268:61:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "FAILURE_NON_WHITELIST_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "3289:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 250,
                        "id": 262,
                        "nodeType": "Return",
                        "src": "3282:36:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 265,
                      "name": "restrictionCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3343:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 266,
                      "name": "FAILURE_PAUSED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3362:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3343:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 271,
                  "nodeType": "IfStatement",
                  "src": "3339:93:3",
                  "trueBody": {
                    "id": 270,
                    "nodeType": "Block",
                    "src": "3378:54:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "FAILURE_PAUSED_MESSAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3399:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 250,
                        "id": 269,
                        "nodeType": "Return",
                        "src": "3392:29:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 272,
                    "name": "UNKNOWN_ERROR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "3497:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 250,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "3490:20:3"
                }
              ]
            },
            "documentation": "This function allows a wallet or other client to get a human readable string to show\na user if a transfer was restricted.  It should return enough information for the user\nto know why it failed.",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageForTransferRestriction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "name": "restrictionCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3031:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3030:23:3"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3099:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3098:15:3"
            },
            "scope": 353,
            "src": "2991:526:3",
            "stateMutability": "view",
            "superFunction": 22,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "3663:192:3",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "name": "restrictionCode",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3673:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 283,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3673:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 290,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "3723:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3729:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 288,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3733:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "detectTransferRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        244
                      ],
                      "referencedDeclaration": 244,
                      "src": "3697:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                        "typeString": "function (address,address,uint256) view returns (uint8)"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3697:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3673:66:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 292,
                          "name": "restrictionCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "3757:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 293,
                          "name": "SUCCESS_CODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "3776:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3757:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 296,
                            "name": "restrictionCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "3820:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 295,
                          "name": "messageForTransferRestriction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            275
                          ],
                          "referencedDeclaration": 275,
                          "src": "3790:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint8) view returns (string memory)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3364,
                        3365
                      ],
                      "referencedDeclaration": 3365,
                      "src": "3749:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3749:88:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:88:3"
                },
                {
                  "id": 300,
                  "nodeType": "PlaceholderStatement",
                  "src": "3847:1:3"
                }
              ]
            },
            "documentation": "Evaluates whether a transfer should be allowed or not.",
            "id": 302,
            "name": "notRestricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3622:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3636:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3648:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3621:41:3"
            },
            "src": "3598:257:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "4098:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 317,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "4108:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 320,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "4133:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 321,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "4137:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 318,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3141,
                          "src": "4118:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3141_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2795,
                        "src": "4118:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4118:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4108:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:35:3"
                }
              ]
            },
            "documentation": "Overrides the parent class token transfer function to enforce restrictions.",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3361,
                      "src": "4040:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4040:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 311,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 304,
                    "src": "4052:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 312,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 306,
                    "src": "4056:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 313,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 308,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 302,
                  "src": "4026:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4026:36:3"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "3976:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3976:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "3988:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3988:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3975:27:3"
            },
            "returnParameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "4080:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4079:14:3"
            },
            "scope": 353,
            "src": "3957:193:3",
            "stateMutability": "nonpayable",
            "superFunction": 2795,
            "visibility": "public"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "4409:62:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "4419:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 345,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "4448:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 346,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "4454:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 347,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "4458:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 343,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3141,
                          "src": "4429:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3141_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2866,
                        "src": "4429:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) returns (bool)"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4429:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4419:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:45:3"
                }
              ]
            },
            "documentation": "Overrides the parent class token transferFrom function to enforce restrictions.",
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 335,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 328,
                    "src": "4357:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 336,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 330,
                    "src": "4363:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 337,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 332,
                    "src": "4367:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 338,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 334,
                  "name": "notRestricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 302,
                  "src": "4343:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$_t_address_$_t_uint256_$",
                    "typeString": "modifier (address,address,uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4343:30:3"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4279:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4293:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4293:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4305:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4305:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4278:41:3"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4391:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4390:14:3"
            },
            "scope": 353,
            "src": "4256:215:3",
            "stateMutability": "nonpayable",
            "superFunction": 2866,
            "visibility": "public"
          }
        ],
        "scope": 354,
        "src": "408:4065:3"
      }
    ],
    "src": "0:4474:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-06-15T19:08:21.445Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Called by an Owner to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "unpause()": {
        "details": "Called by an Owner to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {
      "addToWhitelist(address,uint8)": {
        "notice": "Public function that allows admins to remove an address from a whitelist"
      },
      "burn(address,uint256)": {
        "notice": "Allow Burners to burn tokens from valid addresses"
      },
      "checkWhitelistAllowed(address,address)": {
        "notice": "Determine if the a sender is allowed to send to the receiver. The source whitelist must be enabled to send to the whitelist where the receive exists."
      },
      "detectTransferRestriction(address,address,uint256)": {
        "notice": "This function detects whether a transfer should be restricted and not allowed. If the function returns SUCCESS_CODE (0) then it should be allowed."
      },
      "initialize(address,string,string,uint8,uint256,bool)": {
        "notice": "Constructor for the token to set readable details and mint all tokens to the specified owner."
      },
      "messageForTransferRestriction(uint8)": {
        "notice": "This function allows a wallet or other client to get a human readable string to show a user if a transfer was restricted.  It should return enough information for the user to know why it failed."
      },
      "mint(address,uint256)": {
        "notice": "Allow Owners to mint tokens to valid addresses"
      },
      "removeFromWhitelist(address)": {
        "notice": "Public function that allows admins to remove an address from a whitelist"
      },
      "revoke(address,uint256)": {
        "notice": "Allow Admins to revoke tokens from any address"
      },
      "setWhitelistEnabled(bool)": {
        "notice": "Enable or disable the whitelist enforcement"
      },
      "transfer(address,uint256)": {
        "notice": "Overrides the parent class token transfer function to enforce restrictions."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Overrides the parent class token transferFrom function to enforce restrictions."
      },
      "updateCodeAddress(address)": {
        "notice": "Public function to update the address of the code contract, retricted to owner"
      },
      "updateOutboundWhitelistEnabled(uint8,uint8,bool)": {
        "notice": "Public function that allows admins to update outbound whitelists"
      }
    }
  }
}